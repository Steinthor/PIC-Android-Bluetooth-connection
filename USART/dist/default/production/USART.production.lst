

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Dec 11 02:29:45 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  001C                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  008C                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008E                     	;# 
    73  008F                     	;# 
    74  0090                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0093                     	;# 
    78  0094                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0110                     	;# 
    95  0110                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011C                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011E                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  018F                     	;# 
   135  0190                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0196                     	;# 
   139  0197                     	;# 
   140  0198                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  020F                     	;# 
   149  020F                     	;# 
   150  0210                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0218                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021D                     	;# 
   172  021E                     	;# 
   173  021F                     	;# 
   174  028C                     	;# 
   175  028C                     	;# 
   176  028D                     	;# 
   177  028D                     	;# 
   178  028E                     	;# 
   179  028F                     	;# 
   180  0290                     	;# 
   181  0290                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0296                     	;# 
   191  0297                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  030C                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  030E                     	;# 
   205  030F                     	;# 
   206  0310                     	;# 
   207  0310                     	;# 
   208  0311                     	;# 
   209  0312                     	;# 
   210  0313                     	;# 
   211  0314                     	;# 
   212  0314                     	;# 
   213  0315                     	;# 
   214  0316                     	;# 
   215  0317                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  031B                     	;# 
   221  031C                     	;# 
   222  031C                     	;# 
   223  031D                     	;# 
   224  031E                     	;# 
   225  031F                     	;# 
   226  038C                     	;# 
   227  038D                     	;# 
   228  038E                     	;# 
   229  0390                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  040C                     	;# 
   233  040D                     	;# 
   234  040E                     	;# 
   235  040F                     	;# 
   236  0410                     	;# 
   237  0411                     	;# 
   238  0416                     	;# 
   239  0416                     	;# 
   240  0417                     	;# 
   241  0418                     	;# 
   242  0418                     	;# 
   243  0419                     	;# 
   244  041A                     	;# 
   245  041A                     	;# 
   246  041B                     	;# 
   247  041C                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  041F                     	;# 
   252  048C                     	;# 
   253  048C                     	;# 
   254  048D                     	;# 
   255  048E                     	;# 
   256  048F                     	;# 
   257  048F                     	;# 
   258  0490                     	;# 
   259  0491                     	;# 
   260  0492                     	;# 
   261  0492                     	;# 
   262  0493                     	;# 
   263  0494                     	;# 
   264  0495                     	;# 
   265  0495                     	;# 
   266  0496                     	;# 
   267  0497                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049C                     	;# 
   273  049D                     	;# 
   274  050C                     	;# 
   275  050C                     	;# 
   276  050D                     	;# 
   277  050E                     	;# 
   278  050F                     	;# 
   279  050F                     	;# 
   280  0510                     	;# 
   281  0511                     	;# 
   282  0512                     	;# 
   283  0512                     	;# 
   284  0513                     	;# 
   285  0514                     	;# 
   286  0515                     	;# 
   287  0515                     	;# 
   288  0516                     	;# 
   289  0517                     	;# 
   290  0518                     	;# 
   291  0519                     	;# 
   292  051A                     	;# 
   293  051B                     	;# 
   294  051C                     	;# 
   295  051D                     	;# 
   296  058C                     	;# 
   297  058C                     	;# 
   298  058D                     	;# 
   299  058E                     	;# 
   300  058F                     	;# 
   301  058F                     	;# 
   302  0590                     	;# 
   303  0591                     	;# 
   304  0592                     	;# 
   305  0593                     	;# 
   306  060C                     	;# 
   307  060D                     	;# 
   308  060E                     	;# 
   309  060F                     	;# 
   310  0610                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0614                     	;# 
   315  0616                     	;# 
   316  0617                     	;# 
   317  0618                     	;# 
   318  0619                     	;# 
   319  061A                     	;# 
   320  061B                     	;# 
   321  061C                     	;# 
   322  061D                     	;# 
   323  061E                     	;# 
   324  068C                     	;# 
   325  068D                     	;# 
   326  068E                     	;# 
   327  068F                     	;# 
   328  0690                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  070C                     	;# 
   334  070D                     	;# 
   335  070E                     	;# 
   336  070F                     	;# 
   337  0710                     	;# 
   338  0711                     	;# 
   339  0712                     	;# 
   340  0713                     	;# 
   341  0714                     	;# 
   342  0716                     	;# 
   343  0717                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  071A                     	;# 
   347  071B                     	;# 
   348  071C                     	;# 
   349  071D                     	;# 
   350  071E                     	;# 
   351  0796                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  079B                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080F                     	;# 
   361  0810                     	;# 
   362  0811                     	;# 
   363  0812                     	;# 
   364  0813                     	;# 
   365  0814                     	;# 
   366  081A                     	;# 
   367  081B                     	;# 
   368  081C                     	;# 
   369  081D                     	;# 
   370  081E                     	;# 
   371  081F                     	;# 
   372  088C                     	;# 
   373  088D                     	;# 
   374  088E                     	;# 
   375  088F                     	;# 
   376  0890                     	;# 
   377  0891                     	;# 
   378  0892                     	;# 
   379  0893                     	;# 
   380  0895                     	;# 
   381  0896                     	;# 
   382  0897                     	;# 
   383  0898                     	;# 
   384  0899                     	;# 
   385  089A                     	;# 
   386  089B                     	;# 
   387  090C                     	;# 
   388  090E                     	;# 
   389  090F                     	;# 
   390  091F                     	;# 
   391  091F                     	;# 
   392  098F                     	;# 
   393  098F                     	;# 
   394  0990                     	;# 
   395  0991                     	;# 
   396  0992                     	;# 
   397  0993                     	;# 
   398  0994                     	;# 
   399  0995                     	;# 
   400  0996                     	;# 
   401  0997                     	;# 
   402  0E0F                     	;# 
   403  0E10                     	;# 
   404  0E11                     	;# 
   405  0E12                     	;# 
   406  0E13                     	;# 
   407  0E14                     	;# 
   408  0E15                     	;# 
   409  0E16                     	;# 
   410  0E17                     	;# 
   411  0E18                     	;# 
   412  0E19                     	;# 
   413  0E1A                     	;# 
   414  0E1B                     	;# 
   415  0E1C                     	;# 
   416  0E1D                     	;# 
   417  0E1E                     	;# 
   418  0E1F                     	;# 
   419  0E20                     	;# 
   420  0E21                     	;# 
   421  0E22                     	;# 
   422  0E23                     	;# 
   423  0E24                     	;# 
   424  0E25                     	;# 
   425  0E26                     	;# 
   426  0E27                     	;# 
   427  0E28                     	;# 
   428  0E29                     	;# 
   429  0E2A                     	;# 
   430  0E2B                     	;# 
   431  0E2C                     	;# 
   432  0E2D                     	;# 
   433  0E2E                     	;# 
   434  0E2F                     	;# 
   435  0E30                     	;# 
   436  0E31                     	;# 
   437  0E32                     	;# 
   438  0E33                     	;# 
   439  0E34                     	;# 
   440  0E35                     	;# 
   441  0E36                     	;# 
   442  0E37                     	;# 
   443  0E8F                     	;# 
   444  0E90                     	;# 
   445  0E91                     	;# 
   446  0E92                     	;# 
   447  0E93                     	;# 
   448  0E94                     	;# 
   449  0E95                     	;# 
   450  0E96                     	;# 
   451  0E97                     	;# 
   452  0E9C                     	;# 
   453  0E9D                     	;# 
   454  0E9E                     	;# 
   455  0EA1                     	;# 
   456  0EA2                     	;# 
   457  0EA3                     	;# 
   458  0EA4                     	;# 
   459  0EA5                     	;# 
   460  0EA9                     	;# 
   461  0EAA                     	;# 
   462  0EAB                     	;# 
   463  0EAC                     	;# 
   464  0EB1                     	;# 
   465  0EB2                     	;# 
   466  0EB3                     	;# 
   467  0EB8                     	;# 
   468  0EB9                     	;# 
   469  0EBA                     	;# 
   470  0EBB                     	;# 
   471  0EBC                     	;# 
   472  0EBD                     	;# 
   473  0EBE                     	;# 
   474  0EC3                     	;# 
   475  0EC5                     	;# 
   476  0EC6                     	;# 
   477  0EC7                     	;# 
   478  0EC8                     	;# 
   479  0EC9                     	;# 
   480  0ECA                     	;# 
   481  0ECB                     	;# 
   482  0ECC                     	;# 
   483  0F10                     	;# 
   484  0F11                     	;# 
   485  0F12                     	;# 
   486  0F13                     	;# 
   487  0F14                     	;# 
   488  0F15                     	;# 
   489  0F16                     	;# 
   490  0F17                     	;# 
   491  0F18                     	;# 
   492  0F19                     	;# 
   493  0F1A                     	;# 
   494  0F1B                     	;# 
   495  0F1C                     	;# 
   496  0F1D                     	;# 
   497  0F1E                     	;# 
   498  0F1F                     	;# 
   499  0F20                     	;# 
   500  0F21                     	;# 
   501  0F22                     	;# 
   502  0F23                     	;# 
   503  0F24                     	;# 
   504  0F25                     	;# 
   505  0F26                     	;# 
   506  0F27                     	;# 
   507  0F38                     	;# 
   508  0F39                     	;# 
   509  0F3A                     	;# 
   510  0F3B                     	;# 
   511  0F3C                     	;# 
   512  0F3D                     	;# 
   513  0F3E                     	;# 
   514  0F3F                     	;# 
   515  0F40                     	;# 
   516  0F41                     	;# 
   517  0F43                     	;# 
   518  0F44                     	;# 
   519  0F45                     	;# 
   520  0F46                     	;# 
   521  0F47                     	;# 
   522  0F48                     	;# 
   523  0F49                     	;# 
   524  0F4A                     	;# 
   525  0F4B                     	;# 
   526  0F4C                     	;# 
   527  0F4E                     	;# 
   528  0F4F                     	;# 
   529  0F50                     	;# 
   530  0F51                     	;# 
   531  0F52                     	;# 
   532  0F53                     	;# 
   533  0F54                     	;# 
   534  0F55                     	;# 
   535  0F56                     	;# 
   536  0F57                     	;# 
   537  0F65                     	;# 
   538  0F68                     	;# 
   539  0F69                     	;# 
   540  0F6A                     	;# 
   541  0F6B                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  001C                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  008E                     	;# 
   586  008F                     	;# 
   587  0090                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  0110                     	;# 
   608  0110                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0112                     	;# 
   612  0113                     	;# 
   613  0114                     	;# 
   614  0114                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0119                     	;# 
   620  0119                     	;# 
   621  0119                     	;# 
   622  011A                     	;# 
   623  011A                     	;# 
   624  011A                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011B                     	;# 
   628  011B                     	;# 
   629  011B                     	;# 
   630  011C                     	;# 
   631  011C                     	;# 
   632  011C                     	;# 
   633  011D                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  011E                     	;# 
   637  011E                     	;# 
   638  011E                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  011F                     	;# 
   642  011F                     	;# 
   643  011F                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  018E                     	;# 
   647  018F                     	;# 
   648  0190                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0196                     	;# 
   652  0197                     	;# 
   653  0198                     	;# 
   654  0199                     	;# 
   655  019A                     	;# 
   656  019B                     	;# 
   657  019C                     	;# 
   658  020C                     	;# 
   659  020D                     	;# 
   660  020E                     	;# 
   661  020F                     	;# 
   662  020F                     	;# 
   663  0210                     	;# 
   664  0210                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0214                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0216                     	;# 
   673  0216                     	;# 
   674  0217                     	;# 
   675  0217                     	;# 
   676  0218                     	;# 
   677  0219                     	;# 
   678  021A                     	;# 
   679  021B                     	;# 
   680  021B                     	;# 
   681  021C                     	;# 
   682  021C                     	;# 
   683  021D                     	;# 
   684  021D                     	;# 
   685  021E                     	;# 
   686  021F                     	;# 
   687  028C                     	;# 
   688  028C                     	;# 
   689  028D                     	;# 
   690  028D                     	;# 
   691  028E                     	;# 
   692  028F                     	;# 
   693  0290                     	;# 
   694  0290                     	;# 
   695  0291                     	;# 
   696  0292                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0293                     	;# 
   700  0294                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0296                     	;# 
   704  0297                     	;# 
   705  0298                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  0299                     	;# 
   709  029A                     	;# 
   710  029B                     	;# 
   711  029C                     	;# 
   712  029C                     	;# 
   713  029D                     	;# 
   714  030C                     	;# 
   715  030C                     	;# 
   716  030D                     	;# 
   717  030E                     	;# 
   718  030F                     	;# 
   719  0310                     	;# 
   720  0310                     	;# 
   721  0311                     	;# 
   722  0312                     	;# 
   723  0313                     	;# 
   724  0314                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0316                     	;# 
   728  0317                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031B                     	;# 
   734  031C                     	;# 
   735  031C                     	;# 
   736  031D                     	;# 
   737  031E                     	;# 
   738  031F                     	;# 
   739  038C                     	;# 
   740  038D                     	;# 
   741  038E                     	;# 
   742  0390                     	;# 
   743  0391                     	;# 
   744  0392                     	;# 
   745  040C                     	;# 
   746  040D                     	;# 
   747  040E                     	;# 
   748  040F                     	;# 
   749  0410                     	;# 
   750  0411                     	;# 
   751  0416                     	;# 
   752  0416                     	;# 
   753  0417                     	;# 
   754  0418                     	;# 
   755  0418                     	;# 
   756  0419                     	;# 
   757  041A                     	;# 
   758  041A                     	;# 
   759  041B                     	;# 
   760  041C                     	;# 
   761  041C                     	;# 
   762  041D                     	;# 
   763  041E                     	;# 
   764  041F                     	;# 
   765  048C                     	;# 
   766  048C                     	;# 
   767  048D                     	;# 
   768  048E                     	;# 
   769  048F                     	;# 
   770  048F                     	;# 
   771  0490                     	;# 
   772  0491                     	;# 
   773  0492                     	;# 
   774  0492                     	;# 
   775  0493                     	;# 
   776  0494                     	;# 
   777  0495                     	;# 
   778  0495                     	;# 
   779  0496                     	;# 
   780  0497                     	;# 
   781  0498                     	;# 
   782  0499                     	;# 
   783  049A                     	;# 
   784  049B                     	;# 
   785  049C                     	;# 
   786  049D                     	;# 
   787  050C                     	;# 
   788  050C                     	;# 
   789  050D                     	;# 
   790  050E                     	;# 
   791  050F                     	;# 
   792  050F                     	;# 
   793  0510                     	;# 
   794  0511                     	;# 
   795  0512                     	;# 
   796  0512                     	;# 
   797  0513                     	;# 
   798  0514                     	;# 
   799  0515                     	;# 
   800  0515                     	;# 
   801  0516                     	;# 
   802  0517                     	;# 
   803  0518                     	;# 
   804  0519                     	;# 
   805  051A                     	;# 
   806  051B                     	;# 
   807  051C                     	;# 
   808  051D                     	;# 
   809  058C                     	;# 
   810  058C                     	;# 
   811  058D                     	;# 
   812  058E                     	;# 
   813  058F                     	;# 
   814  058F                     	;# 
   815  0590                     	;# 
   816  0591                     	;# 
   817  0592                     	;# 
   818  0593                     	;# 
   819  060C                     	;# 
   820  060D                     	;# 
   821  060E                     	;# 
   822  060F                     	;# 
   823  0610                     	;# 
   824  0611                     	;# 
   825  0612                     	;# 
   826  0613                     	;# 
   827  0614                     	;# 
   828  0616                     	;# 
   829  0617                     	;# 
   830  0618                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061D                     	;# 
   836  061E                     	;# 
   837  068C                     	;# 
   838  068D                     	;# 
   839  068E                     	;# 
   840  068F                     	;# 
   841  0690                     	;# 
   842  0691                     	;# 
   843  0692                     	;# 
   844  0693                     	;# 
   845  0694                     	;# 
   846  070C                     	;# 
   847  070D                     	;# 
   848  070E                     	;# 
   849  070F                     	;# 
   850  0710                     	;# 
   851  0711                     	;# 
   852  0712                     	;# 
   853  0713                     	;# 
   854  0714                     	;# 
   855  0716                     	;# 
   856  0717                     	;# 
   857  0718                     	;# 
   858  0719                     	;# 
   859  071A                     	;# 
   860  071B                     	;# 
   861  071C                     	;# 
   862  071D                     	;# 
   863  071E                     	;# 
   864  0796                     	;# 
   865  0797                     	;# 
   866  0798                     	;# 
   867  0799                     	;# 
   868  079A                     	;# 
   869  079B                     	;# 
   870  080C                     	;# 
   871  080D                     	;# 
   872  080E                     	;# 
   873  080F                     	;# 
   874  0810                     	;# 
   875  0811                     	;# 
   876  0812                     	;# 
   877  0813                     	;# 
   878  0814                     	;# 
   879  081A                     	;# 
   880  081B                     	;# 
   881  081C                     	;# 
   882  081D                     	;# 
   883  081E                     	;# 
   884  081F                     	;# 
   885  088C                     	;# 
   886  088D                     	;# 
   887  088E                     	;# 
   888  088F                     	;# 
   889  0890                     	;# 
   890  0891                     	;# 
   891  0892                     	;# 
   892  0893                     	;# 
   893  0895                     	;# 
   894  0896                     	;# 
   895  0897                     	;# 
   896  0898                     	;# 
   897  0899                     	;# 
   898  089A                     	;# 
   899  089B                     	;# 
   900  090C                     	;# 
   901  090E                     	;# 
   902  090F                     	;# 
   903  091F                     	;# 
   904  091F                     	;# 
   905  098F                     	;# 
   906  098F                     	;# 
   907  0990                     	;# 
   908  0991                     	;# 
   909  0992                     	;# 
   910  0993                     	;# 
   911  0994                     	;# 
   912  0995                     	;# 
   913  0996                     	;# 
   914  0997                     	;# 
   915  0E0F                     	;# 
   916  0E10                     	;# 
   917  0E11                     	;# 
   918  0E12                     	;# 
   919  0E13                     	;# 
   920  0E14                     	;# 
   921  0E15                     	;# 
   922  0E16                     	;# 
   923  0E17                     	;# 
   924  0E18                     	;# 
   925  0E19                     	;# 
   926  0E1A                     	;# 
   927  0E1B                     	;# 
   928  0E1C                     	;# 
   929  0E1D                     	;# 
   930  0E1E                     	;# 
   931  0E1F                     	;# 
   932  0E20                     	;# 
   933  0E21                     	;# 
   934  0E22                     	;# 
   935  0E23                     	;# 
   936  0E24                     	;# 
   937  0E25                     	;# 
   938  0E26                     	;# 
   939  0E27                     	;# 
   940  0E28                     	;# 
   941  0E29                     	;# 
   942  0E2A                     	;# 
   943  0E2B                     	;# 
   944  0E2C                     	;# 
   945  0E2D                     	;# 
   946  0E2E                     	;# 
   947  0E2F                     	;# 
   948  0E30                     	;# 
   949  0E31                     	;# 
   950  0E32                     	;# 
   951  0E33                     	;# 
   952  0E34                     	;# 
   953  0E35                     	;# 
   954  0E36                     	;# 
   955  0E37                     	;# 
   956  0E8F                     	;# 
   957  0E90                     	;# 
   958  0E91                     	;# 
   959  0E92                     	;# 
   960  0E93                     	;# 
   961  0E94                     	;# 
   962  0E95                     	;# 
   963  0E96                     	;# 
   964  0E97                     	;# 
   965  0E9C                     	;# 
   966  0E9D                     	;# 
   967  0E9E                     	;# 
   968  0EA1                     	;# 
   969  0EA2                     	;# 
   970  0EA3                     	;# 
   971  0EA4                     	;# 
   972  0EA5                     	;# 
   973  0EA9                     	;# 
   974  0EAA                     	;# 
   975  0EAB                     	;# 
   976  0EAC                     	;# 
   977  0EB1                     	;# 
   978  0EB2                     	;# 
   979  0EB3                     	;# 
   980  0EB8                     	;# 
   981  0EB9                     	;# 
   982  0EBA                     	;# 
   983  0EBB                     	;# 
   984  0EBC                     	;# 
   985  0EBD                     	;# 
   986  0EBE                     	;# 
   987  0EC3                     	;# 
   988  0EC5                     	;# 
   989  0EC6                     	;# 
   990  0EC7                     	;# 
   991  0EC8                     	;# 
   992  0EC9                     	;# 
   993  0ECA                     	;# 
   994  0ECB                     	;# 
   995  0ECC                     	;# 
   996  0F10                     	;# 
   997  0F11                     	;# 
   998  0F12                     	;# 
   999  0F13                     	;# 
  1000  0F14                     	;# 
  1001  0F15                     	;# 
  1002  0F16                     	;# 
  1003  0F17                     	;# 
  1004  0F18                     	;# 
  1005  0F19                     	;# 
  1006  0F1A                     	;# 
  1007  0F1B                     	;# 
  1008  0F1C                     	;# 
  1009  0F1D                     	;# 
  1010  0F1E                     	;# 
  1011  0F1F                     	;# 
  1012  0F20                     	;# 
  1013  0F21                     	;# 
  1014  0F22                     	;# 
  1015  0F23                     	;# 
  1016  0F24                     	;# 
  1017  0F25                     	;# 
  1018  0F26                     	;# 
  1019  0F27                     	;# 
  1020  0F38                     	;# 
  1021  0F39                     	;# 
  1022  0F3A                     	;# 
  1023  0F3B                     	;# 
  1024  0F3C                     	;# 
  1025  0F3D                     	;# 
  1026  0F3E                     	;# 
  1027  0F3F                     	;# 
  1028  0F40                     	;# 
  1029  0F41                     	;# 
  1030  0F43                     	;# 
  1031  0F44                     	;# 
  1032  0F45                     	;# 
  1033  0F46                     	;# 
  1034  0F47                     	;# 
  1035  0F48                     	;# 
  1036  0F49                     	;# 
  1037  0F4A                     	;# 
  1038  0F4B                     	;# 
  1039  0F4C                     	;# 
  1040  0F4E                     	;# 
  1041  0F4F                     	;# 
  1042  0F50                     	;# 
  1043  0F51                     	;# 
  1044  0F52                     	;# 
  1045  0F53                     	;# 
  1046  0F54                     	;# 
  1047  0F55                     	;# 
  1048  0F56                     	;# 
  1049  0F57                     	;# 
  1050  0F65                     	;# 
  1051  0F68                     	;# 
  1052  0F69                     	;# 
  1053  0F6A                     	;# 
  1054  0F6B                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066  0000                     	;# 
  1067  0001                     	;# 
  1068  0002                     	;# 
  1069  0003                     	;# 
  1070  0004                     	;# 
  1071  0005                     	;# 
  1072  0006                     	;# 
  1073  0007                     	;# 
  1074  0008                     	;# 
  1075  0009                     	;# 
  1076  000A                     	;# 
  1077  000B                     	;# 
  1078  000C                     	;# 
  1079  000D                     	;# 
  1080  000E                     	;# 
  1081  0010                     	;# 
  1082  0011                     	;# 
  1083  0012                     	;# 
  1084  0013                     	;# 
  1085  0016                     	;# 
  1086  0017                     	;# 
  1087  0018                     	;# 
  1088  001C                     	;# 
  1089  001C                     	;# 
  1090  001D                     	;# 
  1091  001D                     	;# 
  1092  001E                     	;# 
  1093  001F                     	;# 
  1094  008C                     	;# 
  1095  008C                     	;# 
  1096  008D                     	;# 
  1097  008E                     	;# 
  1098  008E                     	;# 
  1099  008F                     	;# 
  1100  0090                     	;# 
  1101  0090                     	;# 
  1102  0091                     	;# 
  1103  0093                     	;# 
  1104  0094                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  010C                     	;# 
  1116  010D                     	;# 
  1117  010E                     	;# 
  1118  010E                     	;# 
  1119  010F                     	;# 
  1120  0110                     	;# 
  1121  0110                     	;# 
  1122  0111                     	;# 
  1123  0112                     	;# 
  1124  0112                     	;# 
  1125  0113                     	;# 
  1126  0114                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0116                     	;# 
  1131  0117                     	;# 
  1132  0119                     	;# 
  1133  0119                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011A                     	;# 
  1137  011A                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011B                     	;# 
  1143  011C                     	;# 
  1144  011C                     	;# 
  1145  011C                     	;# 
  1146  011D                     	;# 
  1147  011D                     	;# 
  1148  011D                     	;# 
  1149  011E                     	;# 
  1150  011E                     	;# 
  1151  011E                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  011F                     	;# 
  1157  018C                     	;# 
  1158  018D                     	;# 
  1159  018E                     	;# 
  1160  018F                     	;# 
  1161  0190                     	;# 
  1162  0191                     	;# 
  1163  0192                     	;# 
  1164  0196                     	;# 
  1165  0197                     	;# 
  1166  0198                     	;# 
  1167  0199                     	;# 
  1168  019A                     	;# 
  1169  019B                     	;# 
  1170  019C                     	;# 
  1171  020C                     	;# 
  1172  020D                     	;# 
  1173  020E                     	;# 
  1174  020F                     	;# 
  1175  020F                     	;# 
  1176  0210                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0216                     	;# 
  1187  0217                     	;# 
  1188  0217                     	;# 
  1189  0218                     	;# 
  1190  0219                     	;# 
  1191  021A                     	;# 
  1192  021B                     	;# 
  1193  021B                     	;# 
  1194  021C                     	;# 
  1195  021C                     	;# 
  1196  021D                     	;# 
  1197  021D                     	;# 
  1198  021E                     	;# 
  1199  021F                     	;# 
  1200  028C                     	;# 
  1201  028C                     	;# 
  1202  028D                     	;# 
  1203  028D                     	;# 
  1204  028E                     	;# 
  1205  028F                     	;# 
  1206  0290                     	;# 
  1207  0290                     	;# 
  1208  0291                     	;# 
  1209  0292                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0293                     	;# 
  1213  0294                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0296                     	;# 
  1217  0297                     	;# 
  1218  0298                     	;# 
  1219  0298                     	;# 
  1220  0299                     	;# 
  1221  0299                     	;# 
  1222  029A                     	;# 
  1223  029B                     	;# 
  1224  029C                     	;# 
  1225  029C                     	;# 
  1226  029D                     	;# 
  1227  030C                     	;# 
  1228  030C                     	;# 
  1229  030D                     	;# 
  1230  030E                     	;# 
  1231  030F                     	;# 
  1232  0310                     	;# 
  1233  0310                     	;# 
  1234  0311                     	;# 
  1235  0312                     	;# 
  1236  0313                     	;# 
  1237  0314                     	;# 
  1238  0314                     	;# 
  1239  0315                     	;# 
  1240  0316                     	;# 
  1241  0317                     	;# 
  1242  0318                     	;# 
  1243  0318                     	;# 
  1244  0319                     	;# 
  1245  031A                     	;# 
  1246  031B                     	;# 
  1247  031C                     	;# 
  1248  031C                     	;# 
  1249  031D                     	;# 
  1250  031E                     	;# 
  1251  031F                     	;# 
  1252  038C                     	;# 
  1253  038D                     	;# 
  1254  038E                     	;# 
  1255  0390                     	;# 
  1256  0391                     	;# 
  1257  0392                     	;# 
  1258  040C                     	;# 
  1259  040D                     	;# 
  1260  040E                     	;# 
  1261  040F                     	;# 
  1262  0410                     	;# 
  1263  0411                     	;# 
  1264  0416                     	;# 
  1265  0416                     	;# 
  1266  0417                     	;# 
  1267  0418                     	;# 
  1268  0418                     	;# 
  1269  0419                     	;# 
  1270  041A                     	;# 
  1271  041A                     	;# 
  1272  041B                     	;# 
  1273  041C                     	;# 
  1274  041C                     	;# 
  1275  041D                     	;# 
  1276  041E                     	;# 
  1277  041F                     	;# 
  1278  048C                     	;# 
  1279  048C                     	;# 
  1280  048D                     	;# 
  1281  048E                     	;# 
  1282  048F                     	;# 
  1283  048F                     	;# 
  1284  0490                     	;# 
  1285  0491                     	;# 
  1286  0492                     	;# 
  1287  0492                     	;# 
  1288  0493                     	;# 
  1289  0494                     	;# 
  1290  0495                     	;# 
  1291  0495                     	;# 
  1292  0496                     	;# 
  1293  0497                     	;# 
  1294  0498                     	;# 
  1295  0499                     	;# 
  1296  049A                     	;# 
  1297  049B                     	;# 
  1298  049C                     	;# 
  1299  049D                     	;# 
  1300  050C                     	;# 
  1301  050C                     	;# 
  1302  050D                     	;# 
  1303  050E                     	;# 
  1304  050F                     	;# 
  1305  050F                     	;# 
  1306  0510                     	;# 
  1307  0511                     	;# 
  1308  0512                     	;# 
  1309  0512                     	;# 
  1310  0513                     	;# 
  1311  0514                     	;# 
  1312  0515                     	;# 
  1313  0515                     	;# 
  1314  0516                     	;# 
  1315  0517                     	;# 
  1316  0518                     	;# 
  1317  0519                     	;# 
  1318  051A                     	;# 
  1319  051B                     	;# 
  1320  051C                     	;# 
  1321  051D                     	;# 
  1322  058C                     	;# 
  1323  058C                     	;# 
  1324  058D                     	;# 
  1325  058E                     	;# 
  1326  058F                     	;# 
  1327  058F                     	;# 
  1328  0590                     	;# 
  1329  0591                     	;# 
  1330  0592                     	;# 
  1331  0593                     	;# 
  1332  060C                     	;# 
  1333  060D                     	;# 
  1334  060E                     	;# 
  1335  060F                     	;# 
  1336  0610                     	;# 
  1337  0611                     	;# 
  1338  0612                     	;# 
  1339  0613                     	;# 
  1340  0614                     	;# 
  1341  0616                     	;# 
  1342  0617                     	;# 
  1343  0618                     	;# 
  1344  0619                     	;# 
  1345  061A                     	;# 
  1346  061B                     	;# 
  1347  061C                     	;# 
  1348  061D                     	;# 
  1349  061E                     	;# 
  1350  068C                     	;# 
  1351  068D                     	;# 
  1352  068E                     	;# 
  1353  068F                     	;# 
  1354  0690                     	;# 
  1355  0691                     	;# 
  1356  0692                     	;# 
  1357  0693                     	;# 
  1358  0694                     	;# 
  1359  070C                     	;# 
  1360  070D                     	;# 
  1361  070E                     	;# 
  1362  070F                     	;# 
  1363  0710                     	;# 
  1364  0711                     	;# 
  1365  0712                     	;# 
  1366  0713                     	;# 
  1367  0714                     	;# 
  1368  0716                     	;# 
  1369  0717                     	;# 
  1370  0718                     	;# 
  1371  0719                     	;# 
  1372  071A                     	;# 
  1373  071B                     	;# 
  1374  071C                     	;# 
  1375  071D                     	;# 
  1376  071E                     	;# 
  1377  0796                     	;# 
  1378  0797                     	;# 
  1379  0798                     	;# 
  1380  0799                     	;# 
  1381  079A                     	;# 
  1382  079B                     	;# 
  1383  080C                     	;# 
  1384  080D                     	;# 
  1385  080E                     	;# 
  1386  080F                     	;# 
  1387  0810                     	;# 
  1388  0811                     	;# 
  1389  0812                     	;# 
  1390  0813                     	;# 
  1391  0814                     	;# 
  1392  081A                     	;# 
  1393  081B                     	;# 
  1394  081C                     	;# 
  1395  081D                     	;# 
  1396  081E                     	;# 
  1397  081F                     	;# 
  1398  088C                     	;# 
  1399  088D                     	;# 
  1400  088E                     	;# 
  1401  088F                     	;# 
  1402  0890                     	;# 
  1403  0891                     	;# 
  1404  0892                     	;# 
  1405  0893                     	;# 
  1406  0895                     	;# 
  1407  0896                     	;# 
  1408  0897                     	;# 
  1409  0898                     	;# 
  1410  0899                     	;# 
  1411  089A                     	;# 
  1412  089B                     	;# 
  1413  090C                     	;# 
  1414  090E                     	;# 
  1415  090F                     	;# 
  1416  091F                     	;# 
  1417  091F                     	;# 
  1418  098F                     	;# 
  1419  098F                     	;# 
  1420  0990                     	;# 
  1421  0991                     	;# 
  1422  0992                     	;# 
  1423  0993                     	;# 
  1424  0994                     	;# 
  1425  0995                     	;# 
  1426  0996                     	;# 
  1427  0997                     	;# 
  1428  0E0F                     	;# 
  1429  0E10                     	;# 
  1430  0E11                     	;# 
  1431  0E12                     	;# 
  1432  0E13                     	;# 
  1433  0E14                     	;# 
  1434  0E15                     	;# 
  1435  0E16                     	;# 
  1436  0E17                     	;# 
  1437  0E18                     	;# 
  1438  0E19                     	;# 
  1439  0E1A                     	;# 
  1440  0E1B                     	;# 
  1441  0E1C                     	;# 
  1442  0E1D                     	;# 
  1443  0E1E                     	;# 
  1444  0E1F                     	;# 
  1445  0E20                     	;# 
  1446  0E21                     	;# 
  1447  0E22                     	;# 
  1448  0E23                     	;# 
  1449  0E24                     	;# 
  1450  0E25                     	;# 
  1451  0E26                     	;# 
  1452  0E27                     	;# 
  1453  0E28                     	;# 
  1454  0E29                     	;# 
  1455  0E2A                     	;# 
  1456  0E2B                     	;# 
  1457  0E2C                     	;# 
  1458  0E2D                     	;# 
  1459  0E2E                     	;# 
  1460  0E2F                     	;# 
  1461  0E30                     	;# 
  1462  0E31                     	;# 
  1463  0E32                     	;# 
  1464  0E33                     	;# 
  1465  0E34                     	;# 
  1466  0E35                     	;# 
  1467  0E36                     	;# 
  1468  0E37                     	;# 
  1469  0E8F                     	;# 
  1470  0E90                     	;# 
  1471  0E91                     	;# 
  1472  0E92                     	;# 
  1473  0E93                     	;# 
  1474  0E94                     	;# 
  1475  0E95                     	;# 
  1476  0E96                     	;# 
  1477  0E97                     	;# 
  1478  0E9C                     	;# 
  1479  0E9D                     	;# 
  1480  0E9E                     	;# 
  1481  0EA1                     	;# 
  1482  0EA2                     	;# 
  1483  0EA3                     	;# 
  1484  0EA4                     	;# 
  1485  0EA5                     	;# 
  1486  0EA9                     	;# 
  1487  0EAA                     	;# 
  1488  0EAB                     	;# 
  1489  0EAC                     	;# 
  1490  0EB1                     	;# 
  1491  0EB2                     	;# 
  1492  0EB3                     	;# 
  1493  0EB8                     	;# 
  1494  0EB9                     	;# 
  1495  0EBA                     	;# 
  1496  0EBB                     	;# 
  1497  0EBC                     	;# 
  1498  0EBD                     	;# 
  1499  0EBE                     	;# 
  1500  0EC3                     	;# 
  1501  0EC5                     	;# 
  1502  0EC6                     	;# 
  1503  0EC7                     	;# 
  1504  0EC8                     	;# 
  1505  0EC9                     	;# 
  1506  0ECA                     	;# 
  1507  0ECB                     	;# 
  1508  0ECC                     	;# 
  1509  0F10                     	;# 
  1510  0F11                     	;# 
  1511  0F12                     	;# 
  1512  0F13                     	;# 
  1513  0F14                     	;# 
  1514  0F15                     	;# 
  1515  0F16                     	;# 
  1516  0F17                     	;# 
  1517  0F18                     	;# 
  1518  0F19                     	;# 
  1519  0F1A                     	;# 
  1520  0F1B                     	;# 
  1521  0F1C                     	;# 
  1522  0F1D                     	;# 
  1523  0F1E                     	;# 
  1524  0F1F                     	;# 
  1525  0F20                     	;# 
  1526  0F21                     	;# 
  1527  0F22                     	;# 
  1528  0F23                     	;# 
  1529  0F24                     	;# 
  1530  0F25                     	;# 
  1531  0F26                     	;# 
  1532  0F27                     	;# 
  1533  0F38                     	;# 
  1534  0F39                     	;# 
  1535  0F3A                     	;# 
  1536  0F3B                     	;# 
  1537  0F3C                     	;# 
  1538  0F3D                     	;# 
  1539  0F3E                     	;# 
  1540  0F3F                     	;# 
  1541  0F40                     	;# 
  1542  0F41                     	;# 
  1543  0F43                     	;# 
  1544  0F44                     	;# 
  1545  0F45                     	;# 
  1546  0F46                     	;# 
  1547  0F47                     	;# 
  1548  0F48                     	;# 
  1549  0F49                     	;# 
  1550  0F4A                     	;# 
  1551  0F4B                     	;# 
  1552  0F4C                     	;# 
  1553  0F4E                     	;# 
  1554  0F4F                     	;# 
  1555  0F50                     	;# 
  1556  0F51                     	;# 
  1557  0F52                     	;# 
  1558  0F53                     	;# 
  1559  0F54                     	;# 
  1560  0F55                     	;# 
  1561  0F56                     	;# 
  1562  0F57                     	;# 
  1563  0F65                     	;# 
  1564  0F68                     	;# 
  1565  0F69                     	;# 
  1566  0F6A                     	;# 
  1567  0F6B                     	;# 
  1568  0FE4                     	;# 
  1569  0FE5                     	;# 
  1570  0FE6                     	;# 
  1571  0FE7                     	;# 
  1572  0FE8                     	;# 
  1573  0FE9                     	;# 
  1574  0FEA                     	;# 
  1575  0FEB                     	;# 
  1576  0FED                     	;# 
  1577  0FEE                     	;# 
  1578  0FEF                     	;# 
  1579  0000                     	;# 
  1580  0001                     	;# 
  1581  0002                     	;# 
  1582  0003                     	;# 
  1583  0004                     	;# 
  1584  0005                     	;# 
  1585  0006                     	;# 
  1586  0007                     	;# 
  1587  0008                     	;# 
  1588  0009                     	;# 
  1589  000A                     	;# 
  1590  000B                     	;# 
  1591  000C                     	;# 
  1592  000D                     	;# 
  1593  000E                     	;# 
  1594  0010                     	;# 
  1595  0011                     	;# 
  1596  0012                     	;# 
  1597  0013                     	;# 
  1598  0016                     	;# 
  1599  0017                     	;# 
  1600  0018                     	;# 
  1601  001C                     	;# 
  1602  001C                     	;# 
  1603  001D                     	;# 
  1604  001D                     	;# 
  1605  001E                     	;# 
  1606  001F                     	;# 
  1607  008C                     	;# 
  1608  008C                     	;# 
  1609  008D                     	;# 
  1610  008E                     	;# 
  1611  008E                     	;# 
  1612  008F                     	;# 
  1613  0090                     	;# 
  1614  0090                     	;# 
  1615  0091                     	;# 
  1616  0093                     	;# 
  1617  0094                     	;# 
  1618  0095                     	;# 
  1619  0096                     	;# 
  1620  0097                     	;# 
  1621  0098                     	;# 
  1622  0099                     	;# 
  1623  009A                     	;# 
  1624  009B                     	;# 
  1625  009C                     	;# 
  1626  009D                     	;# 
  1627  009E                     	;# 
  1628  010C                     	;# 
  1629  010D                     	;# 
  1630  010E                     	;# 
  1631  010E                     	;# 
  1632  010F                     	;# 
  1633  0110                     	;# 
  1634  0110                     	;# 
  1635  0111                     	;# 
  1636  0112                     	;# 
  1637  0112                     	;# 
  1638  0113                     	;# 
  1639  0114                     	;# 
  1640  0114                     	;# 
  1641  0115                     	;# 
  1642  0116                     	;# 
  1643  0116                     	;# 
  1644  0117                     	;# 
  1645  0119                     	;# 
  1646  0119                     	;# 
  1647  0119                     	;# 
  1648  011A                     	;# 
  1649  011A                     	;# 
  1650  011A                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011B                     	;# 
  1654  011B                     	;# 
  1655  011B                     	;# 
  1656  011C                     	;# 
  1657  011C                     	;# 
  1658  011C                     	;# 
  1659  011D                     	;# 
  1660  011D                     	;# 
  1661  011D                     	;# 
  1662  011E                     	;# 
  1663  011E                     	;# 
  1664  011E                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  011F                     	;# 
  1668  011F                     	;# 
  1669  011F                     	;# 
  1670  018C                     	;# 
  1671  018D                     	;# 
  1672  018E                     	;# 
  1673  018F                     	;# 
  1674  0190                     	;# 
  1675  0191                     	;# 
  1676  0192                     	;# 
  1677  0196                     	;# 
  1678  0197                     	;# 
  1679  0198                     	;# 
  1680  0199                     	;# 
  1681  019A                     	;# 
  1682  019B                     	;# 
  1683  019C                     	;# 
  1684  020C                     	;# 
  1685  020D                     	;# 
  1686  020E                     	;# 
  1687  020F                     	;# 
  1688  020F                     	;# 
  1689  0210                     	;# 
  1690  0210                     	;# 
  1691  0211                     	;# 
  1692  0211                     	;# 
  1693  0212                     	;# 
  1694  0213                     	;# 
  1695  0214                     	;# 
  1696  0215                     	;# 
  1697  0215                     	;# 
  1698  0216                     	;# 
  1699  0216                     	;# 
  1700  0217                     	;# 
  1701  0217                     	;# 
  1702  0218                     	;# 
  1703  0219                     	;# 
  1704  021A                     	;# 
  1705  021B                     	;# 
  1706  021B                     	;# 
  1707  021C                     	;# 
  1708  021C                     	;# 
  1709  021D                     	;# 
  1710  021D                     	;# 
  1711  021E                     	;# 
  1712  021F                     	;# 
  1713  028C                     	;# 
  1714  028C                     	;# 
  1715  028D                     	;# 
  1716  028D                     	;# 
  1717  028E                     	;# 
  1718  028F                     	;# 
  1719  0290                     	;# 
  1720  0290                     	;# 
  1721  0291                     	;# 
  1722  0292                     	;# 
  1723  0292                     	;# 
  1724  0293                     	;# 
  1725  0293                     	;# 
  1726  0294                     	;# 
  1727  0295                     	;# 
  1728  0296                     	;# 
  1729  0296                     	;# 
  1730  0297                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  0299                     	;# 
  1735  029A                     	;# 
  1736  029B                     	;# 
  1737  029C                     	;# 
  1738  029C                     	;# 
  1739  029D                     	;# 
  1740  030C                     	;# 
  1741  030C                     	;# 
  1742  030D                     	;# 
  1743  030E                     	;# 
  1744  030F                     	;# 
  1745  0310                     	;# 
  1746  0310                     	;# 
  1747  0311                     	;# 
  1748  0312                     	;# 
  1749  0313                     	;# 
  1750  0314                     	;# 
  1751  0314                     	;# 
  1752  0315                     	;# 
  1753  0316                     	;# 
  1754  0317                     	;# 
  1755  0318                     	;# 
  1756  0318                     	;# 
  1757  0319                     	;# 
  1758  031A                     	;# 
  1759  031B                     	;# 
  1760  031C                     	;# 
  1761  031C                     	;# 
  1762  031D                     	;# 
  1763  031E                     	;# 
  1764  031F                     	;# 
  1765  038C                     	;# 
  1766  038D                     	;# 
  1767  038E                     	;# 
  1768  0390                     	;# 
  1769  0391                     	;# 
  1770  0392                     	;# 
  1771  040C                     	;# 
  1772  040D                     	;# 
  1773  040E                     	;# 
  1774  040F                     	;# 
  1775  0410                     	;# 
  1776  0411                     	;# 
  1777  0416                     	;# 
  1778  0416                     	;# 
  1779  0417                     	;# 
  1780  0418                     	;# 
  1781  0418                     	;# 
  1782  0419                     	;# 
  1783  041A                     	;# 
  1784  041A                     	;# 
  1785  041B                     	;# 
  1786  041C                     	;# 
  1787  041C                     	;# 
  1788  041D                     	;# 
  1789  041E                     	;# 
  1790  041F                     	;# 
  1791  048C                     	;# 
  1792  048C                     	;# 
  1793  048D                     	;# 
  1794  048E                     	;# 
  1795  048F                     	;# 
  1796  048F                     	;# 
  1797  0490                     	;# 
  1798  0491                     	;# 
  1799  0492                     	;# 
  1800  0492                     	;# 
  1801  0493                     	;# 
  1802  0494                     	;# 
  1803  0495                     	;# 
  1804  0495                     	;# 
  1805  0496                     	;# 
  1806  0497                     	;# 
  1807  0498                     	;# 
  1808  0499                     	;# 
  1809  049A                     	;# 
  1810  049B                     	;# 
  1811  049C                     	;# 
  1812  049D                     	;# 
  1813  050C                     	;# 
  1814  050C                     	;# 
  1815  050D                     	;# 
  1816  050E                     	;# 
  1817  050F                     	;# 
  1818  050F                     	;# 
  1819  0510                     	;# 
  1820  0511                     	;# 
  1821  0512                     	;# 
  1822  0512                     	;# 
  1823  0513                     	;# 
  1824  0514                     	;# 
  1825  0515                     	;# 
  1826  0515                     	;# 
  1827  0516                     	;# 
  1828  0517                     	;# 
  1829  0518                     	;# 
  1830  0519                     	;# 
  1831  051A                     	;# 
  1832  051B                     	;# 
  1833  051C                     	;# 
  1834  051D                     	;# 
  1835  058C                     	;# 
  1836  058C                     	;# 
  1837  058D                     	;# 
  1838  058E                     	;# 
  1839  058F                     	;# 
  1840  058F                     	;# 
  1841  0590                     	;# 
  1842  0591                     	;# 
  1843  0592                     	;# 
  1844  0593                     	;# 
  1845  060C                     	;# 
  1846  060D                     	;# 
  1847  060E                     	;# 
  1848  060F                     	;# 
  1849  0610                     	;# 
  1850  0611                     	;# 
  1851  0612                     	;# 
  1852  0613                     	;# 
  1853  0614                     	;# 
  1854  0616                     	;# 
  1855  0617                     	;# 
  1856  0618                     	;# 
  1857  0619                     	;# 
  1858  061A                     	;# 
  1859  061B                     	;# 
  1860  061C                     	;# 
  1861  061D                     	;# 
  1862  061E                     	;# 
  1863  068C                     	;# 
  1864  068D                     	;# 
  1865  068E                     	;# 
  1866  068F                     	;# 
  1867  0690                     	;# 
  1868  0691                     	;# 
  1869  0692                     	;# 
  1870  0693                     	;# 
  1871  0694                     	;# 
  1872  070C                     	;# 
  1873  070D                     	;# 
  1874  070E                     	;# 
  1875  070F                     	;# 
  1876  0710                     	;# 
  1877  0711                     	;# 
  1878  0712                     	;# 
  1879  0713                     	;# 
  1880  0714                     	;# 
  1881  0716                     	;# 
  1882  0717                     	;# 
  1883  0718                     	;# 
  1884  0719                     	;# 
  1885  071A                     	;# 
  1886  071B                     	;# 
  1887  071C                     	;# 
  1888  071D                     	;# 
  1889  071E                     	;# 
  1890  0796                     	;# 
  1891  0797                     	;# 
  1892  0798                     	;# 
  1893  0799                     	;# 
  1894  079A                     	;# 
  1895  079B                     	;# 
  1896  080C                     	;# 
  1897  080D                     	;# 
  1898  080E                     	;# 
  1899  080F                     	;# 
  1900  0810                     	;# 
  1901  0811                     	;# 
  1902  0812                     	;# 
  1903  0813                     	;# 
  1904  0814                     	;# 
  1905  081A                     	;# 
  1906  081B                     	;# 
  1907  081C                     	;# 
  1908  081D                     	;# 
  1909  081E                     	;# 
  1910  081F                     	;# 
  1911  088C                     	;# 
  1912  088D                     	;# 
  1913  088E                     	;# 
  1914  088F                     	;# 
  1915  0890                     	;# 
  1916  0891                     	;# 
  1917  0892                     	;# 
  1918  0893                     	;# 
  1919  0895                     	;# 
  1920  0896                     	;# 
  1921  0897                     	;# 
  1922  0898                     	;# 
  1923  0899                     	;# 
  1924  089A                     	;# 
  1925  089B                     	;# 
  1926  090C                     	;# 
  1927  090E                     	;# 
  1928  090F                     	;# 
  1929  091F                     	;# 
  1930  091F                     	;# 
  1931  098F                     	;# 
  1932  098F                     	;# 
  1933  0990                     	;# 
  1934  0991                     	;# 
  1935  0992                     	;# 
  1936  0993                     	;# 
  1937  0994                     	;# 
  1938  0995                     	;# 
  1939  0996                     	;# 
  1940  0997                     	;# 
  1941  0E0F                     	;# 
  1942  0E10                     	;# 
  1943  0E11                     	;# 
  1944  0E12                     	;# 
  1945  0E13                     	;# 
  1946  0E14                     	;# 
  1947  0E15                     	;# 
  1948  0E16                     	;# 
  1949  0E17                     	;# 
  1950  0E18                     	;# 
  1951  0E19                     	;# 
  1952  0E1A                     	;# 
  1953  0E1B                     	;# 
  1954  0E1C                     	;# 
  1955  0E1D                     	;# 
  1956  0E1E                     	;# 
  1957  0E1F                     	;# 
  1958  0E20                     	;# 
  1959  0E21                     	;# 
  1960  0E22                     	;# 
  1961  0E23                     	;# 
  1962  0E24                     	;# 
  1963  0E25                     	;# 
  1964  0E26                     	;# 
  1965  0E27                     	;# 
  1966  0E28                     	;# 
  1967  0E29                     	;# 
  1968  0E2A                     	;# 
  1969  0E2B                     	;# 
  1970  0E2C                     	;# 
  1971  0E2D                     	;# 
  1972  0E2E                     	;# 
  1973  0E2F                     	;# 
  1974  0E30                     	;# 
  1975  0E31                     	;# 
  1976  0E32                     	;# 
  1977  0E33                     	;# 
  1978  0E34                     	;# 
  1979  0E35                     	;# 
  1980  0E36                     	;# 
  1981  0E37                     	;# 
  1982  0E8F                     	;# 
  1983  0E90                     	;# 
  1984  0E91                     	;# 
  1985  0E92                     	;# 
  1986  0E93                     	;# 
  1987  0E94                     	;# 
  1988  0E95                     	;# 
  1989  0E96                     	;# 
  1990  0E97                     	;# 
  1991  0E9C                     	;# 
  1992  0E9D                     	;# 
  1993  0E9E                     	;# 
  1994  0EA1                     	;# 
  1995  0EA2                     	;# 
  1996  0EA3                     	;# 
  1997  0EA4                     	;# 
  1998  0EA5                     	;# 
  1999  0EA9                     	;# 
  2000  0EAA                     	;# 
  2001  0EAB                     	;# 
  2002  0EAC                     	;# 
  2003  0EB1                     	;# 
  2004  0EB2                     	;# 
  2005  0EB3                     	;# 
  2006  0EB8                     	;# 
  2007  0EB9                     	;# 
  2008  0EBA                     	;# 
  2009  0EBB                     	;# 
  2010  0EBC                     	;# 
  2011  0EBD                     	;# 
  2012  0EBE                     	;# 
  2013  0EC3                     	;# 
  2014  0EC5                     	;# 
  2015  0EC6                     	;# 
  2016  0EC7                     	;# 
  2017  0EC8                     	;# 
  2018  0EC9                     	;# 
  2019  0ECA                     	;# 
  2020  0ECB                     	;# 
  2021  0ECC                     	;# 
  2022  0F10                     	;# 
  2023  0F11                     	;# 
  2024  0F12                     	;# 
  2025  0F13                     	;# 
  2026  0F14                     	;# 
  2027  0F15                     	;# 
  2028  0F16                     	;# 
  2029  0F17                     	;# 
  2030  0F18                     	;# 
  2031  0F19                     	;# 
  2032  0F1A                     	;# 
  2033  0F1B                     	;# 
  2034  0F1C                     	;# 
  2035  0F1D                     	;# 
  2036  0F1E                     	;# 
  2037  0F1F                     	;# 
  2038  0F20                     	;# 
  2039  0F21                     	;# 
  2040  0F22                     	;# 
  2041  0F23                     	;# 
  2042  0F24                     	;# 
  2043  0F25                     	;# 
  2044  0F26                     	;# 
  2045  0F27                     	;# 
  2046  0F38                     	;# 
  2047  0F39                     	;# 
  2048  0F3A                     	;# 
  2049  0F3B                     	;# 
  2050  0F3C                     	;# 
  2051  0F3D                     	;# 
  2052  0F3E                     	;# 
  2053  0F3F                     	;# 
  2054  0F40                     	;# 
  2055  0F41                     	;# 
  2056  0F43                     	;# 
  2057  0F44                     	;# 
  2058  0F45                     	;# 
  2059  0F46                     	;# 
  2060  0F47                     	;# 
  2061  0F48                     	;# 
  2062  0F49                     	;# 
  2063  0F4A                     	;# 
  2064  0F4B                     	;# 
  2065  0F4C                     	;# 
  2066  0F4E                     	;# 
  2067  0F4F                     	;# 
  2068  0F50                     	;# 
  2069  0F51                     	;# 
  2070  0F52                     	;# 
  2071  0F53                     	;# 
  2072  0F54                     	;# 
  2073  0F55                     	;# 
  2074  0F56                     	;# 
  2075  0F57                     	;# 
  2076  0F65                     	;# 
  2077  0F68                     	;# 
  2078  0F69                     	;# 
  2079  0F6A                     	;# 
  2080  0F6B                     	;# 
  2081  0FE4                     	;# 
  2082  0FE5                     	;# 
  2083  0FE6                     	;# 
  2084  0FE7                     	;# 
  2085  0FE8                     	;# 
  2086  0FE9                     	;# 
  2087  0FEA                     	;# 
  2088  0FEB                     	;# 
  2089  0FED                     	;# 
  2090  0FEE                     	;# 
  2091  0FEF                     	;# 
  2092  0000                     	;# 
  2093  0001                     	;# 
  2094  0002                     	;# 
  2095  0003                     	;# 
  2096  0004                     	;# 
  2097  0005                     	;# 
  2098  0006                     	;# 
  2099  0007                     	;# 
  2100  0008                     	;# 
  2101  0009                     	;# 
  2102  000A                     	;# 
  2103  000B                     	;# 
  2104  000C                     	;# 
  2105  000D                     	;# 
  2106  000E                     	;# 
  2107  0010                     	;# 
  2108  0011                     	;# 
  2109  0012                     	;# 
  2110  0013                     	;# 
  2111  0016                     	;# 
  2112  0017                     	;# 
  2113  0018                     	;# 
  2114  001C                     	;# 
  2115  001C                     	;# 
  2116  001D                     	;# 
  2117  001D                     	;# 
  2118  001E                     	;# 
  2119  001F                     	;# 
  2120  008C                     	;# 
  2121  008C                     	;# 
  2122  008D                     	;# 
  2123  008E                     	;# 
  2124  008E                     	;# 
  2125  008F                     	;# 
  2126  0090                     	;# 
  2127  0090                     	;# 
  2128  0091                     	;# 
  2129  0093                     	;# 
  2130  0094                     	;# 
  2131  0095                     	;# 
  2132  0096                     	;# 
  2133  0097                     	;# 
  2134  0098                     	;# 
  2135  0099                     	;# 
  2136  009A                     	;# 
  2137  009B                     	;# 
  2138  009C                     	;# 
  2139  009D                     	;# 
  2140  009E                     	;# 
  2141  010C                     	;# 
  2142  010D                     	;# 
  2143  010E                     	;# 
  2144  010E                     	;# 
  2145  010F                     	;# 
  2146  0110                     	;# 
  2147  0110                     	;# 
  2148  0111                     	;# 
  2149  0112                     	;# 
  2150  0112                     	;# 
  2151  0113                     	;# 
  2152  0114                     	;# 
  2153  0114                     	;# 
  2154  0115                     	;# 
  2155  0116                     	;# 
  2156  0116                     	;# 
  2157  0117                     	;# 
  2158  0119                     	;# 
  2159  0119                     	;# 
  2160  0119                     	;# 
  2161  011A                     	;# 
  2162  011A                     	;# 
  2163  011A                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011B                     	;# 
  2169  011C                     	;# 
  2170  011C                     	;# 
  2171  011C                     	;# 
  2172  011D                     	;# 
  2173  011D                     	;# 
  2174  011D                     	;# 
  2175  011E                     	;# 
  2176  011E                     	;# 
  2177  011E                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  011F                     	;# 
  2183  018C                     	;# 
  2184  018D                     	;# 
  2185  018E                     	;# 
  2186  018F                     	;# 
  2187  0190                     	;# 
  2188  0191                     	;# 
  2189  0192                     	;# 
  2190  0196                     	;# 
  2191  0197                     	;# 
  2192  0198                     	;# 
  2193  0199                     	;# 
  2194  019A                     	;# 
  2195  019B                     	;# 
  2196  019C                     	;# 
  2197  020C                     	;# 
  2198  020D                     	;# 
  2199  020E                     	;# 
  2200  020F                     	;# 
  2201  020F                     	;# 
  2202  0210                     	;# 
  2203  0210                     	;# 
  2204  0211                     	;# 
  2205  0211                     	;# 
  2206  0212                     	;# 
  2207  0213                     	;# 
  2208  0214                     	;# 
  2209  0215                     	;# 
  2210  0215                     	;# 
  2211  0216                     	;# 
  2212  0216                     	;# 
  2213  0217                     	;# 
  2214  0217                     	;# 
  2215  0218                     	;# 
  2216  0219                     	;# 
  2217  021A                     	;# 
  2218  021B                     	;# 
  2219  021B                     	;# 
  2220  021C                     	;# 
  2221  021C                     	;# 
  2222  021D                     	;# 
  2223  021D                     	;# 
  2224  021E                     	;# 
  2225  021F                     	;# 
  2226  028C                     	;# 
  2227  028C                     	;# 
  2228  028D                     	;# 
  2229  028D                     	;# 
  2230  028E                     	;# 
  2231  028F                     	;# 
  2232  0290                     	;# 
  2233  0290                     	;# 
  2234  0291                     	;# 
  2235  0292                     	;# 
  2236  0292                     	;# 
  2237  0293                     	;# 
  2238  0293                     	;# 
  2239  0294                     	;# 
  2240  0295                     	;# 
  2241  0296                     	;# 
  2242  0296                     	;# 
  2243  0297                     	;# 
  2244  0298                     	;# 
  2245  0298                     	;# 
  2246  0299                     	;# 
  2247  0299                     	;# 
  2248  029A                     	;# 
  2249  029B                     	;# 
  2250  029C                     	;# 
  2251  029C                     	;# 
  2252  029D                     	;# 
  2253  030C                     	;# 
  2254  030C                     	;# 
  2255  030D                     	;# 
  2256  030E                     	;# 
  2257  030F                     	;# 
  2258  0310                     	;# 
  2259  0310                     	;# 
  2260  0311                     	;# 
  2261  0312                     	;# 
  2262  0313                     	;# 
  2263  0314                     	;# 
  2264  0314                     	;# 
  2265  0315                     	;# 
  2266  0316                     	;# 
  2267  0317                     	;# 
  2268  0318                     	;# 
  2269  0318                     	;# 
  2270  0319                     	;# 
  2271  031A                     	;# 
  2272  031B                     	;# 
  2273  031C                     	;# 
  2274  031C                     	;# 
  2275  031D                     	;# 
  2276  031E                     	;# 
  2277  031F                     	;# 
  2278  038C                     	;# 
  2279  038D                     	;# 
  2280  038E                     	;# 
  2281  0390                     	;# 
  2282  0391                     	;# 
  2283  0392                     	;# 
  2284  040C                     	;# 
  2285  040D                     	;# 
  2286  040E                     	;# 
  2287  040F                     	;# 
  2288  0410                     	;# 
  2289  0411                     	;# 
  2290  0416                     	;# 
  2291  0416                     	;# 
  2292  0417                     	;# 
  2293  0418                     	;# 
  2294  0418                     	;# 
  2295  0419                     	;# 
  2296  041A                     	;# 
  2297  041A                     	;# 
  2298  041B                     	;# 
  2299  041C                     	;# 
  2300  041C                     	;# 
  2301  041D                     	;# 
  2302  041E                     	;# 
  2303  041F                     	;# 
  2304  048C                     	;# 
  2305  048C                     	;# 
  2306  048D                     	;# 
  2307  048E                     	;# 
  2308  048F                     	;# 
  2309  048F                     	;# 
  2310  0490                     	;# 
  2311  0491                     	;# 
  2312  0492                     	;# 
  2313  0492                     	;# 
  2314  0493                     	;# 
  2315  0494                     	;# 
  2316  0495                     	;# 
  2317  0495                     	;# 
  2318  0496                     	;# 
  2319  0497                     	;# 
  2320  0498                     	;# 
  2321  0499                     	;# 
  2322  049A                     	;# 
  2323  049B                     	;# 
  2324  049C                     	;# 
  2325  049D                     	;# 
  2326  050C                     	;# 
  2327  050C                     	;# 
  2328  050D                     	;# 
  2329  050E                     	;# 
  2330  050F                     	;# 
  2331  050F                     	;# 
  2332  0510                     	;# 
  2333  0511                     	;# 
  2334  0512                     	;# 
  2335  0512                     	;# 
  2336  0513                     	;# 
  2337  0514                     	;# 
  2338  0515                     	;# 
  2339  0515                     	;# 
  2340  0516                     	;# 
  2341  0517                     	;# 
  2342  0518                     	;# 
  2343  0519                     	;# 
  2344  051A                     	;# 
  2345  051B                     	;# 
  2346  051C                     	;# 
  2347  051D                     	;# 
  2348  058C                     	;# 
  2349  058C                     	;# 
  2350  058D                     	;# 
  2351  058E                     	;# 
  2352  058F                     	;# 
  2353  058F                     	;# 
  2354  0590                     	;# 
  2355  0591                     	;# 
  2356  0592                     	;# 
  2357  0593                     	;# 
  2358  060C                     	;# 
  2359  060D                     	;# 
  2360  060E                     	;# 
  2361  060F                     	;# 
  2362  0610                     	;# 
  2363  0611                     	;# 
  2364  0612                     	;# 
  2365  0613                     	;# 
  2366  0614                     	;# 
  2367  0616                     	;# 
  2368  0617                     	;# 
  2369  0618                     	;# 
  2370  0619                     	;# 
  2371  061A                     	;# 
  2372  061B                     	;# 
  2373  061C                     	;# 
  2374  061D                     	;# 
  2375  061E                     	;# 
  2376  068C                     	;# 
  2377  068D                     	;# 
  2378  068E                     	;# 
  2379  068F                     	;# 
  2380  0690                     	;# 
  2381  0691                     	;# 
  2382  0692                     	;# 
  2383  0693                     	;# 
  2384  0694                     	;# 
  2385  070C                     	;# 
  2386  070D                     	;# 
  2387  070E                     	;# 
  2388  070F                     	;# 
  2389  0710                     	;# 
  2390  0711                     	;# 
  2391  0712                     	;# 
  2392  0713                     	;# 
  2393  0714                     	;# 
  2394  0716                     	;# 
  2395  0717                     	;# 
  2396  0718                     	;# 
  2397  0719                     	;# 
  2398  071A                     	;# 
  2399  071B                     	;# 
  2400  071C                     	;# 
  2401  071D                     	;# 
  2402  071E                     	;# 
  2403  0796                     	;# 
  2404  0797                     	;# 
  2405  0798                     	;# 
  2406  0799                     	;# 
  2407  079A                     	;# 
  2408  079B                     	;# 
  2409  080C                     	;# 
  2410  080D                     	;# 
  2411  080E                     	;# 
  2412  080F                     	;# 
  2413  0810                     	;# 
  2414  0811                     	;# 
  2415  0812                     	;# 
  2416  0813                     	;# 
  2417  0814                     	;# 
  2418  081A                     	;# 
  2419  081B                     	;# 
  2420  081C                     	;# 
  2421  081D                     	;# 
  2422  081E                     	;# 
  2423  081F                     	;# 
  2424  088C                     	;# 
  2425  088D                     	;# 
  2426  088E                     	;# 
  2427  088F                     	;# 
  2428  0890                     	;# 
  2429  0891                     	;# 
  2430  0892                     	;# 
  2431  0893                     	;# 
  2432  0895                     	;# 
  2433  0896                     	;# 
  2434  0897                     	;# 
  2435  0898                     	;# 
  2436  0899                     	;# 
  2437  089A                     	;# 
  2438  089B                     	;# 
  2439  090C                     	;# 
  2440  090E                     	;# 
  2441  090F                     	;# 
  2442  091F                     	;# 
  2443  091F                     	;# 
  2444  098F                     	;# 
  2445  098F                     	;# 
  2446  0990                     	;# 
  2447  0991                     	;# 
  2448  0992                     	;# 
  2449  0993                     	;# 
  2450  0994                     	;# 
  2451  0995                     	;# 
  2452  0996                     	;# 
  2453  0997                     	;# 
  2454  0E0F                     	;# 
  2455  0E10                     	;# 
  2456  0E11                     	;# 
  2457  0E12                     	;# 
  2458  0E13                     	;# 
  2459  0E14                     	;# 
  2460  0E15                     	;# 
  2461  0E16                     	;# 
  2462  0E17                     	;# 
  2463  0E18                     	;# 
  2464  0E19                     	;# 
  2465  0E1A                     	;# 
  2466  0E1B                     	;# 
  2467  0E1C                     	;# 
  2468  0E1D                     	;# 
  2469  0E1E                     	;# 
  2470  0E1F                     	;# 
  2471  0E20                     	;# 
  2472  0E21                     	;# 
  2473  0E22                     	;# 
  2474  0E23                     	;# 
  2475  0E24                     	;# 
  2476  0E25                     	;# 
  2477  0E26                     	;# 
  2478  0E27                     	;# 
  2479  0E28                     	;# 
  2480  0E29                     	;# 
  2481  0E2A                     	;# 
  2482  0E2B                     	;# 
  2483  0E2C                     	;# 
  2484  0E2D                     	;# 
  2485  0E2E                     	;# 
  2486  0E2F                     	;# 
  2487  0E30                     	;# 
  2488  0E31                     	;# 
  2489  0E32                     	;# 
  2490  0E33                     	;# 
  2491  0E34                     	;# 
  2492  0E35                     	;# 
  2493  0E36                     	;# 
  2494  0E37                     	;# 
  2495  0E8F                     	;# 
  2496  0E90                     	;# 
  2497  0E91                     	;# 
  2498  0E92                     	;# 
  2499  0E93                     	;# 
  2500  0E94                     	;# 
  2501  0E95                     	;# 
  2502  0E96                     	;# 
  2503  0E97                     	;# 
  2504  0E9C                     	;# 
  2505  0E9D                     	;# 
  2506  0E9E                     	;# 
  2507  0EA1                     	;# 
  2508  0EA2                     	;# 
  2509  0EA3                     	;# 
  2510  0EA4                     	;# 
  2511  0EA5                     	;# 
  2512  0EA9                     	;# 
  2513  0EAA                     	;# 
  2514  0EAB                     	;# 
  2515  0EAC                     	;# 
  2516  0EB1                     	;# 
  2517  0EB2                     	;# 
  2518  0EB3                     	;# 
  2519  0EB8                     	;# 
  2520  0EB9                     	;# 
  2521  0EBA                     	;# 
  2522  0EBB                     	;# 
  2523  0EBC                     	;# 
  2524  0EBD                     	;# 
  2525  0EBE                     	;# 
  2526  0EC3                     	;# 
  2527  0EC5                     	;# 
  2528  0EC6                     	;# 
  2529  0EC7                     	;# 
  2530  0EC8                     	;# 
  2531  0EC9                     	;# 
  2532  0ECA                     	;# 
  2533  0ECB                     	;# 
  2534  0ECC                     	;# 
  2535  0F10                     	;# 
  2536  0F11                     	;# 
  2537  0F12                     	;# 
  2538  0F13                     	;# 
  2539  0F14                     	;# 
  2540  0F15                     	;# 
  2541  0F16                     	;# 
  2542  0F17                     	;# 
  2543  0F18                     	;# 
  2544  0F19                     	;# 
  2545  0F1A                     	;# 
  2546  0F1B                     	;# 
  2547  0F1C                     	;# 
  2548  0F1D                     	;# 
  2549  0F1E                     	;# 
  2550  0F1F                     	;# 
  2551  0F20                     	;# 
  2552  0F21                     	;# 
  2553  0F22                     	;# 
  2554  0F23                     	;# 
  2555  0F24                     	;# 
  2556  0F25                     	;# 
  2557  0F26                     	;# 
  2558  0F27                     	;# 
  2559  0F38                     	;# 
  2560  0F39                     	;# 
  2561  0F3A                     	;# 
  2562  0F3B                     	;# 
  2563  0F3C                     	;# 
  2564  0F3D                     	;# 
  2565  0F3E                     	;# 
  2566  0F3F                     	;# 
  2567  0F40                     	;# 
  2568  0F41                     	;# 
  2569  0F43                     	;# 
  2570  0F44                     	;# 
  2571  0F45                     	;# 
  2572  0F46                     	;# 
  2573  0F47                     	;# 
  2574  0F48                     	;# 
  2575  0F49                     	;# 
  2576  0F4A                     	;# 
  2577  0F4B                     	;# 
  2578  0F4C                     	;# 
  2579  0F4E                     	;# 
  2580  0F4F                     	;# 
  2581  0F50                     	;# 
  2582  0F51                     	;# 
  2583  0F52                     	;# 
  2584  0F53                     	;# 
  2585  0F54                     	;# 
  2586  0F55                     	;# 
  2587  0F56                     	;# 
  2588  0F57                     	;# 
  2589  0F65                     	;# 
  2590  0F68                     	;# 
  2591  0F69                     	;# 
  2592  0F6A                     	;# 
  2593  0F6B                     	;# 
  2594  0FE4                     	;# 
  2595  0FE5                     	;# 
  2596  0FE6                     	;# 
  2597  0FE7                     	;# 
  2598  0FE8                     	;# 
  2599  0FE9                     	;# 
  2600  0FEA                     	;# 
  2601  0FEB                     	;# 
  2602  0FED                     	;# 
  2603  0FEE                     	;# 
  2604  0FEF                     	;# 
  2605  0000                     	;# 
  2606  0001                     	;# 
  2607  0002                     	;# 
  2608  0003                     	;# 
  2609  0004                     	;# 
  2610  0005                     	;# 
  2611  0006                     	;# 
  2612  0007                     	;# 
  2613  0008                     	;# 
  2614  0009                     	;# 
  2615  000A                     	;# 
  2616  000B                     	;# 
  2617  000C                     	;# 
  2618  000D                     	;# 
  2619  000E                     	;# 
  2620  0010                     	;# 
  2621  0011                     	;# 
  2622  0012                     	;# 
  2623  0013                     	;# 
  2624  0016                     	;# 
  2625  0017                     	;# 
  2626  0018                     	;# 
  2627  001C                     	;# 
  2628  001C                     	;# 
  2629  001D                     	;# 
  2630  001D                     	;# 
  2631  001E                     	;# 
  2632  001F                     	;# 
  2633  008C                     	;# 
  2634  008C                     	;# 
  2635  008D                     	;# 
  2636  008E                     	;# 
  2637  008E                     	;# 
  2638  008F                     	;# 
  2639  0090                     	;# 
  2640  0090                     	;# 
  2641  0091                     	;# 
  2642  0093                     	;# 
  2643  0094                     	;# 
  2644  0095                     	;# 
  2645  0096                     	;# 
  2646  0097                     	;# 
  2647  0098                     	;# 
  2648  0099                     	;# 
  2649  009A                     	;# 
  2650  009B                     	;# 
  2651  009C                     	;# 
  2652  009D                     	;# 
  2653  009E                     	;# 
  2654  010C                     	;# 
  2655  010D                     	;# 
  2656  010E                     	;# 
  2657  010E                     	;# 
  2658  010F                     	;# 
  2659  0110                     	;# 
  2660  0110                     	;# 
  2661  0111                     	;# 
  2662  0112                     	;# 
  2663  0112                     	;# 
  2664  0113                     	;# 
  2665  0114                     	;# 
  2666  0114                     	;# 
  2667  0115                     	;# 
  2668  0116                     	;# 
  2669  0116                     	;# 
  2670  0117                     	;# 
  2671  0119                     	;# 
  2672  0119                     	;# 
  2673  0119                     	;# 
  2674  011A                     	;# 
  2675  011A                     	;# 
  2676  011A                     	;# 
  2677  011B                     	;# 
  2678  011B                     	;# 
  2679  011B                     	;# 
  2680  011B                     	;# 
  2681  011B                     	;# 
  2682  011C                     	;# 
  2683  011C                     	;# 
  2684  011C                     	;# 
  2685  011D                     	;# 
  2686  011D                     	;# 
  2687  011D                     	;# 
  2688  011E                     	;# 
  2689  011E                     	;# 
  2690  011E                     	;# 
  2691  011F                     	;# 
  2692  011F                     	;# 
  2693  011F                     	;# 
  2694  011F                     	;# 
  2695  011F                     	;# 
  2696  018C                     	;# 
  2697  018D                     	;# 
  2698  018E                     	;# 
  2699  018F                     	;# 
  2700  0190                     	;# 
  2701  0191                     	;# 
  2702  0192                     	;# 
  2703  0196                     	;# 
  2704  0197                     	;# 
  2705  0198                     	;# 
  2706  0199                     	;# 
  2707  019A                     	;# 
  2708  019B                     	;# 
  2709  019C                     	;# 
  2710  020C                     	;# 
  2711  020D                     	;# 
  2712  020E                     	;# 
  2713  020F                     	;# 
  2714  020F                     	;# 
  2715  0210                     	;# 
  2716  0210                     	;# 
  2717  0211                     	;# 
  2718  0211                     	;# 
  2719  0212                     	;# 
  2720  0213                     	;# 
  2721  0214                     	;# 
  2722  0215                     	;# 
  2723  0215                     	;# 
  2724  0216                     	;# 
  2725  0216                     	;# 
  2726  0217                     	;# 
  2727  0217                     	;# 
  2728  0218                     	;# 
  2729  0219                     	;# 
  2730  021A                     	;# 
  2731  021B                     	;# 
  2732  021B                     	;# 
  2733  021C                     	;# 
  2734  021C                     	;# 
  2735  021D                     	;# 
  2736  021D                     	;# 
  2737  021E                     	;# 
  2738  021F                     	;# 
  2739  028C                     	;# 
  2740  028C                     	;# 
  2741  028D                     	;# 
  2742  028D                     	;# 
  2743  028E                     	;# 
  2744  028F                     	;# 
  2745  0290                     	;# 
  2746  0290                     	;# 
  2747  0291                     	;# 
  2748  0292                     	;# 
  2749  0292                     	;# 
  2750  0293                     	;# 
  2751  0293                     	;# 
  2752  0294                     	;# 
  2753  0295                     	;# 
  2754  0296                     	;# 
  2755  0296                     	;# 
  2756  0297                     	;# 
  2757  0298                     	;# 
  2758  0298                     	;# 
  2759  0299                     	;# 
  2760  0299                     	;# 
  2761  029A                     	;# 
  2762  029B                     	;# 
  2763  029C                     	;# 
  2764  029C                     	;# 
  2765  029D                     	;# 
  2766  030C                     	;# 
  2767  030C                     	;# 
  2768  030D                     	;# 
  2769  030E                     	;# 
  2770  030F                     	;# 
  2771  0310                     	;# 
  2772  0310                     	;# 
  2773  0311                     	;# 
  2774  0312                     	;# 
  2775  0313                     	;# 
  2776  0314                     	;# 
  2777  0314                     	;# 
  2778  0315                     	;# 
  2779  0316                     	;# 
  2780  0317                     	;# 
  2781  0318                     	;# 
  2782  0318                     	;# 
  2783  0319                     	;# 
  2784  031A                     	;# 
  2785  031B                     	;# 
  2786  031C                     	;# 
  2787  031C                     	;# 
  2788  031D                     	;# 
  2789  031E                     	;# 
  2790  031F                     	;# 
  2791  038C                     	;# 
  2792  038D                     	;# 
  2793  038E                     	;# 
  2794  0390                     	;# 
  2795  0391                     	;# 
  2796  0392                     	;# 
  2797  040C                     	;# 
  2798  040D                     	;# 
  2799  040E                     	;# 
  2800  040F                     	;# 
  2801  0410                     	;# 
  2802  0411                     	;# 
  2803  0416                     	;# 
  2804  0416                     	;# 
  2805  0417                     	;# 
  2806  0418                     	;# 
  2807  0418                     	;# 
  2808  0419                     	;# 
  2809  041A                     	;# 
  2810  041A                     	;# 
  2811  041B                     	;# 
  2812  041C                     	;# 
  2813  041C                     	;# 
  2814  041D                     	;# 
  2815  041E                     	;# 
  2816  041F                     	;# 
  2817  048C                     	;# 
  2818  048C                     	;# 
  2819  048D                     	;# 
  2820  048E                     	;# 
  2821  048F                     	;# 
  2822  048F                     	;# 
  2823  0490                     	;# 
  2824  0491                     	;# 
  2825  0492                     	;# 
  2826  0492                     	;# 
  2827  0493                     	;# 
  2828  0494                     	;# 
  2829  0495                     	;# 
  2830  0495                     	;# 
  2831  0496                     	;# 
  2832  0497                     	;# 
  2833  0498                     	;# 
  2834  0499                     	;# 
  2835  049A                     	;# 
  2836  049B                     	;# 
  2837  049C                     	;# 
  2838  049D                     	;# 
  2839  050C                     	;# 
  2840  050C                     	;# 
  2841  050D                     	;# 
  2842  050E                     	;# 
  2843  050F                     	;# 
  2844  050F                     	;# 
  2845  0510                     	;# 
  2846  0511                     	;# 
  2847  0512                     	;# 
  2848  0512                     	;# 
  2849  0513                     	;# 
  2850  0514                     	;# 
  2851  0515                     	;# 
  2852  0515                     	;# 
  2853  0516                     	;# 
  2854  0517                     	;# 
  2855  0518                     	;# 
  2856  0519                     	;# 
  2857  051A                     	;# 
  2858  051B                     	;# 
  2859  051C                     	;# 
  2860  051D                     	;# 
  2861  058C                     	;# 
  2862  058C                     	;# 
  2863  058D                     	;# 
  2864  058E                     	;# 
  2865  058F                     	;# 
  2866  058F                     	;# 
  2867  0590                     	;# 
  2868  0591                     	;# 
  2869  0592                     	;# 
  2870  0593                     	;# 
  2871  060C                     	;# 
  2872  060D                     	;# 
  2873  060E                     	;# 
  2874  060F                     	;# 
  2875  0610                     	;# 
  2876  0611                     	;# 
  2877  0612                     	;# 
  2878  0613                     	;# 
  2879  0614                     	;# 
  2880  0616                     	;# 
  2881  0617                     	;# 
  2882  0618                     	;# 
  2883  0619                     	;# 
  2884  061A                     	;# 
  2885  061B                     	;# 
  2886  061C                     	;# 
  2887  061D                     	;# 
  2888  061E                     	;# 
  2889  068C                     	;# 
  2890  068D                     	;# 
  2891  068E                     	;# 
  2892  068F                     	;# 
  2893  0690                     	;# 
  2894  0691                     	;# 
  2895  0692                     	;# 
  2896  0693                     	;# 
  2897  0694                     	;# 
  2898  070C                     	;# 
  2899  070D                     	;# 
  2900  070E                     	;# 
  2901  070F                     	;# 
  2902  0710                     	;# 
  2903  0711                     	;# 
  2904  0712                     	;# 
  2905  0713                     	;# 
  2906  0714                     	;# 
  2907  0716                     	;# 
  2908  0717                     	;# 
  2909  0718                     	;# 
  2910  0719                     	;# 
  2911  071A                     	;# 
  2912  071B                     	;# 
  2913  071C                     	;# 
  2914  071D                     	;# 
  2915  071E                     	;# 
  2916  0796                     	;# 
  2917  0797                     	;# 
  2918  0798                     	;# 
  2919  0799                     	;# 
  2920  079A                     	;# 
  2921  079B                     	;# 
  2922  080C                     	;# 
  2923  080D                     	;# 
  2924  080E                     	;# 
  2925  080F                     	;# 
  2926  0810                     	;# 
  2927  0811                     	;# 
  2928  0812                     	;# 
  2929  0813                     	;# 
  2930  0814                     	;# 
  2931  081A                     	;# 
  2932  081B                     	;# 
  2933  081C                     	;# 
  2934  081D                     	;# 
  2935  081E                     	;# 
  2936  081F                     	;# 
  2937  088C                     	;# 
  2938  088D                     	;# 
  2939  088E                     	;# 
  2940  088F                     	;# 
  2941  0890                     	;# 
  2942  0891                     	;# 
  2943  0892                     	;# 
  2944  0893                     	;# 
  2945  0895                     	;# 
  2946  0896                     	;# 
  2947  0897                     	;# 
  2948  0898                     	;# 
  2949  0899                     	;# 
  2950  089A                     	;# 
  2951  089B                     	;# 
  2952  090C                     	;# 
  2953  090E                     	;# 
  2954  090F                     	;# 
  2955  091F                     	;# 
  2956  091F                     	;# 
  2957  098F                     	;# 
  2958  098F                     	;# 
  2959  0990                     	;# 
  2960  0991                     	;# 
  2961  0992                     	;# 
  2962  0993                     	;# 
  2963  0994                     	;# 
  2964  0995                     	;# 
  2965  0996                     	;# 
  2966  0997                     	;# 
  2967  0E0F                     	;# 
  2968  0E10                     	;# 
  2969  0E11                     	;# 
  2970  0E12                     	;# 
  2971  0E13                     	;# 
  2972  0E14                     	;# 
  2973  0E15                     	;# 
  2974  0E16                     	;# 
  2975  0E17                     	;# 
  2976  0E18                     	;# 
  2977  0E19                     	;# 
  2978  0E1A                     	;# 
  2979  0E1B                     	;# 
  2980  0E1C                     	;# 
  2981  0E1D                     	;# 
  2982  0E1E                     	;# 
  2983  0E1F                     	;# 
  2984  0E20                     	;# 
  2985  0E21                     	;# 
  2986  0E22                     	;# 
  2987  0E23                     	;# 
  2988  0E24                     	;# 
  2989  0E25                     	;# 
  2990  0E26                     	;# 
  2991  0E27                     	;# 
  2992  0E28                     	;# 
  2993  0E29                     	;# 
  2994  0E2A                     	;# 
  2995  0E2B                     	;# 
  2996  0E2C                     	;# 
  2997  0E2D                     	;# 
  2998  0E2E                     	;# 
  2999  0E2F                     	;# 
  3000  0E30                     	;# 
  3001  0E31                     	;# 
  3002  0E32                     	;# 
  3003  0E33                     	;# 
  3004  0E34                     	;# 
  3005  0E35                     	;# 
  3006  0E36                     	;# 
  3007  0E37                     	;# 
  3008  0E8F                     	;# 
  3009  0E90                     	;# 
  3010  0E91                     	;# 
  3011  0E92                     	;# 
  3012  0E93                     	;# 
  3013  0E94                     	;# 
  3014  0E95                     	;# 
  3015  0E96                     	;# 
  3016  0E97                     	;# 
  3017  0E9C                     	;# 
  3018  0E9D                     	;# 
  3019  0E9E                     	;# 
  3020  0EA1                     	;# 
  3021  0EA2                     	;# 
  3022  0EA3                     	;# 
  3023  0EA4                     	;# 
  3024  0EA5                     	;# 
  3025  0EA9                     	;# 
  3026  0EAA                     	;# 
  3027  0EAB                     	;# 
  3028  0EAC                     	;# 
  3029  0EB1                     	;# 
  3030  0EB2                     	;# 
  3031  0EB3                     	;# 
  3032  0EB8                     	;# 
  3033  0EB9                     	;# 
  3034  0EBA                     	;# 
  3035  0EBB                     	;# 
  3036  0EBC                     	;# 
  3037  0EBD                     	;# 
  3038  0EBE                     	;# 
  3039  0EC3                     	;# 
  3040  0EC5                     	;# 
  3041  0EC6                     	;# 
  3042  0EC7                     	;# 
  3043  0EC8                     	;# 
  3044  0EC9                     	;# 
  3045  0ECA                     	;# 
  3046  0ECB                     	;# 
  3047  0ECC                     	;# 
  3048  0F10                     	;# 
  3049  0F11                     	;# 
  3050  0F12                     	;# 
  3051  0F13                     	;# 
  3052  0F14                     	;# 
  3053  0F15                     	;# 
  3054  0F16                     	;# 
  3055  0F17                     	;# 
  3056  0F18                     	;# 
  3057  0F19                     	;# 
  3058  0F1A                     	;# 
  3059  0F1B                     	;# 
  3060  0F1C                     	;# 
  3061  0F1D                     	;# 
  3062  0F1E                     	;# 
  3063  0F1F                     	;# 
  3064  0F20                     	;# 
  3065  0F21                     	;# 
  3066  0F22                     	;# 
  3067  0F23                     	;# 
  3068  0F24                     	;# 
  3069  0F25                     	;# 
  3070  0F26                     	;# 
  3071  0F27                     	;# 
  3072  0F38                     	;# 
  3073  0F39                     	;# 
  3074  0F3A                     	;# 
  3075  0F3B                     	;# 
  3076  0F3C                     	;# 
  3077  0F3D                     	;# 
  3078  0F3E                     	;# 
  3079  0F3F                     	;# 
  3080  0F40                     	;# 
  3081  0F41                     	;# 
  3082  0F43                     	;# 
  3083  0F44                     	;# 
  3084  0F45                     	;# 
  3085  0F46                     	;# 
  3086  0F47                     	;# 
  3087  0F48                     	;# 
  3088  0F49                     	;# 
  3089  0F4A                     	;# 
  3090  0F4B                     	;# 
  3091  0F4C                     	;# 
  3092  0F4E                     	;# 
  3093  0F4F                     	;# 
  3094  0F50                     	;# 
  3095  0F51                     	;# 
  3096  0F52                     	;# 
  3097  0F53                     	;# 
  3098  0F54                     	;# 
  3099  0F55                     	;# 
  3100  0F56                     	;# 
  3101  0F57                     	;# 
  3102  0F65                     	;# 
  3103  0F68                     	;# 
  3104  0F69                     	;# 
  3105  0F6A                     	;# 
  3106  0F6B                     	;# 
  3107  0FE4                     	;# 
  3108  0FE5                     	;# 
  3109  0FE6                     	;# 
  3110  0FE7                     	;# 
  3111  0FE8                     	;# 
  3112  0FE9                     	;# 
  3113  0FEA                     	;# 
  3114  0FEB                     	;# 
  3115  0FED                     	;# 
  3116  0FEE                     	;# 
  3117  0FEF                     	;# 
  3118  0000                     	;# 
  3119  0001                     	;# 
  3120  0002                     	;# 
  3121  0003                     	;# 
  3122  0004                     	;# 
  3123  0005                     	;# 
  3124  0006                     	;# 
  3125  0007                     	;# 
  3126  0008                     	;# 
  3127  0009                     	;# 
  3128  000A                     	;# 
  3129  000B                     	;# 
  3130  000C                     	;# 
  3131  000D                     	;# 
  3132  000E                     	;# 
  3133  0010                     	;# 
  3134  0011                     	;# 
  3135  0012                     	;# 
  3136  0013                     	;# 
  3137  0016                     	;# 
  3138  0017                     	;# 
  3139  0018                     	;# 
  3140  001C                     	;# 
  3141  001C                     	;# 
  3142  001D                     	;# 
  3143  001D                     	;# 
  3144  001E                     	;# 
  3145  001F                     	;# 
  3146  008C                     	;# 
  3147  008C                     	;# 
  3148  008D                     	;# 
  3149  008E                     	;# 
  3150  008E                     	;# 
  3151  008F                     	;# 
  3152  0090                     	;# 
  3153  0090                     	;# 
  3154  0091                     	;# 
  3155  0093                     	;# 
  3156  0094                     	;# 
  3157  0095                     	;# 
  3158  0096                     	;# 
  3159  0097                     	;# 
  3160  0098                     	;# 
  3161  0099                     	;# 
  3162  009A                     	;# 
  3163  009B                     	;# 
  3164  009C                     	;# 
  3165  009D                     	;# 
  3166  009E                     	;# 
  3167  010C                     	;# 
  3168  010D                     	;# 
  3169  010E                     	;# 
  3170  010E                     	;# 
  3171  010F                     	;# 
  3172  0110                     	;# 
  3173  0110                     	;# 
  3174  0111                     	;# 
  3175  0112                     	;# 
  3176  0112                     	;# 
  3177  0113                     	;# 
  3178  0114                     	;# 
  3179  0114                     	;# 
  3180  0115                     	;# 
  3181  0116                     	;# 
  3182  0116                     	;# 
  3183  0117                     	;# 
  3184  0119                     	;# 
  3185  0119                     	;# 
  3186  0119                     	;# 
  3187  011A                     	;# 
  3188  011A                     	;# 
  3189  011A                     	;# 
  3190  011B                     	;# 
  3191  011B                     	;# 
  3192  011B                     	;# 
  3193  011B                     	;# 
  3194  011B                     	;# 
  3195  011C                     	;# 
  3196  011C                     	;# 
  3197  011C                     	;# 
  3198  011D                     	;# 
  3199  011D                     	;# 
  3200  011D                     	;# 
  3201  011E                     	;# 
  3202  011E                     	;# 
  3203  011E                     	;# 
  3204  011F                     	;# 
  3205  011F                     	;# 
  3206  011F                     	;# 
  3207  011F                     	;# 
  3208  011F                     	;# 
  3209  018C                     	;# 
  3210  018D                     	;# 
  3211  018E                     	;# 
  3212  018F                     	;# 
  3213  0190                     	;# 
  3214  0191                     	;# 
  3215  0192                     	;# 
  3216  0196                     	;# 
  3217  0197                     	;# 
  3218  0198                     	;# 
  3219  0199                     	;# 
  3220  019A                     	;# 
  3221  019B                     	;# 
  3222  019C                     	;# 
  3223  020C                     	;# 
  3224  020D                     	;# 
  3225  020E                     	;# 
  3226  020F                     	;# 
  3227  020F                     	;# 
  3228  0210                     	;# 
  3229  0210                     	;# 
  3230  0211                     	;# 
  3231  0211                     	;# 
  3232  0212                     	;# 
  3233  0213                     	;# 
  3234  0214                     	;# 
  3235  0215                     	;# 
  3236  0215                     	;# 
  3237  0216                     	;# 
  3238  0216                     	;# 
  3239  0217                     	;# 
  3240  0217                     	;# 
  3241  0218                     	;# 
  3242  0219                     	;# 
  3243  021A                     	;# 
  3244  021B                     	;# 
  3245  021B                     	;# 
  3246  021C                     	;# 
  3247  021C                     	;# 
  3248  021D                     	;# 
  3249  021D                     	;# 
  3250  021E                     	;# 
  3251  021F                     	;# 
  3252  028C                     	;# 
  3253  028C                     	;# 
  3254  028D                     	;# 
  3255  028D                     	;# 
  3256  028E                     	;# 
  3257  028F                     	;# 
  3258  0290                     	;# 
  3259  0290                     	;# 
  3260  0291                     	;# 
  3261  0292                     	;# 
  3262  0292                     	;# 
  3263  0293                     	;# 
  3264  0293                     	;# 
  3265  0294                     	;# 
  3266  0295                     	;# 
  3267  0296                     	;# 
  3268  0296                     	;# 
  3269  0297                     	;# 
  3270  0298                     	;# 
  3271  0298                     	;# 
  3272  0299                     	;# 
  3273  0299                     	;# 
  3274  029A                     	;# 
  3275  029B                     	;# 
  3276  029C                     	;# 
  3277  029C                     	;# 
  3278  029D                     	;# 
  3279  030C                     	;# 
  3280  030C                     	;# 
  3281  030D                     	;# 
  3282  030E                     	;# 
  3283  030F                     	;# 
  3284  0310                     	;# 
  3285  0310                     	;# 
  3286  0311                     	;# 
  3287  0312                     	;# 
  3288  0313                     	;# 
  3289  0314                     	;# 
  3290  0314                     	;# 
  3291  0315                     	;# 
  3292  0316                     	;# 
  3293  0317                     	;# 
  3294  0318                     	;# 
  3295  0318                     	;# 
  3296  0319                     	;# 
  3297  031A                     	;# 
  3298  031B                     	;# 
  3299  031C                     	;# 
  3300  031C                     	;# 
  3301  031D                     	;# 
  3302  031E                     	;# 
  3303  031F                     	;# 
  3304  038C                     	;# 
  3305  038D                     	;# 
  3306  038E                     	;# 
  3307  0390                     	;# 
  3308  0391                     	;# 
  3309  0392                     	;# 
  3310  040C                     	;# 
  3311  040D                     	;# 
  3312  040E                     	;# 
  3313  040F                     	;# 
  3314  0410                     	;# 
  3315  0411                     	;# 
  3316  0416                     	;# 
  3317  0416                     	;# 
  3318  0417                     	;# 
  3319  0418                     	;# 
  3320  0418                     	;# 
  3321  0419                     	;# 
  3322  041A                     	;# 
  3323  041A                     	;# 
  3324  041B                     	;# 
  3325  041C                     	;# 
  3326  041C                     	;# 
  3327  041D                     	;# 
  3328  041E                     	;# 
  3329  041F                     	;# 
  3330  048C                     	;# 
  3331  048C                     	;# 
  3332  048D                     	;# 
  3333  048E                     	;# 
  3334  048F                     	;# 
  3335  048F                     	;# 
  3336  0490                     	;# 
  3337  0491                     	;# 
  3338  0492                     	;# 
  3339  0492                     	;# 
  3340  0493                     	;# 
  3341  0494                     	;# 
  3342  0495                     	;# 
  3343  0495                     	;# 
  3344  0496                     	;# 
  3345  0497                     	;# 
  3346  0498                     	;# 
  3347  0499                     	;# 
  3348  049A                     	;# 
  3349  049B                     	;# 
  3350  049C                     	;# 
  3351  049D                     	;# 
  3352  050C                     	;# 
  3353  050C                     	;# 
  3354  050D                     	;# 
  3355  050E                     	;# 
  3356  050F                     	;# 
  3357  050F                     	;# 
  3358  0510                     	;# 
  3359  0511                     	;# 
  3360  0512                     	;# 
  3361  0512                     	;# 
  3362  0513                     	;# 
  3363  0514                     	;# 
  3364  0515                     	;# 
  3365  0515                     	;# 
  3366  0516                     	;# 
  3367  0517                     	;# 
  3368  0518                     	;# 
  3369  0519                     	;# 
  3370  051A                     	;# 
  3371  051B                     	;# 
  3372  051C                     	;# 
  3373  051D                     	;# 
  3374  058C                     	;# 
  3375  058C                     	;# 
  3376  058D                     	;# 
  3377  058E                     	;# 
  3378  058F                     	;# 
  3379  058F                     	;# 
  3380  0590                     	;# 
  3381  0591                     	;# 
  3382  0592                     	;# 
  3383  0593                     	;# 
  3384  060C                     	;# 
  3385  060D                     	;# 
  3386  060E                     	;# 
  3387  060F                     	;# 
  3388  0610                     	;# 
  3389  0611                     	;# 
  3390  0612                     	;# 
  3391  0613                     	;# 
  3392  0614                     	;# 
  3393  0616                     	;# 
  3394  0617                     	;# 
  3395  0618                     	;# 
  3396  0619                     	;# 
  3397  061A                     	;# 
  3398  061B                     	;# 
  3399  061C                     	;# 
  3400  061D                     	;# 
  3401  061E                     	;# 
  3402  068C                     	;# 
  3403  068D                     	;# 
  3404  068E                     	;# 
  3405  068F                     	;# 
  3406  0690                     	;# 
  3407  0691                     	;# 
  3408  0692                     	;# 
  3409  0693                     	;# 
  3410  0694                     	;# 
  3411  070C                     	;# 
  3412  070D                     	;# 
  3413  070E                     	;# 
  3414  070F                     	;# 
  3415  0710                     	;# 
  3416  0711                     	;# 
  3417  0712                     	;# 
  3418  0713                     	;# 
  3419  0714                     	;# 
  3420  0716                     	;# 
  3421  0717                     	;# 
  3422  0718                     	;# 
  3423  0719                     	;# 
  3424  071A                     	;# 
  3425  071B                     	;# 
  3426  071C                     	;# 
  3427  071D                     	;# 
  3428  071E                     	;# 
  3429  0796                     	;# 
  3430  0797                     	;# 
  3431  0798                     	;# 
  3432  0799                     	;# 
  3433  079A                     	;# 
  3434  079B                     	;# 
  3435  080C                     	;# 
  3436  080D                     	;# 
  3437  080E                     	;# 
  3438  080F                     	;# 
  3439  0810                     	;# 
  3440  0811                     	;# 
  3441  0812                     	;# 
  3442  0813                     	;# 
  3443  0814                     	;# 
  3444  081A                     	;# 
  3445  081B                     	;# 
  3446  081C                     	;# 
  3447  081D                     	;# 
  3448  081E                     	;# 
  3449  081F                     	;# 
  3450  088C                     	;# 
  3451  088D                     	;# 
  3452  088E                     	;# 
  3453  088F                     	;# 
  3454  0890                     	;# 
  3455  0891                     	;# 
  3456  0892                     	;# 
  3457  0893                     	;# 
  3458  0895                     	;# 
  3459  0896                     	;# 
  3460  0897                     	;# 
  3461  0898                     	;# 
  3462  0899                     	;# 
  3463  089A                     	;# 
  3464  089B                     	;# 
  3465  090C                     	;# 
  3466  090E                     	;# 
  3467  090F                     	;# 
  3468  091F                     	;# 
  3469  091F                     	;# 
  3470  098F                     	;# 
  3471  098F                     	;# 
  3472  0990                     	;# 
  3473  0991                     	;# 
  3474  0992                     	;# 
  3475  0993                     	;# 
  3476  0994                     	;# 
  3477  0995                     	;# 
  3478  0996                     	;# 
  3479  0997                     	;# 
  3480  0E0F                     	;# 
  3481  0E10                     	;# 
  3482  0E11                     	;# 
  3483  0E12                     	;# 
  3484  0E13                     	;# 
  3485  0E14                     	;# 
  3486  0E15                     	;# 
  3487  0E16                     	;# 
  3488  0E17                     	;# 
  3489  0E18                     	;# 
  3490  0E19                     	;# 
  3491  0E1A                     	;# 
  3492  0E1B                     	;# 
  3493  0E1C                     	;# 
  3494  0E1D                     	;# 
  3495  0E1E                     	;# 
  3496  0E1F                     	;# 
  3497  0E20                     	;# 
  3498  0E21                     	;# 
  3499  0E22                     	;# 
  3500  0E23                     	;# 
  3501  0E24                     	;# 
  3502  0E25                     	;# 
  3503  0E26                     	;# 
  3504  0E27                     	;# 
  3505  0E28                     	;# 
  3506  0E29                     	;# 
  3507  0E2A                     	;# 
  3508  0E2B                     	;# 
  3509  0E2C                     	;# 
  3510  0E2D                     	;# 
  3511  0E2E                     	;# 
  3512  0E2F                     	;# 
  3513  0E30                     	;# 
  3514  0E31                     	;# 
  3515  0E32                     	;# 
  3516  0E33                     	;# 
  3517  0E34                     	;# 
  3518  0E35                     	;# 
  3519  0E36                     	;# 
  3520  0E37                     	;# 
  3521  0E8F                     	;# 
  3522  0E90                     	;# 
  3523  0E91                     	;# 
  3524  0E92                     	;# 
  3525  0E93                     	;# 
  3526  0E94                     	;# 
  3527  0E95                     	;# 
  3528  0E96                     	;# 
  3529  0E97                     	;# 
  3530  0E9C                     	;# 
  3531  0E9D                     	;# 
  3532  0E9E                     	;# 
  3533  0EA1                     	;# 
  3534  0EA2                     	;# 
  3535  0EA3                     	;# 
  3536  0EA4                     	;# 
  3537  0EA5                     	;# 
  3538  0EA9                     	;# 
  3539  0EAA                     	;# 
  3540  0EAB                     	;# 
  3541  0EAC                     	;# 
  3542  0EB1                     	;# 
  3543  0EB2                     	;# 
  3544  0EB3                     	;# 
  3545  0EB8                     	;# 
  3546  0EB9                     	;# 
  3547  0EBA                     	;# 
  3548  0EBB                     	;# 
  3549  0EBC                     	;# 
  3550  0EBD                     	;# 
  3551  0EBE                     	;# 
  3552  0EC3                     	;# 
  3553  0EC5                     	;# 
  3554  0EC6                     	;# 
  3555  0EC7                     	;# 
  3556  0EC8                     	;# 
  3557  0EC9                     	;# 
  3558  0ECA                     	;# 
  3559  0ECB                     	;# 
  3560  0ECC                     	;# 
  3561  0F10                     	;# 
  3562  0F11                     	;# 
  3563  0F12                     	;# 
  3564  0F13                     	;# 
  3565  0F14                     	;# 
  3566  0F15                     	;# 
  3567  0F16                     	;# 
  3568  0F17                     	;# 
  3569  0F18                     	;# 
  3570  0F19                     	;# 
  3571  0F1A                     	;# 
  3572  0F1B                     	;# 
  3573  0F1C                     	;# 
  3574  0F1D                     	;# 
  3575  0F1E                     	;# 
  3576  0F1F                     	;# 
  3577  0F20                     	;# 
  3578  0F21                     	;# 
  3579  0F22                     	;# 
  3580  0F23                     	;# 
  3581  0F24                     	;# 
  3582  0F25                     	;# 
  3583  0F26                     	;# 
  3584  0F27                     	;# 
  3585  0F38                     	;# 
  3586  0F39                     	;# 
  3587  0F3A                     	;# 
  3588  0F3B                     	;# 
  3589  0F3C                     	;# 
  3590  0F3D                     	;# 
  3591  0F3E                     	;# 
  3592  0F3F                     	;# 
  3593  0F40                     	;# 
  3594  0F41                     	;# 
  3595  0F43                     	;# 
  3596  0F44                     	;# 
  3597  0F45                     	;# 
  3598  0F46                     	;# 
  3599  0F47                     	;# 
  3600  0F48                     	;# 
  3601  0F49                     	;# 
  3602  0F4A                     	;# 
  3603  0F4B                     	;# 
  3604  0F4C                     	;# 
  3605  0F4E                     	;# 
  3606  0F4F                     	;# 
  3607  0F50                     	;# 
  3608  0F51                     	;# 
  3609  0F52                     	;# 
  3610  0F53                     	;# 
  3611  0F54                     	;# 
  3612  0F55                     	;# 
  3613  0F56                     	;# 
  3614  0F57                     	;# 
  3615  0F65                     	;# 
  3616  0F68                     	;# 
  3617  0F69                     	;# 
  3618  0F6A                     	;# 
  3619  0F6B                     	;# 
  3620  0FE4                     	;# 
  3621  0FE5                     	;# 
  3622  0FE6                     	;# 
  3623  0FE7                     	;# 
  3624  0FE8                     	;# 
  3625  0FE9                     	;# 
  3626  0FEA                     	;# 
  3627  0FEB                     	;# 
  3628  0FED                     	;# 
  3629  0FEE                     	;# 
  3630  0FEF                     	;# 
  3631                           
  3632                           	psect	idataBANK1
  3633  0684                     __pidataBANK1:	
  3634                           
  3635                           ;initializer for main@F13685
  3636  0684  3470               	retlw	112
  3637  0685  3469               	retlw	105
  3638  0686  3463               	retlw	99
  3639  0687  3465               	retlw	101
  3640  0688  3472               	retlw	114
  3641  0689  3472               	retlw	114
  3642  068A  3400               	retlw	0
  3643                           
  3644                           	psect	stringtext
  3645  04E4                     __pstringtext:	
  3646  04E4                     _dpowers:	
  3647  04E4  3401               	retlw	1
  3648  04E5  3400               	retlw	0
  3649  04E6  340A               	retlw	10
  3650  04E7  3400               	retlw	0
  3651  04E8  3464               	retlw	100
  3652  04E9  3400               	retlw	0
  3653  04EA  34E8               	retlw	232
  3654  04EB  3403               	retlw	3
  3655  04EC  3410               	retlw	16
  3656  04ED  3427               	retlw	39
  3657  04EE                     __end_of_dpowers:	
  3658  04EE                     STR_2:	
  3659  04EE  343C               	retlw	60	;'<'
  3660  04EF  3425               	retlw	37	;'%'
  3661  04F0  3475               	retlw	117	;'u'
  3662  04F1  342C               	retlw	44	;','
  3663  04F2  3425               	retlw	37	;'%'
  3664  04F3  3475               	retlw	117	;'u'
  3665  04F4  342C               	retlw	44	;','
  3666  04F5  3425               	retlw	37	;'%'
  3667  04F6  3475               	retlw	117	;'u'
  3668  04F7  342C               	retlw	44	;','
  3669  04F8  3425               	retlw	37	;'%'
  3670  04F9  3475               	retlw	117	;'u'
  3671  04FA  342F               	retlw	47	;'/'
  3672  04FB  343E               	retlw	62	;'>'
  3673  04FC  3400               	retlw	0
  3674  04FD                     STR_5:	
  3675  04FD  3425               	retlw	37	;'%'
  3676  04FE  3473               	retlw	115	;'s'
  3677  04FF  3420               	retlw	32	;' '
  3678  0500  343A               	retlw	58	;':'
  3679  0501  3420               	retlw	32	;' '
  3680  0502  3425               	retlw	37	;'%'
  3681  0503  3473               	retlw	115	;'s'
  3682  0504  342E               	retlw	46	;'.'
  3683  0505  3400               	retlw	0
  3684  0506                     STR_6:	
  3685  0506  3428               	retlw	40	;'('
  3686  0507  346E               	retlw	110	;'n'
  3687  0508  3475               	retlw	117	;'u'
  3688  0509  346C               	retlw	108	;'l'
  3689  050A  346C               	retlw	108	;'l'
  3690  050B  3429               	retlw	41	;')'
  3691  050C  3400               	retlw	0
  3692  050D                     STR_4:	
  3693  050D  346F               	retlw	111	;'o'
  3694  050E  346B               	retlw	107	;'k'
  3695  050F  343A               	retlw	58	;':'
  3696  0510  3420               	retlw	32	;' '
  3697  0511  3425               	retlw	37	;'%'
  3698  0512  3475               	retlw	117	;'u'
  3699  0513  3400               	retlw	0
  3700  0514                     STR_1:	
  3701  0514  3425               	retlw	37	;'%'
  3702  0515  3463               	retlw	99	;'c'
  3703  0516  3400               	retlw	0
  3704  0514                     
  3705                           ; #config settings
  3706  0000                     
  3707                           	psect	nvBANK0
  3708  0056                     __pnvBANK0:	
  3709  0056                     _eusartTxBufferRemaining:	
  3710  0056                     	ds	1
  3711  000B                     _INTCONbits	set	11
  3712  0016                     _LATA	set	22
  3713  0016                     _LATAbits	set	22
  3714  0017                     _LATB	set	23
  3715  0018                     _LATC	set	24
  3716  0011                     _TRISA	set	17
  3717  0012                     _TRISB	set	18
  3718  0013                     _TRISC	set	19
  3719  005F                     _GIE	set	95
  3720  011F                     _BAUD1CON	set	287
  3721  0119                     _RC1REG	set	281
  3722  011D                     _RC1STA	set	285
  3723  011D                     _RC1STAbits	set	285
  3724  011C                     _SP1BRGH	set	284
  3725  011B                     _SP1BRGL	set	283
  3726  011A                     _TX1REG	set	282
  3727  011E                     _TX1STA	set	286
  3728  0719                     _PIE3bits	set	1817
  3729  070F                     _PIR3bits	set	1807
  3730  081B                     _NVMADRH	set	2075
  3731  081A                     _NVMADRL	set	2074
  3732  081E                     _NVMCON1bits	set	2078
  3733  081F                     _NVMCON2	set	2079
  3734  081D                     _NVMDATH	set	2077
  3735  081C                     _NVMDATL	set	2076
  3736  088D                     _OSCCON1	set	2189
  3737  088F                     _OSCCON3	set	2191
  3738  0891                     _OSCEN	set	2193
  3739  0893                     _OSCFRQ	set	2195
  3740  0892                     _OSCTUNE	set	2194
  3741  0E8F                     _PPSLOCK	set	3727
  3742  0E8F                     _PPSLOCKbits	set	3727
  3743  0ECB                     _RXPPSbits	set	3787
  3744  0F38                     _ANSELA	set	3896
  3745  0F43                     _ANSELB	set	3907
  3746  0F4E                     _ANSELC	set	3918
  3747  0F3A                     _ODCONA	set	3898
  3748  0F45                     _ODCONB	set	3909
  3749  0F50                     _ODCONC	set	3920
  3750  0F26                     _RC6PPS	set	3878
  3751  0F39                     _WPUA	set	3897
  3752  0F44                     _WPUB	set	3908
  3753  0F4F                     _WPUC	set	3919
  3754  0F65                     _WPUE	set	3941
  3755                           
  3756                           	psect	cinit
  3757  0022                     start_initialization:	
  3758  0022                     __initialization:	
  3759                           
  3760                           ; Initialize objects allocated to BANK1
  3761  0022  3084               	movlw	low __pidataBANK1
  3762  0023  0084               	movwf	4
  3763  0024  3086               	movlw	(high __pidataBANK1)| (0+128)
  3764  0025  0085               	movwf	5
  3765  0026  30DF               	movlw	low __pdataBANK1
  3766  0027  0086               	movwf	6
  3767  0028  3000               	movlw	high __pdataBANK1
  3768  0029  0087               	movwf	7
  3769  002A  3007               	movlw	7
  3770  002B  3186  268B  3180   	fcall	init_ram
  3771                           
  3772                           ; Clear objects allocated to COMMON
  3773  002E  01FA               	clrf	__pbssCOMMON& (0+127)
  3774  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3775                           
  3776                           ; Clear objects allocated to BANK0
  3777  0030  3042               	movlw	low __pbssBANK0
  3778  0031  0084               	movwf	4
  3779  0032  3000               	movlw	high __pbssBANK0
  3780  0033  0085               	movwf	5
  3781  0034  3014               	movlw	20
  3782  0035  3186  2691         	fcall	clear_ram0
  3783  0037                     end_of_initialization:	
  3784                           ;End of C runtime variable initialization code
  3785                           
  3786  0037                     __end_of__initialization:	
  3787  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3788  0038  0020               	movlb	0
  3789  0039  3180  283B         	ljmp	_main	;jump to C main() function
  3790                           
  3791                           	psect	bssCOMMON
  3792  007A                     __pbssCOMMON:	
  3793  007A                     _eusartRxCount:	
  3794  007A                     	ds	1
  3795  007B                     _eusartTxHead:	
  3796  007B                     	ds	1
  3797                           
  3798                           	psect	bssBANK0
  3799  0042                     __pbssBANK0:	
  3800  0042                     _eusartRxBuffer:	
  3801  0042                     	ds	8
  3802  004A                     _eusartTxBuffer:	
  3803  004A                     	ds	8
  3804  0052                     _eusartRxHead:	
  3805  0052                     	ds	1
  3806  0053                     _eusartRxTail:	
  3807  0053                     	ds	1
  3808  0054                     _eusartTxTail:	
  3809  0054                     	ds	1
  3810  0055                     _varcounter:	
  3811  0055                     	ds	1
  3812                           
  3813                           	psect	dataBANK1
  3814  00DF                     __pdataBANK1:	
  3815  00DF                     main@F13685:	
  3816  00DF                     	ds	7
  3817                           
  3818                           	psect	inittext
  3819  068B                     init_ram:	
  3820  068B  00FE               	movwf	126
  3821  068C                     initloop:	
  3822  068C  0012               	moviw fsr0++
  3823  068D  001E               	movwi fsr1++
  3824  068E  0BFE               	decfsz	126,f
  3825  068F  2E8C               	goto	initloop
  3826  0690  3400               	retlw	0
  3827                           
  3828                           	psect	clrtext
  3829  0691                     clear_ram0:	
  3830                           ;	Called with FSR0 containing the base address, and
  3831                           ;	WREG with the size to clear
  3832                           
  3833  0691  0064               	clrwdt	;clear the watchdog before getting into this loop
  3834  0692                     clrloop0:	
  3835  0692  0180               	clrf	0	;clear RAM location pointed to by FSR
  3836  0693  3101               	addfsr 0,1
  3837  0694  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3838  0695  2E92               	goto	clrloop0	;have we reached the end yet?
  3839  0696  3400               	retlw	0	;all done for this memory range, return
  3840                           
  3841                           	psect	cstackBANK1
  3842  00A0                     __pcstackBANK1:	
  3843  00A0                     main@err:	
  3844                           
  3845                           ; 7 bytes @ 0x0
  3846  00A0                     	ds	7
  3847  00A7                     main@add:	
  3848                           
  3849                           ; 5 bytes @ 0x7
  3850  00A7                     	ds	5
  3851  00AC                     main@check:	
  3852                           
  3853                           ; 20 bytes @ 0xC
  3854  00AC                     	ds	20
  3855  00C0                     main@address:	
  3856                           
  3857                           ; 2 bytes @ 0x20
  3858  00C0                     	ds	2
  3859  00C2                     main@j:	
  3860                           
  3861                           ; 2 bytes @ 0x22
  3862  00C2                     	ds	2
  3863  00C4                     main@temp:	
  3864                           
  3865                           ; 5 bytes @ 0x24
  3866  00C4                     	ds	5
  3867  00C9                     main@i:	
  3868                           
  3869                           ; 2 bytes @ 0x29
  3870  00C9                     	ds	2
  3871  00CB                     main@val:	
  3872                           
  3873                           ; 2 bytes @ 0x2B
  3874  00CB                     	ds	2
  3875  00CD                     main@i_444:	
  3876                           
  3877                           ; 2 bytes @ 0x2D
  3878  00CD                     	ds	2
  3879  00CF                     main@i_449:	
  3880                           
  3881                           ; 2 bytes @ 0x2F
  3882  00CF                     	ds	2
  3883  00D1                     main@led:	
  3884                           
  3885                           ; 5 bytes @ 0x31
  3886  00D1                     	ds	5
  3887  00D6                     main@modifier:	
  3888                           
  3889                           ; 2 bytes @ 0x36
  3890  00D6                     	ds	2
  3891  00D8                     main@tmp:	
  3892                           
  3893                           ; 5 bytes @ 0x38
  3894  00D8                     	ds	5
  3895  00DD                     main@i_445:	
  3896                           
  3897                           ; 2 bytes @ 0x3D
  3898  00DD                     	ds	2
  3899                           
  3900                           	psect	cstackCOMMON
  3901  0070                     __pcstackCOMMON:	
  3902  0070                     ?_PIN_MANAGER_Initialize:	
  3903  0070                     ?_OSCILLATOR_Initialize:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_EUSART_Initialize:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ?_EUSART_Transmit_ISR:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ??_EUSART_Transmit_ISR:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ?_EUSART_Receive_ISR:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ??_EUSART_Receive_ISR:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?_getValidString:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0070                     ?_SYSTEM_Initialize:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0070                     ?_INTERRUPT_InterruptManager:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     ?_EUSART_Read:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     ?_EUSART_Write:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0070                     ?_InitPorts:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ?_putch:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?_main:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945                           
  3946                           ; 1 bytes @ 0x0
  3947  0070                     	ds	1
  3948  0071                     ??_INTERRUPT_InterruptManager:	
  3949                           
  3950                           ; 1 bytes @ 0x1
  3951  0071                     	ds	1
  3952  0072                     ??_PIN_MANAGER_Initialize:	
  3953  0072                     ??_OSCILLATOR_Initialize:	
  3954                           ; 1 bytes @ 0x2
  3955                           
  3956  0072                     ??_EUSART_Initialize:	
  3957                           ; 1 bytes @ 0x2
  3958                           
  3959  0072                     ??_EUSART_Read:	
  3960                           ; 1 bytes @ 0x2
  3961                           
  3962  0072                     ??_EUSART_Write:	
  3963                           ; 1 bytes @ 0x2
  3964                           
  3965  0072                     ?_DATAEE_WriteByte:	
  3966                           ; 1 bytes @ 0x2
  3967                           
  3968  0072                     ?_DATAEE_ReadByte:	
  3969                           ; 1 bytes @ 0x2
  3970                           
  3971  0072                     ??_InitPorts:	
  3972                           ; 1 bytes @ 0x2
  3973                           
  3974  0072                     ?___wmul:	
  3975                           ; 1 bytes @ 0x2
  3976                           
  3977  0072                     ?___awdiv:	
  3978                           ; 2 bytes @ 0x2
  3979                           
  3980  0072                     ?___lwdiv:	
  3981                           ; 2 bytes @ 0x2
  3982                           
  3983  0072                     PIN_MANAGER_Initialize@state:	
  3984                           ; 2 bytes @ 0x2
  3985                           
  3986  0072                     DATAEE_WriteByte@bAdd:	
  3987                           ; 1 bytes @ 0x2
  3988                           
  3989  0072                     DATAEE_ReadByte@bAdd:	
  3990                           ; 2 bytes @ 0x2
  3991                           
  3992  0072                     ___wmul@multiplier:	
  3993                           ; 2 bytes @ 0x2
  3994                           
  3995  0072                     ___awdiv@divisor:	
  3996                           ; 2 bytes @ 0x2
  3997                           
  3998  0072                     ___lwdiv@divisor:	
  3999                           ; 2 bytes @ 0x2
  4000                           
  4001                           
  4002                           ; 2 bytes @ 0x2
  4003  0072                     	ds	1
  4004  0073                     ??_SYSTEM_Initialize:	
  4005  0073                     EUSART_Read@readValue:	
  4006                           ; 1 bytes @ 0x3
  4007                           
  4008  0073                     EUSART_Write@txData:	
  4009                           ; 1 bytes @ 0x3
  4010                           
  4011                           
  4012                           ; 1 bytes @ 0x3
  4013  0073                     	ds	1
  4014  0074                     ??_getValidString:	
  4015  0074                     ??_DATAEE_ReadByte:	
  4016                           ; 1 bytes @ 0x4
  4017                           
  4018  0074                     ??_putch:	
  4019                           ; 1 bytes @ 0x4
  4020                           
  4021  0074                     DATAEE_WriteByte@bData:	
  4022                           ; 1 bytes @ 0x4
  4023                           
  4024  0074                     putch@d:	
  4025                           ; 1 bytes @ 0x4
  4026                           
  4027  0074                     ___wmul@multiplicand:	
  4028                           ; 1 bytes @ 0x4
  4029                           
  4030  0074                     ___awdiv@dividend:	
  4031                           ; 2 bytes @ 0x4
  4032                           
  4033  0074                     ___lwdiv@dividend:	
  4034                           ; 2 bytes @ 0x4
  4035                           
  4036                           
  4037                           ; 2 bytes @ 0x4
  4038  0074                     	ds	1
  4039  0075                     ??_DATAEE_WriteByte:	
  4040  0075                     DATAEE_WriteByte@GIEBitValue:	
  4041                           ; 1 bytes @ 0x5
  4042                           
  4043  0075                     getValidString@data:	
  4044                           ; 1 bytes @ 0x5
  4045                           
  4046                           
  4047                           ; 1 bytes @ 0x5
  4048  0075                     	ds	1
  4049  0076                     ??_writeToMemory:	
  4050  0076                     ??___wmul:	
  4051                           ; 1 bytes @ 0x6
  4052                           
  4053  0076                     ??___awdiv:	
  4054                           ; 1 bytes @ 0x6
  4055                           
  4056  0076                     ??___lwdiv:	
  4057                           ; 1 bytes @ 0x6
  4058                           
  4059  0076                     getValidString@oldbuffer:	
  4060                           ; 1 bytes @ 0x6
  4061                           
  4062  0076                     ___wmul@product:	
  4063                           ; 1 bytes @ 0x6
  4064                           
  4065                           
  4066                           ; 2 bytes @ 0x6
  4067  0076                     	ds	1
  4068  0077                     getValidString@wait:	
  4069  0077                     ___lwdiv@quotient:	
  4070                           ; 1 bytes @ 0x7
  4071                           
  4072                           
  4073                           ; 2 bytes @ 0x7
  4074  0077                     	ds	1
  4075  0078                     ??_readFromMemory:	
  4076  0078                     ??_convertCharToInt:	
  4077                           ; 1 bytes @ 0x8
  4078                           
  4079  0078                     getValidString@buffer:	
  4080                           ; 1 bytes @ 0x8
  4081                           
  4082                           
  4083                           ; 1 bytes @ 0x8
  4084  0078                     	ds	1
  4085  0079                     ___lwdiv@counter:	
  4086                           
  4087                           ; 1 bytes @ 0x9
  4088  0079                     	ds	1
  4089                           
  4090                           	psect	cstackBANK0
  4091  0020                     __pcstackBANK0:	
  4092  0020                     ?_writeToMemory:	
  4093  0020                     ?___lwmod:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0020                     ?_readFromMemory:	
  4097                           ; 2 bytes @ 0x0
  4098                           
  4099  0020                     ___awdiv@counter:	
  4100                           ; 5 bytes @ 0x0
  4101                           
  4102  0020                     readFromMemory@address:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0020                     ___lwmod@divisor:	
  4106                           ; 2 bytes @ 0x0
  4107                           
  4108  0020                     writeToMemory@tmp:	
  4109                           ; 2 bytes @ 0x0
  4110                           
  4111                           
  4112                           ; 5 bytes @ 0x0
  4113  0020                     	ds	1
  4114  0021                     ___awdiv@sign:	
  4115                           
  4116                           ; 1 bytes @ 0x1
  4117  0021                     	ds	1
  4118  0022                     ___awdiv@quotient:	
  4119  0022                     ___lwmod@dividend:	
  4120                           ; 2 bytes @ 0x2
  4121                           
  4122                           
  4123                           ; 2 bytes @ 0x2
  4124  0022                     	ds	2
  4125  0024                     ??___lwmod:	
  4126  0024                     ?_convertCharToInt:	
  4127                           ; 1 bytes @ 0x4
  4128                           
  4129                           
  4130                           ; 2 bytes @ 0x4
  4131  0024                     	ds	1
  4132  0025                     ___lwmod@counter:	
  4133  0025                     readFromMemory@tmp:	
  4134                           ; 1 bytes @ 0x5
  4135                           
  4136                           
  4137                           ; 5 bytes @ 0x5
  4138  0025                     	ds	1
  4139  0026                     ?_printf:	
  4140  0026                     convertCharToInt@buffer:	
  4141                           ; 2 bytes @ 0x6
  4142                           
  4143  0026                     printf@f:	
  4144                           ; 1 bytes @ 0x6
  4145                           
  4146                           
  4147                           ; 2 bytes @ 0x6
  4148  0026                     	ds	1
  4149  0027                     convertCharToInt@modifier:	
  4150                           
  4151                           ; 2 bytes @ 0x7
  4152  0027                     	ds	2
  4153  0029                     convertCharToInt@value:	
  4154                           
  4155                           ; 2 bytes @ 0x9
  4156  0029                     	ds	2
  4157  002B                     convertCharToInt@j:	
  4158                           
  4159                           ; 2 bytes @ 0xB
  4160  002B                     	ds	5
  4161  0030                     ??_printf:	
  4162                           
  4163                           ; 1 bytes @ 0x10
  4164  0030                     	ds	4
  4165  0034                     printf@flag:	
  4166                           
  4167                           ; 1 bytes @ 0x14
  4168  0034                     	ds	1
  4169  0035                     printf@val:	
  4170                           
  4171                           ; 2 bytes @ 0x15
  4172  0035                     	ds	2
  4173  0037                     printf@prec:	
  4174                           
  4175                           ; 1 bytes @ 0x17
  4176  0037                     	ds	1
  4177  0038                     printf@cp:	
  4178                           
  4179                           ; 2 bytes @ 0x18
  4180  0038                     	ds	2
  4181  003A                     printf@ap:	
  4182                           
  4183                           ; 1 bytes @ 0x1A
  4184  003A                     	ds	1
  4185  003B                     printf@c:	
  4186                           
  4187                           ; 1 bytes @ 0x1B
  4188  003B                     	ds	1
  4189  003C                     ??_main:	
  4190                           
  4191                           ; 1 bytes @ 0x1C
  4192  003C                     	ds	6
  4193                           
  4194                           	psect	maintext
  4195  003B                     __pmaintext:	
  4196 ;;
  4197 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  4198 ;;
  4199 ;; *************** function _main *****************
  4200 ;; Defined at:
  4201 ;;		line 105 in file "main.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  j               2   34[BANK1 ] int 
  4206 ;;  tmp             5   56[BANK1 ] struct var
  4207 ;;  i               2   47[BANK1 ] int 
  4208 ;;  i               2   61[BANK1 ] int 
  4209 ;;  i               2   45[BANK1 ] int 
  4210 ;;  i               2   41[BANK1 ] int 
  4211 ;;  temp            5   36[BANK1 ] struct var
  4212 ;;  add             5    7[BANK1 ] unsigned char [5]
  4213 ;;  modifier        2   54[BANK1 ] int 
  4214 ;;  val             2   43[BANK1 ] int 
  4215 ;;  address         2   32[BANK1 ] int 
  4216 ;;  check          20   12[BANK1 ] unsigned char [20]
  4217 ;;  err             7    0[BANK1 ] unsigned char [7]
  4218 ;;  led             5   49[BANK1 ] struct var
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : B1F/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Locals:         0       0      63       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Totals:         0       6      63       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;Total ram usage:       69 bytes
  4233 ;; Hardware stack levels required when called:    5
  4234 ;; This function calls:
  4235 ;;		_InitPorts
  4236 ;;		_SYSTEM_Initialize
  4237 ;;		___awdiv
  4238 ;;		___wmul
  4239 ;;		_convertCharToInt
  4240 ;;		_getValidString
  4241 ;;		_printf
  4242 ;;		_readFromMemory
  4243 ;;		_writeToMemory
  4244 ;; This function is called by:
  4245 ;;		Startup code after reset
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _main
  4251  003B                     _main:	
  4252                           
  4253                           ;main.c: 108: SYSTEM_Initialize();
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4257  003B  3186  2672  3180   	fcall	_SYSTEM_Initialize
  4258                           
  4259                           ;main.c: 114: (INTCONbits.GIE = 1);
  4260  003E  178B               	bsf	11,7	;volatile
  4261                           
  4262                           ;main.c: 117: (INTCONbits.PEIE = 1);
  4263  003F  170B               	bsf	11,6	;volatile
  4264                           
  4265                           ;main.c: 125: InitPorts();
  4266  0040  3186  2697  3180   	fcall	_InitPorts
  4267                           
  4268                           ;main.c: 127: LATAbits.LATA3 = 1;
  4269  0043  0020               	movlb	0	; select bank0
  4270  0044  1596               	bsf	22,3	;volatile
  4271                           
  4272                           ;main.c: 129: char check[20];
  4273                           ;main.c: 130: char err[] = "picerr";
  4274  0045  30DF               	movlw	low main@F13685
  4275  0046  0086               	movwf	6
  4276  0047  3000               	movlw	high main@F13685
  4277  0048  0087               	movwf	7
  4278  0049  30A0               	movlw	low main@err
  4279  004A  0084               	movwf	4
  4280  004B  3000               	movlw	high main@err
  4281  004C  0085               	movwf	5
  4282  004D  3007               	movlw	7
  4283  004E  00BC               	movwf	??_main
  4284  004F                     u2090:	
  4285  004F  0016               	moviw fsr1++
  4286  0050  001A               	movwi fsr0++
  4287  0051  0BBC               	decfsz	??_main,f
  4288  0052  284F               	goto	u2090
  4289  0053  2A7A               	goto	l2275
  4290  0054                     l2279:	
  4291                           
  4292                           ;main.c: 137: {
  4293                           ;main.c: 138: getValidString(check);
  4294  0054  30AC               	movlw	(low (main@check| 0))& (0+255)
  4295  0055  3185  2517  3180   	fcall	_getValidString
  4296                           
  4297                           ;main.c: 140: if(check[1] == '5' && check[2] == '0')
  4298  0058  3035               	movlw	53
  4299  0059  0021               	movlb	1	; select bank1
  4300  005A  062D               	xorwf	(main@check^(0+128)+1),w
  4301  005B  1D03               	btfss	3,2
  4302  005C  28E8               	goto	l2301
  4303  005D  3030               	movlw	48
  4304  005E  062E               	xorwf	(main@check^(0+128)+2),w
  4305  005F  1D03               	btfss	3,2
  4306  0060  28E8               	goto	l2301
  4307                           
  4308                           ;main.c: 141: {
  4309                           ;main.c: 142: printf("%c", 2);
  4310  0061  3014               	movlw	low (STR_1| (0+32768))
  4311  0062  0020               	movlb	0	; select bank0
  4312  0063  00A6               	movwf	printf@f
  4313  0064  3085               	movlw	high (STR_1| (0+32768))
  4314  0065  00A7               	movwf	printf@f+1
  4315  0066  3002               	movlw	2
  4316  0067  00A8               	movwf	?_printf+2
  4317  0068  3000               	movlw	0
  4318  0069  00A9               	movwf	?_printf+3
  4319  006A  3182  22B3  3180   	fcall	_printf
  4320                           
  4321                           ;main.c: 143: for(int i = 0; i < 3; i++)
  4322  006D  0021               	movlb	1	; select bank1
  4323  006E  01C9               	clrf	main@i^(0+128)
  4324  006F  01CA               	clrf	(main@i+1)^(0+128)
  4325  0070  084A               	movf	(main@i+1)^(0+128),w
  4326  0071  3A80               	xorlw	128
  4327  0072  0020               	movlb	0	; select bank0
  4328  0073  00BC               	movwf	??_main
  4329  0074  3080               	movlw	128
  4330  0075  023C               	subwf	??_main,w
  4331  0076  1D03               	skipz
  4332  0077  287B               	goto	u2135
  4333  0078  3003               	movlw	3
  4334  0079  0021               	movlb	1	; select bank1
  4335  007A  0249               	subwf	main@i^(0+128),w
  4336  007B                     u2135:	
  4337  007B  1803               	btfsc	3,0
  4338  007C  28DE               	goto	l2299
  4339  007D                     l2293:	
  4340                           
  4341                           ;main.c: 144: {
  4342                           ;main.c: 145: struct var tmp = readFromMemory(0x7000 + i*3);
  4343  007D  0021               	movlb	1	; select bank1
  4344  007E  084A               	movf	(main@i+1)^(0+128),w
  4345  007F  00F3               	movwf	___wmul@multiplier+1
  4346  0080  0849               	movf	main@i^(0+128),w
  4347  0081  00F2               	movwf	___wmul@multiplier
  4348  0082  3003               	movlw	3
  4349  0083  00F4               	movwf	___wmul@multiplicand
  4350  0084  3000               	movlw	0
  4351  0085  00F5               	movwf	___wmul@multiplicand+1
  4352  0086  3186  2615  3180   	fcall	___wmul
  4353  0089  0872               	movf	?___wmul,w
  4354  008A  3E00               	addlw	0
  4355  008B  0020               	movlb	0	; select bank0
  4356  008C  00A0               	movwf	readFromMemory@address
  4357  008D  3070               	movlw	112
  4358  008E  3D73               	addwfc	?___wmul+1,w
  4359  008F  00A1               	movwf	readFromMemory@address+1
  4360  0090  3184  2441  3180   	fcall	_readFromMemory
  4361  0093  0020               	movlb	0	; select bank0
  4362  0094  3020               	movlw	low ?_readFromMemory
  4363  0095  0086               	movwf	6
  4364  0096  3000               	movlw	high ?_readFromMemory
  4365  0097  0087               	movwf	7
  4366  0098  30D8               	movlw	low main@tmp
  4367  0099  0084               	movwf	4
  4368  009A  3000               	movlw	high main@tmp
  4369  009B  0085               	movwf	5
  4370  009C  3005               	movlw	5
  4371  009D  00BC               	movwf	??_main
  4372  009E                     u2140:	
  4373  009E  0016               	moviw fsr1++
  4374  009F  001A               	movwi fsr0++
  4375  00A0  0BBC               	decfsz	??_main,f
  4376  00A1  289E               	goto	u2140
  4377                           
  4378                           ;main.c: 146: printf("<%u,%u,%u,%u/>", tmp.value, tmp.max, tmp.min,tmp.address);
  4379  00A2  30EE               	movlw	low (STR_2| (0+32768))
  4380  00A3  00A6               	movwf	printf@f
  4381  00A4  3084               	movlw	high (STR_2| (0+32768))
  4382  00A5  00A7               	movwf	printf@f+1
  4383  00A6  0021               	movlb	1	; select bank1
  4384  00A7  085A               	movf	(main@tmp^(0+128)+2),w
  4385  00A8  0020               	movlb	0	; select bank0
  4386  00A9  00BC               	movwf	??_main
  4387  00AA  01BD               	clrf	??_main+1
  4388  00AB  083C               	movf	??_main,w
  4389  00AC  00A8               	movwf	?_printf+2
  4390  00AD  083D               	movf	??_main+1,w
  4391  00AE  00A9               	movwf	?_printf+3
  4392  00AF  0021               	movlb	1	; select bank1
  4393  00B0  085B               	movf	(main@tmp^(0+128)+3),w
  4394  00B1  0020               	movlb	0	; select bank0
  4395  00B2  00BE               	movwf	??_main+2
  4396  00B3  01BF               	clrf	??_main+3
  4397  00B4  083E               	movf	??_main+2,w
  4398  00B5  00AA               	movwf	?_printf+4
  4399  00B6  083F               	movf	??_main+3,w
  4400  00B7  00AB               	movwf	?_printf+5
  4401  00B8  0021               	movlb	1	; select bank1
  4402  00B9  085C               	movf	(main@tmp^(0+128)+4),w
  4403  00BA  0020               	movlb	0	; select bank0
  4404  00BB  00C0               	movwf	??_main+4
  4405  00BC  01C1               	clrf	??_main+5
  4406  00BD  0840               	movf	??_main+4,w
  4407  00BE  00AC               	movwf	?_printf+6
  4408  00BF  0841               	movf	??_main+5,w
  4409  00C0  00AD               	movwf	?_printf+7
  4410  00C1  0021               	movlb	1	; select bank1
  4411  00C2  0859               	movf	(main@tmp+1)^(0+128),w
  4412  00C3  0020               	movlb	0	; select bank0
  4413  00C4  00AF               	movwf	?_printf+9
  4414  00C5  0021               	movlb	1	; select bank1
  4415  00C6  0858               	movf	main@tmp^(0+128),w
  4416  00C7  0020               	movlb	0	; select bank0
  4417  00C8  00AE               	movwf	?_printf+8
  4418  00C9  3182  22B3  3180   	fcall	_printf
  4419  00CC  3001               	movlw	1
  4420  00CD  0021               	movlb	1	; select bank1
  4421  00CE  07C9               	addwf	main@i^(0+128),f
  4422  00CF  3000               	movlw	0
  4423  00D0  3DCA               	addwfc	(main@i+1)^(0+128),f
  4424  00D1  084A               	movf	(main@i+1)^(0+128),w
  4425  00D2  3A80               	xorlw	128
  4426  00D3  0020               	movlb	0	; select bank0
  4427  00D4  00BC               	movwf	??_main
  4428  00D5  3080               	movlw	128
  4429  00D6  023C               	subwf	??_main,w
  4430  00D7  1D03               	skipz
  4431  00D8  28DC               	goto	u2155
  4432  00D9  3003               	movlw	3
  4433  00DA  0021               	movlb	1	; select bank1
  4434  00DB  0249               	subwf	main@i^(0+128),w
  4435  00DC                     u2155:	
  4436  00DC  1C03               	skipc
  4437  00DD  287D               	goto	l2293
  4438  00DE                     l2299:	
  4439                           
  4440                           ;main.c: 147: }
  4441                           ;main.c: 148: printf("%c", 3);
  4442  00DE  3014               	movlw	low (STR_1| (0+32768))
  4443  00DF  0020               	movlb	0	; select bank0
  4444  00E0  00A6               	movwf	printf@f
  4445  00E1  3085               	movlw	high (STR_1| (0+32768))
  4446  00E2  00A7               	movwf	printf@f+1
  4447  00E3  3003               	movlw	3
  4448  00E4  00A8               	movwf	?_printf+2
  4449  00E5  3000               	movlw	0
  4450  00E6  00A9               	movwf	?_printf+3
  4451  00E7  2A16               	goto	L3
  4452  00E8                     l2301:	
  4453                           ;main.c: 149: }
  4454                           
  4455                           
  4456                           ;main.c: 150: else if (check[1] == '6' && check[2] == '1')
  4457  00E8  3036               	movlw	54
  4458  00E9  0021               	movlb	1	; select bank1
  4459  00EA  062D               	xorwf	(main@check^(0+128)+1),w
  4460  00EB  1D03               	btfss	3,2
  4461  00EC  2A09               	goto	l2357
  4462  00ED  3031               	movlw	49
  4463  00EE  062E               	xorwf	(main@check^(0+128)+2),w
  4464  00EF  1D03               	btfss	3,2
  4465  00F0  2A09               	goto	l2357
  4466                           
  4467                           ;main.c: 151: {
  4468                           ;main.c: 153: char add[5];
  4469                           ;main.c: 154: int address;
  4470                           ;main.c: 155: int val = 0;
  4471  00F1  01CB               	clrf	main@val^(0+128)
  4472  00F2  01CC               	clrf	(main@val+1)^(0+128)
  4473                           
  4474                           ;main.c: 156: int modifier = 0;
  4475  00F3  01D6               	clrf	main@modifier^(0+128)
  4476  00F4  01D7               	clrf	(main@modifier+1)^(0+128)
  4477                           
  4478                           ;main.c: 157: struct var temp;
  4479                           ;main.c: 160: for(int i = 0; i < 5; i++)
  4480  00F5  01CD               	clrf	main@i_444^(0+128)
  4481  00F6  01CE               	clrf	(main@i_444+1)^(0+128)
  4482  00F7  084E               	movf	(main@i_444+1)^(0+128),w
  4483  00F8  3A80               	xorlw	128
  4484  00F9  0020               	movlb	0	; select bank0
  4485  00FA  00BC               	movwf	??_main
  4486  00FB  3080               	movlw	128
  4487  00FC  023C               	subwf	??_main,w
  4488  00FD  1D03               	skipz
  4489  00FE  2902               	goto	u2185
  4490  00FF  3005               	movlw	5
  4491  0100  0021               	movlb	1	; select bank1
  4492  0101  024D               	subwf	main@i_444^(0+128),w
  4493  0102                     u2185:	
  4494  0102  1803               	btfsc	3,0
  4495  0103  2927               	goto	l2317
  4496  0104                     l2311:	
  4497                           
  4498                           ;main.c: 161: {
  4499                           ;main.c: 162: add[i] = check[4+i];
  4500  0104  0021               	movlb	1	; select bank1
  4501  0105  084D               	movf	main@i_444^(0+128),w
  4502  0106  3E04               	addlw	4
  4503  0107  3EAC               	addlw	(low (main@check| 0))& (0+255)
  4504  0108  0086               	movwf	6
  4505  0109  0187               	clrf	7
  4506  010A  0801               	movf	1,w
  4507  010B  0020               	movlb	0	; select bank0
  4508  010C  00BC               	movwf	??_main
  4509  010D  0021               	movlb	1	; select bank1
  4510  010E  084D               	movf	main@i_444^(0+128),w
  4511  010F  3EA7               	addlw	(low (main@add| 0))& (0+255)
  4512  0110  0086               	movwf	6
  4513  0111  0187               	clrf	7
  4514  0112  0020               	movlb	0	; select bank0
  4515  0113  083C               	movf	??_main,w
  4516  0114  0081               	movwf	1
  4517  0115  3001               	movlw	1
  4518  0116  0021               	movlb	1	; select bank1
  4519  0117  07CD               	addwf	main@i_444^(0+128),f
  4520  0118  3000               	movlw	0
  4521  0119  3DCE               	addwfc	(main@i_444+1)^(0+128),f
  4522  011A  084E               	movf	(main@i_444+1)^(0+128),w
  4523  011B  3A80               	xorlw	128
  4524  011C  0020               	movlb	0	; select bank0
  4525  011D  00BC               	movwf	??_main
  4526  011E  3080               	movlw	128
  4527  011F  023C               	subwf	??_main,w
  4528  0120  1D03               	skipz
  4529  0121  2925               	goto	u2195
  4530  0122  3005               	movlw	5
  4531  0123  0021               	movlb	1	; select bank1
  4532  0124  024D               	subwf	main@i_444^(0+128),w
  4533  0125                     u2195:	
  4534  0125  1C03               	skipc
  4535  0126  2904               	goto	l2311
  4536  0127                     l2317:	
  4537                           
  4538                           ;main.c: 163: }
  4539                           ;main.c: 164: address = convertCharToInt(add);
  4540  0127  30A7               	movlw	(low (main@add| 0))& (0+255)
  4541  0128  3183  2399  3180   	fcall	_convertCharToInt
  4542  012B  0020               	movlb	0	; select bank0
  4543  012C  0825               	movf	?_convertCharToInt+1,w
  4544  012D  0021               	movlb	1	; select bank1
  4545  012E  00C1               	movwf	(main@address+1)^(0+128)
  4546  012F  0020               	movlb	0	; select bank0
  4547  0130  0824               	movf	?_convertCharToInt,w
  4548  0131  0021               	movlb	1	; select bank1
  4549  0132  00C0               	movwf	main@address^(0+128)
  4550                           
  4551                           ;main.c: 167: for(int i = 10; i < 20; i++)
  4552  0133  300A               	movlw	10
  4553  0134  00DD               	movwf	main@i_445^(0+128)
  4554  0135  3000               	movlw	0
  4555  0136  00DE               	movwf	(main@i_445^(0+128)+1)
  4556  0137  085E               	movf	(main@i_445+1)^(0+128),w
  4557  0138  3A80               	xorlw	128
  4558  0139  0020               	movlb	0	; select bank0
  4559  013A  00BC               	movwf	??_main
  4560  013B  3080               	movlw	128
  4561  013C  023C               	subwf	??_main,w
  4562  013D  1D03               	skipz
  4563  013E  2942               	goto	u2205
  4564  013F  3014               	movlw	20
  4565  0140  0021               	movlb	1	; select bank1
  4566  0141  025D               	subwf	main@i_445^(0+128),w
  4567  0142                     u2205:	
  4568  0142  1803               	btfsc	3,0
  4569  0143  29C2               	goto	l2351
  4570  0144                     l2325:	
  4571                           
  4572                           ;main.c: 168: {
  4573                           ;main.c: 169: if(check[i] == '/')
  4574  0144  0021               	movlb	1	; select bank1
  4575  0145  085D               	movf	main@i_445^(0+128),w
  4576  0146  3EAC               	addlw	(low (main@check| 0))& (0+255)
  4577  0147  0086               	movwf	6
  4578  0148  0187               	clrf	7
  4579  0149  302F               	movlw	47
  4580  014A  0601               	xorwf	1,w
  4581  014B  1D03               	btfss	3,2
  4582  014C  29B0               	goto	l2349
  4583                           
  4584                           ;main.c: 170: {
  4585                           ;main.c: 172: modifier = (i - 10);
  4586  014D  085D               	movf	main@i_445^(0+128),w
  4587  014E  3EF6               	addlw	246
  4588  014F  00D6               	movwf	main@modifier^(0+128)
  4589  0150  30FF               	movlw	255
  4590  0151  3D5E               	addwfc	(main@i_445+1)^(0+128),w
  4591  0152  00D7               	movwf	(main@modifier+1)^(0+128)
  4592                           
  4593                           ;main.c: 173: switch(modifier)
  4594  0153  295D               	goto	l2337
  4595  0154                     l2329:	
  4596                           ;main.c: 174: {
  4597                           ;main.c: 175: case 1: modifier = 1;
  4598                           
  4599  0154  3001               	movlw	1
  4600  0155  2959               	goto	L2
  4601  0156                     l2331:	
  4602                           ;main.c: 177: case 2: modifier = 10;
  4603                           
  4604                           ;main.c: 176: break;
  4605                           
  4606  0156  300A               	movlw	10
  4607  0157  2959               	goto	L2
  4608  0158                     l2333:	
  4609                           ;main.c: 179: case 3: modifier = 100;
  4610                           
  4611                           ;main.c: 178: break;
  4612                           
  4613  0158  3064               	movlw	100
  4614  0159                     L2:	
  4615  0159  00D6               	movwf	main@modifier^(0+128)
  4616  015A  3000               	movlw	0
  4617  015B  00D7               	movwf	(main@modifier^(0+128)+1)
  4618                           
  4619                           ;main.c: 181: }
  4620                           
  4621                           ;main.c: 180: break;
  4622  015C  296D               	goto	l2339
  4623  015D                     l2337:	
  4624                           
  4625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4626                           ; Switch size 1, requested type "space"
  4627                           ; Number of cases is 1, Range of values is 0 to 0
  4628                           ; switch strategies available:
  4629                           ; Name         Instructions Cycles
  4630                           ; simple_byte            4     3 (average)
  4631                           ; direct_byte            8     6 (fixed)
  4632                           ; jumptable            260     6 (fixed)
  4633                           ;	Chosen strategy is simple_byte
  4634  015D  0857               	movf	(main@modifier+1)^(0+128),w
  4635  015E  3A00               	xorlw	0	; case 0
  4636  015F  1903               	skipnz
  4637  0160  2962               	goto	l2415
  4638  0161  296D               	goto	l2339
  4639  0162                     l2415:	
  4640                           
  4641                           ; Switch size 1, requested type "space"
  4642                           ; Number of cases is 3, Range of values is 1 to 3
  4643                           ; switch strategies available:
  4644                           ; Name         Instructions Cycles
  4645                           ; simple_byte           10     6 (average)
  4646                           ; direct_byte           15     9 (fixed)
  4647                           ; jumptable            263     9 (fixed)
  4648                           ;	Chosen strategy is simple_byte
  4649  0162  0856               	movf	main@modifier^(0+128),w
  4650  0163  3A01               	xorlw	1	; case 1
  4651  0164  1903               	skipnz
  4652  0165  2954               	goto	l2329
  4653  0166  3A03               	xorlw	3	; case 2
  4654  0167  1903               	skipnz
  4655  0168  2956               	goto	l2331
  4656  0169  3A01               	xorlw	1	; case 3
  4657  016A  1903               	skipnz
  4658  016B  2958               	goto	l2333
  4659  016C  296D               	goto	l2339
  4660  016D                     l2339:	
  4661                           
  4662                           ;main.c: 182: for(int j = 10; j < i; j++)
  4663  016D  300A               	movlw	10
  4664  016E  00C2               	movwf	main@j^(0+128)
  4665  016F  3000               	movlw	0
  4666  0170  00C3               	movwf	(main@j^(0+128)+1)
  4667  0171                     l2347:	
  4668  0171  0843               	movf	(main@j+1)^(0+128),w
  4669  0172  3A80               	xorlw	128
  4670  0173  0020               	movlb	0	; select bank0
  4671  0174  00BC               	movwf	??_main
  4672  0175  0021               	movlb	1	; select bank1
  4673  0176  085E               	movf	(main@i_445+1)^(0+128),w
  4674  0177  3A80               	xorlw	128
  4675  0178  0020               	movlb	0	; select bank0
  4676  0179  023C               	subwf	??_main,w
  4677  017A  1D03               	skipz
  4678  017B  297F               	goto	u2225
  4679  017C  0021               	movlb	1	; select bank1
  4680  017D  085D               	movf	main@i_445^(0+128),w
  4681  017E  0242               	subwf	main@j^(0+128),w
  4682  017F                     u2225:	
  4683  017F  1803               	btfsc	3,0
  4684  0180  29C2               	goto	l2351
  4685                           
  4686                           ;main.c: 183: {
  4687                           ;main.c: 184: val = val + (check[j]-48)*modifier;
  4688  0181  0021               	movlb	1	; select bank1
  4689  0182  0842               	movf	main@j^(0+128),w
  4690  0183  3EAC               	addlw	(low (main@check| 0))& (0+255)
  4691  0184  0086               	movwf	6
  4692  0185  0187               	clrf	7
  4693  0186  0801               	movf	1,w
  4694  0187  3ED0               	addlw	208
  4695  0188  00F2               	movwf	___wmul@multiplier
  4696  0189  30FF               	movlw	255
  4697  018A  1803               	skipnc
  4698  018B  3000               	movlw	0
  4699  018C  00F3               	movwf	___wmul@multiplier+1
  4700  018D  0857               	movf	(main@modifier+1)^(0+128),w
  4701  018E  00F5               	movwf	___wmul@multiplicand+1
  4702  018F  0856               	movf	main@modifier^(0+128),w
  4703  0190  00F4               	movwf	___wmul@multiplicand
  4704  0191  3186  2615  3180   	fcall	___wmul
  4705  0194  0021               	movlb	1	; select bank1
  4706  0195  084B               	movf	main@val^(0+128),w
  4707  0196  0772               	addwf	?___wmul,w
  4708  0197  00CB               	movwf	main@val^(0+128)
  4709  0198  084C               	movf	(main@val+1)^(0+128),w
  4710  0199  3D73               	addwfc	?___wmul+1,w
  4711  019A  00CC               	movwf	(main@val+1)^(0+128)
  4712                           
  4713                           ;main.c: 185: modifier = modifier/10;
  4714  019B  300A               	movlw	10
  4715  019C  00F2               	movwf	___awdiv@divisor
  4716  019D  3000               	movlw	0
  4717  019E  00F3               	movwf	___awdiv@divisor+1
  4718  019F  0857               	movf	(main@modifier+1)^(0+128),w
  4719  01A0  00F5               	movwf	___awdiv@dividend+1
  4720  01A1  0856               	movf	main@modifier^(0+128),w
  4721  01A2  00F4               	movwf	___awdiv@dividend
  4722  01A3  3183  23EF  3180   	fcall	___awdiv
  4723  01A6  0873               	movf	?___awdiv+1,w
  4724  01A7  0021               	movlb	1	; select bank1
  4725  01A8  00D7               	movwf	(main@modifier+1)^(0+128)
  4726  01A9  0872               	movf	?___awdiv,w
  4727  01AA  00D6               	movwf	main@modifier^(0+128)
  4728  01AB  3001               	movlw	1
  4729  01AC  07C2               	addwf	main@j^(0+128),f
  4730  01AD  3000               	movlw	0
  4731  01AE  3DC3               	addwfc	(main@j+1)^(0+128),f
  4732  01AF  2971               	goto	l2347
  4733  01B0                     l2349:	
  4734                           ;main.c: 186: }
  4735                           ;main.c: 188: break;
  4736                           
  4737  01B0  3001               	movlw	1
  4738  01B1  0021               	movlb	1	; select bank1
  4739  01B2  07DD               	addwf	main@i_445^(0+128),f
  4740  01B3  3000               	movlw	0
  4741  01B4  3DDE               	addwfc	(main@i_445+1)^(0+128),f
  4742  01B5  085E               	movf	(main@i_445+1)^(0+128),w
  4743  01B6  3A80               	xorlw	128
  4744  01B7  0020               	movlb	0	; select bank0
  4745  01B8  00BC               	movwf	??_main
  4746  01B9  3080               	movlw	128
  4747  01BA  023C               	subwf	??_main,w
  4748  01BB  1D03               	skipz
  4749  01BC  29C0               	goto	u2235
  4750  01BD  3014               	movlw	20
  4751  01BE  0021               	movlb	1	; select bank1
  4752  01BF  025D               	subwf	main@i_445^(0+128),w
  4753  01C0                     u2235:	
  4754  01C0  1C03               	skipc
  4755  01C1  2944               	goto	l2325
  4756  01C2                     l2351:	
  4757                           
  4758                           ;main.c: 189: }
  4759                           ;main.c: 190: }
  4760                           ;main.c: 191: printf("ok: %u", val);
  4761  01C2  300D               	movlw	low (STR_4| (0+32768))
  4762  01C3  0020               	movlb	0	; select bank0
  4763  01C4  00A6               	movwf	printf@f
  4764  01C5  3085               	movlw	high (STR_4| (0+32768))
  4765  01C6  00A7               	movwf	printf@f+1
  4766  01C7  0021               	movlb	1	; select bank1
  4767  01C8  084C               	movf	(main@val+1)^(0+128),w
  4768  01C9  0020               	movlb	0	; select bank0
  4769  01CA  00A9               	movwf	?_printf+3
  4770  01CB  0021               	movlb	1	; select bank1
  4771  01CC  084B               	movf	main@val^(0+128),w
  4772  01CD  0020               	movlb	0	; select bank0
  4773  01CE  00A8               	movwf	?_printf+2
  4774  01CF  3182  22B3  3180   	fcall	_printf
  4775                           
  4776                           ;main.c: 192: temp = readFromMemory(address);
  4777  01D2  0021               	movlb	1	; select bank1
  4778  01D3  0841               	movf	(main@address+1)^(0+128),w
  4779  01D4  0020               	movlb	0	; select bank0
  4780  01D5  00A1               	movwf	readFromMemory@address+1
  4781  01D6  0021               	movlb	1	; select bank1
  4782  01D7  0840               	movf	main@address^(0+128),w
  4783  01D8  0020               	movlb	0	; select bank0
  4784  01D9  00A0               	movwf	readFromMemory@address
  4785  01DA  3184  2441  3180   	fcall	_readFromMemory
  4786  01DD  0020               	movlb	0	; select bank0
  4787  01DE  3020               	movlw	low ?_readFromMemory
  4788  01DF  0086               	movwf	6
  4789  01E0  3000               	movlw	high ?_readFromMemory
  4790  01E1  0087               	movwf	7
  4791  01E2  30C4               	movlw	low main@temp
  4792  01E3  0084               	movwf	4
  4793  01E4  3000               	movlw	high main@temp
  4794  01E5  0085               	movwf	5
  4795  01E6  3005               	movlw	5
  4796  01E7  00BC               	movwf	??_main
  4797  01E8                     u2240:	
  4798  01E8  0016               	moviw fsr1++
  4799  01E9  001A               	movwi fsr0++
  4800  01EA  0BBC               	decfsz	??_main,f
  4801  01EB  29E8               	goto	u2240
  4802                           
  4803                           ;main.c: 193: temp.value = val;
  4804  01EC  0021               	movlb	1	; select bank1
  4805  01ED  084B               	movf	main@val^(0+128),w
  4806  01EE  0020               	movlb	0	; select bank0
  4807  01EF  00BC               	movwf	??_main
  4808  01F0  083C               	movf	??_main,w
  4809  01F1  0021               	movlb	1	; select bank1
  4810  01F2  00C6               	movwf	(main@temp^(0+128)+2)
  4811                           
  4812                           ;main.c: 194: writeToMemory(temp);
  4813  01F3  30C4               	movlw	low main@temp
  4814  01F4  0086               	movwf	6
  4815  01F5  3000               	movlw	high main@temp
  4816  01F6  0087               	movwf	7
  4817  01F7  3020               	movlw	low writeToMemory@tmp
  4818  01F8  0084               	movwf	4
  4819  01F9  3000               	movlw	high writeToMemory@tmp
  4820  01FA  0085               	movwf	5
  4821  01FB  3F40               	moviw [0]fsr1
  4822  01FC  3F80               	movwi [0]fsr0
  4823  01FD  3F41               	moviw [1]fsr1
  4824  01FE  3F81               	movwi [1]fsr0
  4825  01FF  3F42               	moviw [2]fsr1
  4826  0200  3F82               	movwi [2]fsr0
  4827  0201  3F43               	moviw [3]fsr1
  4828  0202  3F83               	movwi [3]fsr0
  4829  0203  3F44               	moviw [4]fsr1
  4830  0204  3F84               	movwi [4]fsr0
  4831  0205  3185  2572  3180   	fcall	_writeToMemory
  4832                           
  4833                           ;main.c: 195: }
  4834  0208  2A19               	goto	l249
  4835  0209                     l2357:	
  4836                           
  4837                           ;main.c: 196: else
  4838                           ;main.c: 197: printf("%s : %s.", err, check);
  4839  0209  30FD               	movlw	low (STR_5| (0+32768))
  4840  020A  0020               	movlb	0	; select bank0
  4841  020B  00A6               	movwf	printf@f
  4842  020C  3084               	movlw	high (STR_5| (0+32768))
  4843  020D  00A7               	movwf	printf@f+1
  4844  020E  30A0               	movlw	(low (main@err| 0))& (0+255)
  4845  020F  00BC               	movwf	??_main
  4846  0210  083C               	movf	??_main,w
  4847  0211  00A8               	movwf	low ((?_printf| 0+2))
  4848  0212  30AC               	movlw	(low (main@check| 0))& (0+255)
  4849  0213  00BD               	movwf	??_main+1
  4850  0214  083D               	movf	??_main+1,w
  4851  0215  00A9               	movwf	low ((?_printf| 0+3))
  4852  0216                     L3:	
  4853  0216  3182  22B3  3180   	fcall	_printf
  4854  0219                     l249:	
  4855                           
  4856                           ;main.c: 202: led = readFromMemory(0x7000);
  4857  0219  3000               	movlw	0
  4858  021A  0020               	movlb	0	; select bank0
  4859  021B  00A0               	movwf	readFromMemory@address
  4860  021C  3070               	movlw	112
  4861  021D  00A1               	movwf	readFromMemory@address+1
  4862  021E  3184  2441  3180   	fcall	_readFromMemory
  4863  0221  0020               	movlb	0	; select bank0
  4864  0222  3020               	movlw	low ?_readFromMemory
  4865  0223  0086               	movwf	6
  4866  0224  3000               	movlw	high ?_readFromMemory
  4867  0225  0087               	movwf	7
  4868  0226  30D1               	movlw	low main@led
  4869  0227  0084               	movwf	4
  4870  0228  3000               	movlw	high main@led
  4871  0229  0085               	movwf	5
  4872  022A  3005               	movlw	5
  4873  022B  00BC               	movwf	??_main
  4874  022C                     u2250:	
  4875  022C  0016               	moviw fsr1++
  4876  022D  001A               	movwi fsr0++
  4877  022E  0BBC               	decfsz	??_main,f
  4878  022F  2A2C               	goto	u2250
  4879                           
  4880                           ;main.c: 203: if (led.value > 127)
  4881  0230  3080               	movlw	128
  4882  0231  0021               	movlb	1	; select bank1
  4883  0232  0253               	subwf	(main@led^(0+128)+2),w
  4884  0233  1C03               	skipc
  4885  0234  2A38               	goto	l265
  4886                           
  4887                           ;main.c: 204: LATAbits.LATA0 = 1;
  4888  0235  0020               	movlb	0	; select bank0
  4889  0236  1416               	bsf	22,0	;volatile
  4890  0237  2A3A               	goto	l2363
  4891  0238                     l265:	
  4892                           
  4893                           ;main.c: 205: else
  4894                           ;main.c: 206: LATAbits.LATA0 = 0;
  4895  0238  0020               	movlb	0	; select bank0
  4896  0239  1016               	bcf	22,0	;volatile
  4897  023A                     l2363:	
  4898                           
  4899                           ;main.c: 208: led = readFromMemory(0x7003);
  4900  023A  3003               	movlw	3
  4901  023B  00A0               	movwf	readFromMemory@address
  4902  023C  3070               	movlw	112
  4903  023D  00A1               	movwf	readFromMemory@address+1
  4904  023E  3184  2441  3180   	fcall	_readFromMemory
  4905  0241  0020               	movlb	0	; select bank0
  4906  0242  3020               	movlw	low ?_readFromMemory
  4907  0243  0086               	movwf	6
  4908  0244  3000               	movlw	high ?_readFromMemory
  4909  0245  0087               	movwf	7
  4910  0246  30D1               	movlw	low main@led
  4911  0247  0084               	movwf	4
  4912  0248  3000               	movlw	high main@led
  4913  0249  0085               	movwf	5
  4914  024A  3005               	movlw	5
  4915  024B  00BC               	movwf	??_main
  4916  024C                     u2270:	
  4917  024C  0016               	moviw fsr1++
  4918  024D  001A               	movwi fsr0++
  4919  024E  0BBC               	decfsz	??_main,f
  4920  024F  2A4C               	goto	u2270
  4921                           
  4922                           ;main.c: 209: if (led.value > 127)
  4923  0250  3080               	movlw	128
  4924  0251  0021               	movlb	1	; select bank1
  4925  0252  0253               	subwf	(main@led^(0+128)+2),w
  4926  0253  1C03               	skipc
  4927  0254  2A58               	goto	l267
  4928                           
  4929                           ;main.c: 210: LATAbits.LATA1 = 1;
  4930  0255  0020               	movlb	0	; select bank0
  4931  0256  1496               	bsf	22,1	;volatile
  4932  0257  2A5A               	goto	l2369
  4933  0258                     l267:	
  4934                           
  4935                           ;main.c: 211: else
  4936                           ;main.c: 212: LATAbits.LATA1 = 0;
  4937  0258  0020               	movlb	0	; select bank0
  4938  0259  1096               	bcf	22,1	;volatile
  4939  025A                     l2369:	
  4940                           
  4941                           ;main.c: 214: led = readFromMemory(0x7006);
  4942  025A  3006               	movlw	6
  4943  025B  00A0               	movwf	readFromMemory@address
  4944  025C  3070               	movlw	112
  4945  025D  00A1               	movwf	readFromMemory@address+1
  4946  025E  3184  2441  3180   	fcall	_readFromMemory
  4947  0261  0020               	movlb	0	; select bank0
  4948  0262  3020               	movlw	low ?_readFromMemory
  4949  0263  0086               	movwf	6
  4950  0264  3000               	movlw	high ?_readFromMemory
  4951  0265  0087               	movwf	7
  4952  0266  30D1               	movlw	low main@led
  4953  0267  0084               	movwf	4
  4954  0268  3000               	movlw	high main@led
  4955  0269  0085               	movwf	5
  4956  026A  3005               	movlw	5
  4957  026B  00BC               	movwf	??_main
  4958  026C                     u2290:	
  4959  026C  0016               	moviw fsr1++
  4960  026D  001A               	movwi fsr0++
  4961  026E  0BBC               	decfsz	??_main,f
  4962  026F  2A6C               	goto	u2290
  4963                           
  4964                           ;main.c: 215: if (led.value > 127)
  4965  0270  3080               	movlw	128
  4966  0271  0021               	movlb	1	; select bank1
  4967  0272  0253               	subwf	(main@led^(0+128)+2),w
  4968  0273  1C03               	skipc
  4969  0274  2A78               	goto	l269
  4970                           
  4971                           ;main.c: 216: LATAbits.LATA2 = 1;
  4972  0275  0020               	movlb	0	; select bank0
  4973  0276  1516               	bsf	22,2	;volatile
  4974  0277  2A7A               	goto	l2275
  4975  0278                     l269:	
  4976                           
  4977                           ;main.c: 217: else
  4978                           ;main.c: 218: LATAbits.LATA2 = 0;
  4979  0278  0020               	movlb	0	; select bank0
  4980  0279  1116               	bcf	22,2	;volatile
  4981  027A                     l2275:	
  4982                           ;main.c: 131: struct var led;
  4983                           ;main.c: 132: while (1)
  4984                           
  4985                           ;main.c: 219: }
  4986                           
  4987                           
  4988                           ;main.c: 133: {
  4989                           ;main.c: 134: _delay((unsigned long)((40)*(32000000/4000.0)));
  4990  027A  3002               	movlw	2
  4991  027B  0020               	movlb	0	; select bank0
  4992  027C  00BE               	movwf	??_main+2
  4993  027D  30A0               	movlw	160
  4994  027E  00BD               	movwf	??_main+1
  4995  027F  3092               	movlw	146
  4996  0280  00BC               	movwf	??_main
  4997  0281                     u2367:	
  4998  0281  0BBC               	decfsz	??_main,f
  4999  0282  2A81               	goto	u2367
  5000  0283  0BBD               	decfsz	??_main+1,f
  5001  0284  2A81               	goto	u2367
  5002  0285  0BBE               	decfsz	??_main+2,f
  5003  0286  2A81               	goto	u2367
  5004  0287  0000               	nop
  5005                           
  5006                           ;main.c: 136: if((eusartRxCount))
  5007  0288  087A               	movf	_eusartRxCount,w	;volatile
  5008  0289  1D03               	btfss	3,2
  5009  028A  2854               	goto	l2279
  5010                           
  5011                           ;main.c: 220: else if (!(eusartRxCount))
  5012  028B  087A               	movf	_eusartRxCount,w	;volatile
  5013  028C  1D03               	btfss	3,2
  5014  028D  2A7A               	goto	l2275
  5015                           
  5016                           ;main.c: 221: {
  5017                           ;main.c: 222: if(check[0] != 0)
  5018  028E  0021               	movlb	1	; select bank1
  5019  028F  082C               	movf	main@check^(0+128),w
  5020  0290  1903               	btfsc	3,2
  5021  0291  2A7A               	goto	l2275
  5022                           
  5023                           ;main.c: 223: {
  5024                           ;main.c: 224: for(int i = 0; i < 16;i++)
  5025  0292  01CF               	clrf	main@i_449^(0+128)
  5026  0293  01D0               	clrf	(main@i_449+1)^(0+128)
  5027  0294                     L4:	
  5028  0294  0850               	movf	(main@i_449+1)^(0+128),w
  5029  0295  3A80               	xorlw	128
  5030  0296  0020               	movlb	0	; select bank0
  5031  0297  00BC               	movwf	??_main
  5032  0298  3080               	movlw	128
  5033  0299  023C               	subwf	??_main,w
  5034  029A  1D03               	skipz
  5035  029B  2A9F               	goto	u2335
  5036  029C  3010               	movlw	16
  5037  029D  0021               	movlb	1	; select bank1
  5038  029E  024F               	subwf	main@i_449^(0+128),w
  5039  029F                     u2335:	
  5040  029F  1803               	btfsc	3,0
  5041  02A0  2A7A               	goto	l2275
  5042                           
  5043                           ;main.c: 225: {
  5044                           ;main.c: 226: if (check[i] != 0)
  5045  02A1  0021               	movlb	1	; select bank1
  5046  02A2  084F               	movf	main@i_449^(0+128),w
  5047  02A3  3EAC               	addlw	(low (main@check| 0))& (0+255)
  5048  02A4  0086               	movwf	6
  5049  02A5  0187               	clrf	7
  5050  02A6  0801               	movf	1,w
  5051  02A7  1903               	btfsc	3,2
  5052  02A8  2A7A               	goto	l2275
  5053                           
  5054                           ;main.c: 227: check[i] = 0;
  5055  02A9  084F               	movf	main@i_449^(0+128),w
  5056  02AA  3EAC               	addlw	(low (main@check| 0))& (0+255)
  5057  02AB  0086               	movwf	6
  5058  02AC  0187               	clrf	7
  5059  02AD  0181               	clrf	1
  5060                           
  5061                           ;main.c: 228: else
  5062                           ;main.c: 229: break;
  5063  02AE  3001               	movlw	1
  5064  02AF  07CF               	addwf	main@i_449^(0+128),f
  5065  02B0  3000               	movlw	0
  5066  02B1  3DD0               	addwfc	(main@i_449+1)^(0+128),f
  5067  02B2  2A94               	goto	L4
  5068  02B3                     __end_of_main:	
  5069                           
  5070                           	psect	text1
  5071  0572                     __ptext1:	
  5072 ;; *************** function _writeToMemory *****************
  5073 ;; Defined at:
  5074 ;;		line 15 in file "variables.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  tmp             5    0[BANK0 ] struct var
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5088 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;Total ram usage:        6 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    3
  5095 ;; This function calls:
  5096 ;;		_DATAEE_WriteByte
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;;		_InitVars
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _writeToMemory
  5105  0572                     _writeToMemory:	
  5106                           
  5107                           ;variables.c: 17: DATAEE_WriteByte(tmp.address, tmp.value);
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _writeToMemory: [wreg+status,2+status,0+pclath+cstack]
  5111  0572  0020               	movlb	0	; select bank0
  5112  0573  0821               	movf	writeToMemory@tmp+1,w
  5113  0574  00F3               	movwf	DATAEE_WriteByte@bAdd+1
  5114  0575  0820               	movf	writeToMemory@tmp,w
  5115  0576  00F2               	movwf	DATAEE_WriteByte@bAdd
  5116  0577  0822               	movf	writeToMemory@tmp+2,w
  5117  0578  00F6               	movwf	??_writeToMemory
  5118  0579  0876               	movf	??_writeToMemory,w
  5119  057A  00F4               	movwf	DATAEE_WriteByte@bData
  5120  057B  3185  25F9  3185   	fcall	_DATAEE_WriteByte
  5121                           
  5122                           ;variables.c: 18: DATAEE_WriteByte(tmp.address+1, tmp.max);
  5123  057E  0020               	movlb	0	; select bank0
  5124  057F  0820               	movf	writeToMemory@tmp,w
  5125  0580  3E01               	addlw	1
  5126  0581  00F2               	movwf	DATAEE_WriteByte@bAdd
  5127  0582  3000               	movlw	0
  5128  0583  3D21               	addwfc	writeToMemory@tmp+1,w
  5129  0584  00F3               	movwf	DATAEE_WriteByte@bAdd+1
  5130  0585  0823               	movf	writeToMemory@tmp+3,w
  5131  0586  00F6               	movwf	??_writeToMemory
  5132  0587  0876               	movf	??_writeToMemory,w
  5133  0588  00F4               	movwf	DATAEE_WriteByte@bData
  5134  0589  3185  25F9  3185   	fcall	_DATAEE_WriteByte
  5135                           
  5136                           ;variables.c: 19: DATAEE_WriteByte(tmp.address+2, tmp.min);
  5137  058C  0020               	movlb	0	; select bank0
  5138  058D  0820               	movf	writeToMemory@tmp,w
  5139  058E  3E02               	addlw	2
  5140  058F  00F2               	movwf	DATAEE_WriteByte@bAdd
  5141  0590  3000               	movlw	0
  5142  0591  3D21               	addwfc	writeToMemory@tmp+1,w
  5143  0592  00F3               	movwf	DATAEE_WriteByte@bAdd+1
  5144  0593  0824               	movf	writeToMemory@tmp+4,w
  5145  0594  00F6               	movwf	??_writeToMemory
  5146  0595  0876               	movf	??_writeToMemory,w
  5147  0596  00F4               	movwf	DATAEE_WriteByte@bData
  5148  0597  3185  25F9         	fcall	_DATAEE_WriteByte
  5149  0599  0008               	return
  5150  059A                     __end_of_writeToMemory:	
  5151                           
  5152                           	psect	text2
  5153  05F9                     __ptext2:	
  5154 ;; *************** function _DATAEE_WriteByte *****************
  5155 ;; Defined at:
  5156 ;;		line 179 in file "mcc_generated_files/memory.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  bAdd            2    2[COMMON] unsigned int 
  5159 ;;  bData           1    4[COMMON] unsigned char 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:        4 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    2
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_writeToMemory
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function _DATAEE_WriteByte
  5187  05F9                     _DATAEE_WriteByte:	
  5188                           
  5189                           ;memory.c: 181: uint8_t GIEBitValue = INTCONbits.GIE;
  5190                           
  5191                           ;incstack = 0
  5192                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  5193  05F9  3000               	movlw	0
  5194  05FA  1B8B               	btfsc	11,7	;volatile
  5195  05FB  3001               	movlw	1
  5196  05FC  00F5               	movwf	DATAEE_WriteByte@GIEBitValue
  5197                           
  5198                           ;memory.c: 183: NVMADRH = ((bAdd >> 8) & 0xFF);
  5199  05FD  0873               	movf	DATAEE_WriteByte@bAdd+1,w
  5200  05FE  0030               	movlb	16	; select bank16
  5201  05FF  009B               	movwf	27	;volatile
  5202                           
  5203                           ;memory.c: 184: NVMADRL = (bAdd & 0xFF);
  5204  0600  0872               	movf	DATAEE_WriteByte@bAdd,w
  5205  0601  009A               	movwf	26	;volatile
  5206                           
  5207                           ;memory.c: 185: NVMDATL = bData;
  5208  0602  0874               	movf	DATAEE_WriteByte@bData,w
  5209  0603  009C               	movwf	28	;volatile
  5210                           
  5211                           ;memory.c: 186: NVMCON1bits.NVMREGS = 1;
  5212  0604  171E               	bsf	30,6	;volsfr
  5213                           
  5214                           ;memory.c: 187: NVMCON1bits.WREN = 1;
  5215  0605  151E               	bsf	30,2	;volsfr
  5216                           
  5217                           ;memory.c: 188: INTCONbits.GIE = 0;
  5218  0606  138B               	bcf	11,7	;volatile
  5219                           
  5220                           ;memory.c: 189: NVMCON2 = 0x55;
  5221  0607  3055               	movlw	85
  5222  0608  009F               	movwf	31	;volsfr
  5223                           
  5224                           ;memory.c: 190: NVMCON2 = 0xAA;
  5225  0609  30AA               	movlw	170
  5226  060A  009F               	movwf	31	;volsfr
  5227                           
  5228                           ;memory.c: 191: NVMCON1bits.WR = 1;
  5229  060B  149E               	bsf	30,1	;volsfr
  5230  060C                     l194:	
  5231                           ;memory.c: 194: {
  5232                           
  5233                           ;memory.c: 193: while (NVMCON1bits.WR)
  5234                           
  5235  060C  189E               	btfsc	30,1	;volsfr
  5236  060D  2E0C               	goto	l194
  5237                           
  5238                           ;memory.c: 195: }
  5239                           ;memory.c: 197: NVMCON1bits.WREN = 0;
  5240  060E  111E               	bcf	30,2	;volsfr
  5241                           
  5242                           ;memory.c: 198: INTCONbits.GIE = GIEBitValue;
  5243  060F  0C75               	rrf	DATAEE_WriteByte@GIEBitValue,w
  5244  0610  1C03               	skipc
  5245  0611  138B               	bcf	11,7	;volatile
  5246  0612  1803               	skipnc
  5247  0613  178B               	bsf	11,7	;volatile
  5248  0614  0008               	return
  5249  0615                     __end_of_DATAEE_WriteByte:	
  5250                           
  5251                           	psect	text3
  5252  0441                     __ptext3:	
  5253 ;; *************** function _readFromMemory *****************
  5254 ;; Defined at:
  5255 ;;		line 22 in file "variables.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  address         2    0[BANK0 ] unsigned int 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  tmp             5    5[BANK0 ] struct var
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  5    0[BANK0 ] struct var
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:       11 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    3
  5276 ;; This function calls:
  5277 ;;		_DATAEE_ReadByte
  5278 ;; This function is called by:
  5279 ;;		_main
  5280 ;;		_isEmpty
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _readFromMemory
  5286  0441                     _readFromMemory:	
  5287                           
  5288                           ;variables.c: 24: struct var tmp;
  5289                           ;variables.c: 25: tmp.address = address;
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _readFromMemory: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5293  0441  0020               	movlb	0	; select bank0
  5294  0442  0821               	movf	readFromMemory@address+1,w
  5295  0443  00A6               	movwf	readFromMemory@tmp+1
  5296  0444  0820               	movf	readFromMemory@address,w
  5297  0445  00A5               	movwf	readFromMemory@tmp
  5298                           
  5299                           ;variables.c: 26: tmp.value = DATAEE_ReadByte(address);
  5300  0446  0821               	movf	readFromMemory@address+1,w
  5301  0447  00F3               	movwf	DATAEE_ReadByte@bAdd+1
  5302  0448  0820               	movf	readFromMemory@address,w
  5303  0449  00F2               	movwf	DATAEE_ReadByte@bAdd
  5304  044A  3186  2666  3184   	fcall	_DATAEE_ReadByte
  5305  044D  00F8               	movwf	??_readFromMemory
  5306  044E  0878               	movf	??_readFromMemory,w
  5307  044F  0020               	movlb	0	; select bank0
  5308  0450  00A7               	movwf	readFromMemory@tmp+2
  5309                           
  5310                           ;variables.c: 27: tmp.max = DATAEE_ReadByte(address+1);
  5311  0451  0820               	movf	readFromMemory@address,w
  5312  0452  3E01               	addlw	1
  5313  0453  00F2               	movwf	DATAEE_ReadByte@bAdd
  5314  0454  3000               	movlw	0
  5315  0455  3D21               	addwfc	readFromMemory@address+1,w
  5316  0456  00F3               	movwf	DATAEE_ReadByte@bAdd+1
  5317  0457  3186  2666  3184   	fcall	_DATAEE_ReadByte
  5318  045A  00F8               	movwf	??_readFromMemory
  5319  045B  0878               	movf	??_readFromMemory,w
  5320  045C  0020               	movlb	0	; select bank0
  5321  045D  00A8               	movwf	readFromMemory@tmp+3
  5322                           
  5323                           ;variables.c: 28: tmp.min = DATAEE_ReadByte(address+2);
  5324  045E  0820               	movf	readFromMemory@address,w
  5325  045F  3E02               	addlw	2
  5326  0460  00F2               	movwf	DATAEE_ReadByte@bAdd
  5327  0461  3000               	movlw	0
  5328  0462  3D21               	addwfc	readFromMemory@address+1,w
  5329  0463  00F3               	movwf	DATAEE_ReadByte@bAdd+1
  5330  0464  3186  2666  3184   	fcall	_DATAEE_ReadByte
  5331  0467  00F8               	movwf	??_readFromMemory
  5332  0468  0878               	movf	??_readFromMemory,w
  5333  0469  0020               	movlb	0	; select bank0
  5334  046A  00A9               	movwf	readFromMemory@tmp+4
  5335                           
  5336                           ;variables.c: 29: return tmp;
  5337  046B  3025               	movlw	low readFromMemory@tmp
  5338  046C  0086               	movwf	6
  5339  046D  3000               	movlw	high readFromMemory@tmp
  5340  046E  0087               	movwf	7
  5341  046F  3020               	movlw	low ?_readFromMemory
  5342  0470  0084               	movwf	4
  5343  0471  3000               	movlw	high ?_readFromMemory
  5344  0472  0085               	movwf	5
  5345  0473  3005               	movlw	5
  5346  0474  00F8               	movwf	??_readFromMemory
  5347  0475                     u1460:	
  5348  0475  0016               	moviw fsr1++
  5349  0476  001A               	movwi fsr0++
  5350  0477  0BF8               	decfsz	??_readFromMemory,f
  5351  0478  2C75               	goto	u1460
  5352  0479  0008               	return
  5353  047A                     __end_of_readFromMemory:	
  5354                           
  5355                           	psect	text4
  5356  0666                     __ptext4:	
  5357 ;; *************** function _DATAEE_ReadByte *****************
  5358 ;; Defined at:
  5359 ;;		line 201 in file "mcc_generated_files/memory.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  bAdd            2    2[COMMON] unsigned int 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      unsigned char 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;Total ram usage:        2 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    2
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_readFromMemory
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _DATAEE_ReadByte
  5389  0666                     _DATAEE_ReadByte:	
  5390                           
  5391                           ;memory.c: 203: NVMADRH = ((bAdd >> 8) & 0xFF);
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  5395  0666  0873               	movf	DATAEE_ReadByte@bAdd+1,w
  5396  0667  0030               	movlb	16	; select bank16
  5397  0668  009B               	movwf	27	;volatile
  5398                           
  5399                           ;memory.c: 204: NVMADRL = (bAdd & 0xFF);
  5400  0669  0872               	movf	DATAEE_ReadByte@bAdd,w
  5401  066A  009A               	movwf	26	;volatile
  5402                           
  5403                           ;memory.c: 205: NVMCON1bits.NVMREGS = 1;
  5404  066B  171E               	bsf	30,6	;volsfr
  5405                           
  5406                           ;memory.c: 206: NVMCON1bits.RD = 1;
  5407  066C  141E               	bsf	30,0	;volsfr
  5408                           
  5409                           ;memory.c: 207: __nop();
  5410  066D  0000               	nop
  5411                           
  5412                           ;memory.c: 208: __nop();
  5413  066E  0000               	nop
  5414                           
  5415                           ;memory.c: 210: return (NVMDATL);
  5416  066F  0030               	movlb	16	; select bank16
  5417  0670  081C               	movf	28,w	;volatile
  5418  0671  0008               	return
  5419  0672                     __end_of_DATAEE_ReadByte:	
  5420                           
  5421                           	psect	text5
  5422  02B3                     __ptext5:	
  5423 ;; *************** function _printf *****************
  5424 ;; Defined at:
  5425 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  5428 ;;		 -> STR_5(9), STR_4(7), STR_3(3), STR_2(15), 
  5429 ;;		 -> STR_1(3), 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  tmpval          4    0        struct .
  5432 ;;  cp              2   24[BANK0 ] PTR const unsigned char 
  5433 ;;		 -> STR_6(7), main@check(20), main@err(7), 
  5434 ;;  val             2   21[BANK0 ] unsigned int 
  5435 ;;  len             2    0        unsigned int 
  5436 ;;  c               1   27[BANK0 ] char 
  5437 ;;  ap              1   26[BANK0 ] PTR void [1]
  5438 ;;		 -> ?_printf(2), 
  5439 ;;  prec            1   23[BANK0 ] char 
  5440 ;;  flag            1   20[BANK0 ] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  2    6[BANK0 ] int 
  5443 ;; Registers used:
  5444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5450 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;Total ram usage:       22 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    4
  5457 ;; This function calls:
  5458 ;;		___lwdiv
  5459 ;;		___lwmod
  5460 ;;		_putch
  5461 ;; This function is called by:
  5462 ;;		_main
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _printf
  5468  02B3                     _printf:	
  5469                           
  5470                           ;doprnt.c: 466: va_list ap;
  5471                           ;doprnt.c: 499: signed char c;
  5472                           ;doprnt.c: 506: signed char prec;
  5473                           ;doprnt.c: 508: unsigned char flag;
  5474                           ;doprnt.c: 523: union {
  5475                           ;doprnt.c: 524: unsigned long vd;
  5476                           ;doprnt.c: 525: double integ;
  5477                           ;doprnt.c: 526: } tmpval;
  5478                           ;doprnt.c: 528: unsigned int val;
  5479                           ;doprnt.c: 529: unsigned len;
  5480                           ;doprnt.c: 530: const char * cp;
  5481                           ;doprnt.c: 533: *ap = __va_start();
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5485  02B3  3028               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5486  02B4  0020               	movlb	0	; select bank0
  5487  02B5  00B0               	movwf	??_printf
  5488  02B6  0830               	movf	??_printf,w
  5489  02B7  00BA               	movwf	printf@ap
  5490  02B8                     l2217:	
  5491                           ;doprnt.c: 536: while(c = *f++) {
  5492                           
  5493  02B8  0020               	movlb	0	; select bank0
  5494  02B9  0827               	movf	printf@f+1,w
  5495  02BA  00B1               	movwf	??_printf+1
  5496  02BB  0826               	movf	printf@f,w
  5497  02BC  00B0               	movwf	??_printf
  5498  02BD  0AA6               	incf	printf@f,f
  5499  02BE  1903               	skipnz
  5500  02BF  0AA7               	incf	printf@f+1,f
  5501  02C0  0830               	movf	??_printf,w
  5502  02C1  0084               	movwf	4
  5503  02C2  0831               	movf	??_printf+1,w
  5504  02C3  0085               	movwf	5
  5505  02C4  0800               	movf	0,w	;code access
  5506  02C5  00B2               	movwf	??_printf+2
  5507  02C6  0832               	movf	??_printf+2,w
  5508  02C7  00BB               	movwf	printf@c
  5509  02C8  083B               	movf	printf@c,w
  5510  02C9  1903               	btfsc	3,2
  5511  02CA  0008               	return
  5512                           
  5513                           ;doprnt.c: 538: if(c != '%')
  5514  02CB  3025               	movlw	37
  5515  02CC  063B               	xorwf	printf@c,w
  5516  02CD  1903               	btfsc	3,2
  5517  02CE  2AD4               	goto	l2165
  5518                           
  5519                           ;doprnt.c: 540: {
  5520                           ;doprnt.c: 541: (putch(c) );
  5521  02CF  083B               	movf	printf@c,w
  5522  02D0  3186  269D  3182   	fcall	_putch
  5523                           
  5524                           ;doprnt.c: 542: continue;
  5525  02D3  2AB8               	goto	l2217
  5526  02D4                     l2165:	
  5527                           
  5528                           ;doprnt.c: 543: }
  5529                           ;doprnt.c: 548: flag = 0;
  5530  02D4  0020               	movlb	0	; select bank0
  5531  02D5  01B4               	clrf	printf@flag
  5532                           
  5533                           ;doprnt.c: 635: switch(c = *f++) {
  5534  02D6  2B15               	goto	l2191
  5535  02D7                     l2167:	
  5536                           ;doprnt.c: 728: case 's':
  5537                           
  5538                           ;doprnt.c: 638: goto alldone;
  5539                           
  5540                           ;doprnt.c: 637: case 0:
  5541                           
  5542                           
  5543                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5544  02D7  083A               	movf	printf@ap,w
  5545  02D8  0086               	movwf	6
  5546  02D9  0187               	clrf	7
  5547  02DA  0801               	movf	1,w
  5548  02DB  00B8               	movwf	printf@cp
  5549  02DC  3000               	movlw	0
  5550  02DD  00B9               	movwf	printf@cp+1
  5551  02DE  3001               	movlw	1
  5552  02DF  00B0               	movwf	??_printf
  5553  02E0  0830               	movf	??_printf,w
  5554  02E1  07BA               	addwf	printf@ap,f
  5555                           
  5556                           ;doprnt.c: 740: if(!cp)
  5557  02E2  0838               	movf	printf@cp,w
  5558  02E3  0439               	iorwf	printf@cp+1,w
  5559  02E4  1D03               	btfss	3,2
  5560  02E5  2AEA               	goto	l2179
  5561                           
  5562                           ;doprnt.c: 741: cp = "(null)";
  5563  02E6  3006               	movlw	low (STR_6| (0+32768))
  5564  02E7  00B8               	movwf	printf@cp
  5565  02E8  3085               	movlw	high (STR_6| (0+32768))
  5566  02E9  00B9               	movwf	printf@cp+1
  5567  02EA                     l2179:	
  5568                           ;doprnt.c: 777: while(*cp)
  5569                           
  5570  02EA  0838               	movf	printf@cp,w
  5571  02EB  0084               	movwf	4
  5572  02EC  0839               	movf	printf@cp+1,w
  5573  02ED  0085               	movwf	5
  5574  02EE  0012               	moviw fsr0++
  5575  02EF  1903               	btfsc	3,2
  5576  02F0  2AB8               	goto	l2217
  5577                           
  5578                           ;doprnt.c: 778: (putch(*cp++) );
  5579  02F1  0838               	movf	printf@cp,w
  5580  02F2  0084               	movwf	4
  5581  02F3  0839               	movf	printf@cp+1,w
  5582  02F4  0085               	movwf	5
  5583  02F5  0800               	movf	0,w	;code access
  5584  02F6  3186  269D  3182   	fcall	_putch
  5585  02F9  3001               	movlw	1
  5586  02FA  0020               	movlb	0	; select bank0
  5587  02FB  07B8               	addwf	printf@cp,f
  5588  02FC  3000               	movlw	0
  5589  02FD  3DB9               	addwfc	printf@cp+1,f
  5590  02FE  2AEA               	goto	l2179
  5591  02FF                     l2181:	
  5592                           ;doprnt.c: 784: case 'c':
  5593                           
  5594                           ;doprnt.c: 779: continue;
  5595                           
  5596                           
  5597                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5598  02FF  083A               	movf	printf@ap,w
  5599  0300  0086               	movwf	6
  5600  0301  0187               	clrf	7
  5601  0302  0801               	movf	1,w
  5602  0303  00B0               	movwf	??_printf
  5603  0304  0830               	movf	??_printf,w
  5604  0305  00BB               	movwf	printf@c
  5605  0306  3002               	movlw	2
  5606  0307  00B0               	movwf	??_printf
  5607  0308  0830               	movf	??_printf,w
  5608  0309  07BA               	addwf	printf@ap,f
  5609  030A                     l2185:	
  5610                           ;doprnt.c: 802: default:
  5611                           
  5612                           
  5613                           ;doprnt.c: 809: (putch(c) );
  5614  030A  083B               	movf	printf@c,w
  5615  030B  3186  269D  3182   	fcall	_putch
  5616                           
  5617                           ;doprnt.c: 810: continue;
  5618  030E  2AB8               	goto	l2217
  5619  030F                     l2187:	
  5620                           ;doprnt.c: 817: case 'u':
  5621                           
  5622                           
  5623                           ;doprnt.c: 818: flag |= 0xC0;
  5624  030F  30C0               	movlw	192
  5625  0310  0020               	movlb	0	; select bank0
  5626  0311  00B0               	movwf	??_printf
  5627  0312  0830               	movf	??_printf,w
  5628  0313  04B4               	iorwf	printf@flag,f
  5629                           
  5630                           ;doprnt.c: 822: }
  5631                           
  5632                           ;doprnt.c: 819: break;
  5633  0314  2B2F               	goto	l2193
  5634  0315                     l2191:	
  5635  0315  0827               	movf	printf@f+1,w
  5636  0316  00B1               	movwf	??_printf+1
  5637  0317  0826               	movf	printf@f,w
  5638  0318  00B0               	movwf	??_printf
  5639  0319  0AA6               	incf	printf@f,f
  5640  031A  1903               	skipnz
  5641  031B  0AA7               	incf	printf@f+1,f
  5642  031C  0830               	movf	??_printf,w
  5643  031D  0084               	movwf	4
  5644  031E  0831               	movf	??_printf+1,w
  5645  031F  0085               	movwf	5
  5646  0320  0800               	movf	0,w	;code access
  5647  0321  00BB               	movwf	printf@c
  5648                           
  5649                           ; Switch size 1, requested type "space"
  5650                           ; Number of cases is 4, Range of values is 0 to 117
  5651                           ; switch strategies available:
  5652                           ; Name         Instructions Cycles
  5653                           ; simple_byte           13     7 (average)
  5654                           ; direct_byte          242     6 (fixed)
  5655                           ; jumptable            260     6 (fixed)
  5656                           ;	Chosen strategy is simple_byte
  5657  0322  3A00               	xorlw	0	; case 0
  5658  0323  1903               	skipnz
  5659  0324  2B98               	goto	l349
  5660  0325  3A63               	xorlw	99	; case 99
  5661  0326  1903               	skipnz
  5662  0327  2AFF               	goto	l2181
  5663  0328  3A10               	xorlw	16	; case 115
  5664  0329  1903               	skipnz
  5665  032A  2AD7               	goto	l2167
  5666  032B  3A06               	xorlw	6	; case 117
  5667  032C  1903               	skipnz
  5668  032D  2B0F               	goto	l2187
  5669  032E  2B0A               	goto	l2185
  5670  032F                     l2193:	
  5671                           
  5672                           ;doprnt.c: 1273: {
  5673                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5674  032F  083A               	movf	printf@ap,w
  5675  0330  0086               	movwf	6
  5676  0331  0187               	clrf	7
  5677  0332  3F40               	moviw [0]fsr1
  5678  0333  00B5               	movwf	printf@val
  5679  0334  3F41               	moviw [1]fsr1
  5680  0335  00B6               	movwf	printf@val+1
  5681  0336  3002               	movlw	2
  5682  0337  00B0               	movwf	??_printf
  5683  0338  0830               	movf	??_printf,w
  5684  0339  07BA               	addwf	printf@ap,f
  5685                           
  5686                           ;doprnt.c: 1287: }
  5687                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5688  033A  01BB               	clrf	printf@c
  5689  033B  0ABB               	incf	printf@c,f
  5690  033C  3005               	movlw	5
  5691  033D  063B               	xorwf	printf@c,w
  5692  033E  1903               	btfsc	3,2
  5693  033F  2B5F               	goto	l2209
  5694  0340                     l2203:	
  5695                           
  5696                           ;doprnt.c: 1306: if(val < dpowers[c])
  5697  0340  083B               	movf	printf@c,w
  5698  0341  00B0               	movwf	??_printf
  5699  0342  01B1               	clrf	??_printf+1
  5700  0343  35B0               	lslf	??_printf,f
  5701  0344  0DB1               	rlf	??_printf+1,f
  5702  0345  30E4               	movlw	low (_dpowers| (0+32768))
  5703  0346  0730               	addwf	??_printf,w
  5704  0347  0084               	movwf	4
  5705  0348  3084               	movlw	high (_dpowers| (0+32768))
  5706  0349  3D31               	addwfc	??_printf+1,w
  5707  034A  0085               	movwf	5
  5708  034B  3F00               	moviw [0]fsr0
  5709  034C  00B2               	movwf	??_printf+2
  5710  034D  3F01               	moviw [1]fsr0
  5711  034E  00B3               	movwf	??_printf+3
  5712  034F  0833               	movf	??_printf+3,w
  5713  0350  0236               	subwf	printf@val+1,w
  5714  0351  1D03               	skipz
  5715  0352  2B55               	goto	u2035
  5716  0353  0832               	movf	??_printf+2,w
  5717  0354  0235               	subwf	printf@val,w
  5718  0355                     u2035:	
  5719  0355  1C03               	btfss	3,0
  5720  0356  2B5F               	goto	l2209
  5721                           
  5722                           ;doprnt.c: 1307: break;
  5723  0357  3001               	movlw	1
  5724  0358  00B0               	movwf	??_printf
  5725  0359  0830               	movf	??_printf,w
  5726  035A  07BB               	addwf	printf@c,f
  5727  035B  3005               	movlw	5
  5728  035C  063B               	xorwf	printf@c,w
  5729  035D  1D03               	btfss	3,2
  5730  035E  2B40               	goto	l2203
  5731  035F                     l2209:	
  5732                           
  5733                           ;doprnt.c: 1422: {
  5734                           ;doprnt.c: 1469: }
  5735                           ;doprnt.c: 1472: prec = c;
  5736  035F  083B               	movf	printf@c,w
  5737  0360  00B0               	movwf	??_printf
  5738  0361  0830               	movf	??_printf,w
  5739  0362  00B7               	movwf	printf@prec
  5740  0363                     l2215:	
  5741                           ;doprnt.c: 1474: while(prec--) {
  5742                           
  5743  0363  30FF               	movlw	255
  5744  0364  0020               	movlb	0	; select bank0
  5745  0365  00B0               	movwf	??_printf
  5746  0366  0830               	movf	??_printf,w
  5747  0367  07B7               	addwf	printf@prec,f
  5748  0368  0A37               	incf	printf@prec,w
  5749  0369  1903               	btfsc	3,2
  5750  036A  2AB8               	goto	l2217
  5751                           
  5752                           ;doprnt.c: 1478: {
  5753                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5754  036B  300A               	movlw	10
  5755  036C  00A0               	movwf	___lwmod@divisor
  5756  036D  3000               	movlw	0
  5757  036E  00A1               	movwf	___lwmod@divisor+1
  5758  036F  0837               	movf	printf@prec,w
  5759  0370  00B0               	movwf	??_printf
  5760  0371  01B1               	clrf	??_printf+1
  5761  0372  35B0               	lslf	??_printf,f
  5762  0373  0DB1               	rlf	??_printf+1,f
  5763  0374  30E4               	movlw	low (_dpowers| (0+32768))
  5764  0375  0730               	addwf	??_printf,w
  5765  0376  0084               	movwf	4
  5766  0377  3084               	movlw	high (_dpowers| (0+32768))
  5767  0378  3D31               	addwfc	??_printf+1,w
  5768  0379  0085               	movwf	5
  5769  037A  3F00               	moviw [0]fsr0
  5770  037B  00F2               	movwf	___lwdiv@divisor
  5771  037C  3F01               	moviw [1]fsr0
  5772  037D  00F3               	movwf	___lwdiv@divisor+1
  5773  037E  0836               	movf	printf@val+1,w
  5774  037F  00F5               	movwf	___lwdiv@dividend+1
  5775  0380  0835               	movf	printf@val,w
  5776  0381  00F4               	movwf	___lwdiv@dividend
  5777  0382  3184  24B0  3182   	fcall	___lwdiv
  5778  0385  0873               	movf	?___lwdiv+1,w
  5779  0386  0020               	movlb	0	; select bank0
  5780  0387  00A3               	movwf	___lwmod@dividend+1
  5781  0388  0872               	movf	?___lwdiv,w
  5782  0389  00A2               	movwf	___lwmod@dividend
  5783  038A  3185  2545  3182   	fcall	___lwmod
  5784  038D  0020               	movlb	0	; select bank0
  5785  038E  0820               	movf	?___lwmod,w
  5786  038F  3E30               	addlw	48
  5787  0390  00B2               	movwf	??_printf+2
  5788  0391  0832               	movf	??_printf+2,w
  5789  0392  00BB               	movwf	printf@c
  5790                           
  5791                           ;doprnt.c: 1523: }
  5792                           ;doprnt.c: 1524: (putch(c) );
  5793  0393  083B               	movf	printf@c,w
  5794  0394  3186  269D  3182   	fcall	_putch
  5795  0397  2B63               	goto	l2215
  5796  0398                     l349:	
  5797                           ;doprnt.c: 1540: return 0;
  5798                           ;	Return value of _printf is never used
  5799                           
  5800                           ;doprnt.c: 1525: }
  5801                           ;doprnt.c: 1533: }
  5802                           ;doprnt.c: 1535: alldone:
  5803                           
  5804  0398  0008               	return
  5805  0399                     __end_of_printf:	
  5806                           
  5807                           	psect	text6
  5808  069D                     __ptext6:	
  5809 ;; *************** function _putch *****************
  5810 ;; Defined at:
  5811 ;;		line 61 in file "main.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  d               1    wreg     unsigned char 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  d               1    4[COMMON] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;Total ram usage:        1 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    3
  5832 ;; This function calls:
  5833 ;;		_EUSART_Write
  5834 ;; This function is called by:
  5835 ;;		_printf
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _putch
  5841  069D                     _putch:	
  5842                           
  5843                           ;incstack = 0
  5844                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5845                           ;putch@d stored from wreg
  5846  069D  00F4               	movwf	putch@d
  5847                           
  5848                           ;main.c: 62: EUSART_Write(d);
  5849  069E  0874               	movf	putch@d,w
  5850  069F  3185  259A         	fcall	_EUSART_Write
  5851  06A1  0008               	return
  5852  06A2                     __end_of_putch:	
  5853                           
  5854                           	psect	text7
  5855  059A                     __ptext7:	
  5856 ;; *************** function _EUSART_Write *****************
  5857 ;; Defined at:
  5858 ;;		line 134 in file "mcc_generated_files/eusart.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  txData          1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  txData          1    3[COMMON] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        2 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    2
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_putch
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _EUSART_Write
  5888  059A                     _EUSART_Write:	
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5892                           ;EUSART_Write@txData stored from wreg
  5893  059A  00F3               	movwf	EUSART_Write@txData
  5894  059B                     l1509:	
  5895                           ;eusart.c: 137: {
  5896                           
  5897                           ;eusart.c: 136: while(0 == eusartTxBufferRemaining)
  5898                           
  5899  059B  0020               	movlb	0	; select bank0
  5900  059C  0856               	movf	_eusartTxBufferRemaining,w	;volatile
  5901  059D  1903               	btfsc	3,2
  5902  059E  2D9B               	goto	l1509
  5903                           
  5904                           ;eusart.c: 138: }
  5905                           ;eusart.c: 140: if(0 == PIE3bits.TXIE)
  5906  059F  002E               	movlb	14	; select bank14
  5907  05A0  1A19               	btfsc	25,4	;volatile
  5908  05A1  2DA6               	goto	l91
  5909                           
  5910                           ;eusart.c: 141: {
  5911                           ;eusart.c: 142: TX1REG = txData;
  5912  05A2  0873               	movf	EUSART_Write@txData,w
  5913  05A3  0022               	movlb	2	; select bank2
  5914  05A4  009A               	movwf	26	;volatile
  5915                           
  5916                           ;eusart.c: 143: }
  5917  05A5  2DBA               	goto	l1523
  5918  05A6                     l91:	
  5919                           
  5920                           ;eusart.c: 144: else
  5921                           ;eusart.c: 145: {
  5922                           ;eusart.c: 146: PIE3bits.TXIE = 0;
  5923  05A6  1219               	bcf	25,4	;volatile
  5924                           
  5925                           ;eusart.c: 147: eusartTxBuffer[eusartTxHead++] = txData;
  5926  05A7  0873               	movf	EUSART_Write@txData,w
  5927  05A8  00F2               	movwf	??_EUSART_Write
  5928  05A9  087B               	movf	_eusartTxHead,w
  5929  05AA  3E4A               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5930  05AB  0086               	movwf	6
  5931  05AC  0187               	clrf	7
  5932  05AD  0872               	movf	??_EUSART_Write,w
  5933  05AE  0081               	movwf	1
  5934  05AF  3001               	movlw	1
  5935  05B0  00F2               	movwf	??_EUSART_Write
  5936  05B1  0872               	movf	??_EUSART_Write,w
  5937  05B2  07FB               	addwf	_eusartTxHead,f
  5938                           
  5939                           ;eusart.c: 148: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5940  05B3  3008               	movlw	8
  5941  05B4  027B               	subwf	_eusartTxHead,w
  5942  05B5  1803               	btfsc	3,0
  5943                           
  5944                           ;eusart.c: 149: {
  5945                           ;eusart.c: 150: eusartTxHead = 0;
  5946  05B6  01FB               	clrf	_eusartTxHead
  5947                           
  5948                           ;eusart.c: 151: }
  5949                           ;eusart.c: 152: eusartTxBufferRemaining--;
  5950  05B7  3001               	movlw	1
  5951  05B8  0020               	movlb	0	; select bank0
  5952  05B9  02D6               	subwf	_eusartTxBufferRemaining,f	;volatile
  5953  05BA                     l1523:	
  5954                           
  5955                           ;eusart.c: 153: }
  5956                           ;eusart.c: 154: PIE3bits.TXIE = 1;
  5957  05BA  002E               	movlb	14	; select bank14
  5958  05BB  1619               	bsf	25,4	;volatile
  5959  05BC  0008               	return
  5960  05BD                     __end_of_EUSART_Write:	
  5961                           
  5962                           	psect	text8
  5963  0545                     __ptext8:	
  5964 ;; *************** function ___lwmod *****************
  5965 ;; Defined at:
  5966 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  divisor         2    0[BANK0 ] unsigned int 
  5969 ;;  dividend        2    2[BANK0 ] unsigned int 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  counter         1    5[BANK0 ] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  2    0[BANK0 ] unsigned int 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        6 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    2
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_printf
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function ___lwmod
  5997  0545                     ___lwmod:	
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6001  0545  0020               	movlb	0	; select bank0
  6002  0546  0820               	movf	___lwmod@divisor,w
  6003  0547  0421               	iorwf	___lwmod@divisor+1,w
  6004  0548  1903               	btfsc	3,2
  6005  0549  2D6D               	goto	l2153
  6006  054A  01A5               	clrf	___lwmod@counter
  6007  054B  0AA5               	incf	___lwmod@counter,f
  6008  054C                     l2143:	
  6009  054C  1BA1               	btfsc	___lwmod@divisor+1,7
  6010  054D  2D58               	goto	l2145
  6011  054E  3001               	movlw	1
  6012  054F                     u1945:	
  6013  054F  35A0               	lslf	___lwmod@divisor,f
  6014  0550  0DA1               	rlf	___lwmod@divisor+1,f
  6015  0551  0B89               	decfsz	9,f
  6016  0552  2D4F               	goto	u1945
  6017  0553  3001               	movlw	1
  6018  0554  00A4               	movwf	??___lwmod
  6019  0555  0824               	movf	??___lwmod,w
  6020  0556  07A5               	addwf	___lwmod@counter,f
  6021  0557  2D4C               	goto	l2143
  6022  0558                     l2145:	
  6023  0558  0821               	movf	___lwmod@divisor+1,w
  6024  0559  0223               	subwf	___lwmod@dividend+1,w
  6025  055A  1D03               	skipz
  6026  055B  2D5E               	goto	u1965
  6027  055C  0820               	movf	___lwmod@divisor,w
  6028  055D  0222               	subwf	___lwmod@dividend,w
  6029  055E                     u1965:	
  6030  055E  1C03               	skipc
  6031  055F  2D64               	goto	l2149
  6032  0560  0820               	movf	___lwmod@divisor,w
  6033  0561  02A2               	subwf	___lwmod@dividend,f
  6034  0562  0821               	movf	___lwmod@divisor+1,w
  6035  0563  3BA3               	subwfb	___lwmod@dividend+1,f
  6036  0564                     l2149:	
  6037  0564  3001               	movlw	1
  6038  0565                     u1975:	
  6039  0565  36A1               	lsrf	___lwmod@divisor+1,f
  6040  0566  0CA0               	rrf	___lwmod@divisor,f
  6041  0567  0B89               	decfsz	9,f
  6042  0568  2D65               	goto	u1975
  6043  0569  3001               	movlw	1
  6044  056A  02A5               	subwf	___lwmod@counter,f
  6045  056B  1D03               	btfss	3,2
  6046  056C  2D58               	goto	l2145
  6047  056D                     l2153:	
  6048  056D  0823               	movf	___lwmod@dividend+1,w
  6049  056E  00A1               	movwf	?___lwmod+1
  6050  056F  0822               	movf	___lwmod@dividend,w
  6051  0570  00A0               	movwf	?___lwmod
  6052  0571  0008               	return
  6053  0572                     __end_of___lwmod:	
  6054                           
  6055                           	psect	text9
  6056  04B0                     __ptext9:	
  6057 ;; *************** function ___lwdiv *****************
  6058 ;; Defined at:
  6059 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  divisor         2    2[COMMON] unsigned int 
  6062 ;;  dividend        2    4[COMMON] unsigned int 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  quotient        2    7[COMMON] unsigned int 
  6065 ;;  counter         1    9[COMMON] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2    2[COMMON] unsigned int 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;Total ram usage:        8 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    2
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_printf
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           
  6090                           ;psect for function ___lwdiv
  6091  04B0                     ___lwdiv:	
  6092                           
  6093                           ;incstack = 0
  6094                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6095  04B0  01F7               	clrf	___lwdiv@quotient
  6096  04B1  01F8               	clrf	___lwdiv@quotient+1
  6097  04B2  0872               	movf	___lwdiv@divisor,w
  6098  04B3  0473               	iorwf	___lwdiv@divisor+1,w
  6099  04B4  1903               	btfsc	3,2
  6100  04B5  2CDF               	goto	l1721
  6101  04B6  01F9               	clrf	___lwdiv@counter
  6102  04B7  0AF9               	incf	___lwdiv@counter,f
  6103  04B8                     l1709:	
  6104  04B8  1BF3               	btfsc	___lwdiv@divisor+1,7
  6105  04B9  2CC4               	goto	l1711
  6106  04BA  3001               	movlw	1
  6107  04BB                     u1185:	
  6108  04BB  35F2               	lslf	___lwdiv@divisor,f
  6109  04BC  0DF3               	rlf	___lwdiv@divisor+1,f
  6110  04BD  0B89               	decfsz	9,f
  6111  04BE  2CBB               	goto	u1185
  6112  04BF  3001               	movlw	1
  6113  04C0  00F6               	movwf	??___lwdiv
  6114  04C1  0876               	movf	??___lwdiv,w
  6115  04C2  07F9               	addwf	___lwdiv@counter,f
  6116  04C3  2CB8               	goto	l1709
  6117  04C4                     l1711:	
  6118  04C4  3001               	movlw	1
  6119  04C5                     u1205:	
  6120  04C5  35F7               	lslf	___lwdiv@quotient,f
  6121  04C6  0DF8               	rlf	___lwdiv@quotient+1,f
  6122  04C7  0B89               	decfsz	9,f
  6123  04C8  2CC5               	goto	u1205
  6124  04C9  0873               	movf	___lwdiv@divisor+1,w
  6125  04CA  0275               	subwf	___lwdiv@dividend+1,w
  6126  04CB  1D03               	skipz
  6127  04CC  2CCF               	goto	u1215
  6128  04CD  0872               	movf	___lwdiv@divisor,w
  6129  04CE  0274               	subwf	___lwdiv@dividend,w
  6130  04CF                     u1215:	
  6131  04CF  1C03               	skipc
  6132  04D0  2CD6               	goto	l1717
  6133  04D1  0872               	movf	___lwdiv@divisor,w
  6134  04D2  02F4               	subwf	___lwdiv@dividend,f
  6135  04D3  0873               	movf	___lwdiv@divisor+1,w
  6136  04D4  3BF5               	subwfb	___lwdiv@dividend+1,f
  6137  04D5  1477               	bsf	___lwdiv@quotient,0
  6138  04D6                     l1717:	
  6139  04D6  3001               	movlw	1
  6140  04D7                     u1225:	
  6141  04D7  36F3               	lsrf	___lwdiv@divisor+1,f
  6142  04D8  0CF2               	rrf	___lwdiv@divisor,f
  6143  04D9  0B89               	decfsz	9,f
  6144  04DA  2CD7               	goto	u1225
  6145  04DB  3001               	movlw	1
  6146  04DC  02F9               	subwf	___lwdiv@counter,f
  6147  04DD  1D03               	btfss	3,2
  6148  04DE  2CC4               	goto	l1711
  6149  04DF                     l1721:	
  6150  04DF  0878               	movf	___lwdiv@quotient+1,w
  6151  04E0  00F3               	movwf	?___lwdiv+1
  6152  04E1  0877               	movf	___lwdiv@quotient,w
  6153  04E2  00F2               	movwf	?___lwdiv
  6154  04E3  0008               	return
  6155  04E4                     __end_of___lwdiv:	
  6156                           
  6157                           	psect	text10
  6158  0517                     __ptext10:	
  6159 ;; *************** function _getValidString *****************
  6160 ;; Defined at:
  6161 ;;		line 32 in file "variables.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  buffer          1    wreg     PTR unsigned char 
  6164 ;;		 -> main@check(20), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  buffer          1    8[COMMON] PTR unsigned char 
  6167 ;;		 -> main@check(20), 
  6168 ;;  wait            1    7[COMMON] unsigned char 
  6169 ;;  oldbuffer       1    6[COMMON] PTR unsigned char 
  6170 ;;		 -> main@check(20), 
  6171 ;;  data            1    5[COMMON] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;Total ram usage:        5 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    3
  6188 ;; This function calls:
  6189 ;;		_EUSART_Read
  6190 ;; This function is called by:
  6191 ;;		_main
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function _getValidString
  6197  0517                     _getValidString:	
  6198                           
  6199                           ;incstack = 0
  6200                           ; Regs used in _getValidString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6201                           ;getValidString@buffer stored from wreg
  6202  0517  00F8               	movwf	getValidString@buffer
  6203                           
  6204                           ;variables.c: 34: uint8_t data;
  6205                           ;variables.c: 35: char * oldbuffer = buffer;
  6206  0518  0878               	movf	getValidString@buffer,w
  6207  0519  00F4               	movwf	??_getValidString
  6208  051A  0874               	movf	??_getValidString,w
  6209  051B  00F6               	movwf	getValidString@oldbuffer
  6210                           
  6211                           ;variables.c: 36: bool wait = 1;
  6212  051C  01F7               	clrf	getValidString@wait
  6213  051D  0AF7               	incf	getValidString@wait,f
  6214  051E                     l306:	
  6215                           ;variables.c: 37: while((eusartRxCount) || wait)
  6216                           
  6217  051E  087A               	movf	_eusartRxCount,w	;volatile
  6218  051F  1903               	btfsc	3,2
  6219  0520  2D41               	goto	l1795
  6220  0521                     l1783:	
  6221                           
  6222                           ;variables.c: 38: {
  6223                           ;variables.c: 39: data = EUSART_Read();
  6224  0521  3185  25BD  3185   	fcall	_EUSART_Read
  6225  0524  00F4               	movwf	??_getValidString
  6226  0525  0874               	movf	??_getValidString,w
  6227  0526  00F5               	movwf	getValidString@data
  6228                           
  6229                           ;variables.c: 40: *buffer = data;
  6230  0527  0875               	movf	getValidString@data,w
  6231  0528  00F4               	movwf	??_getValidString
  6232  0529  0878               	movf	getValidString@buffer,w
  6233  052A  0086               	movwf	6
  6234  052B  0187               	clrf	7
  6235  052C  0874               	movf	??_getValidString,w
  6236  052D  0081               	movwf	1
  6237                           
  6238                           ;variables.c: 41: if(*buffer == '>')
  6239  052E  0878               	movf	getValidString@buffer,w
  6240  052F  0086               	movwf	6
  6241  0530  0187               	clrf	7
  6242  0531  303E               	movlw	62
  6243  0532  0601               	xorwf	1,w
  6244  0533  1903               	btfsc	3,2
  6245                           
  6246                           ;variables.c: 42: {
  6247                           ;variables.c: 43: wait = 0;
  6248  0534  01F7               	clrf	getValidString@wait
  6249                           
  6250                           ;variables.c: 44: }
  6251                           ;variables.c: 45: if(*oldbuffer == '<')
  6252  0535  0876               	movf	getValidString@oldbuffer,w
  6253  0536  0086               	movwf	6
  6254  0537  0187               	clrf	7
  6255  0538  303C               	movlw	60
  6256  0539  0601               	xorwf	1,w
  6257  053A  1D03               	btfss	3,2
  6258  053B  2D1E               	goto	l306
  6259                           
  6260                           ;variables.c: 46: buffer++;
  6261  053C  3001               	movlw	1
  6262  053D  00F4               	movwf	??_getValidString
  6263  053E  0874               	movf	??_getValidString,w
  6264  053F  07F8               	addwf	getValidString@buffer,f
  6265  0540  2D1E               	goto	l306
  6266  0541                     l1795:	
  6267  0541  0877               	movf	getValidString@wait,w
  6268  0542  1903               	btfsc	3,2
  6269  0543  0008               	return
  6270  0544  2D21               	goto	l1783
  6271  0545                     __end_of_getValidString:	
  6272                           
  6273                           	psect	text11
  6274  05BD                     __ptext11:	
  6275 ;; *************** function _EUSART_Read *****************
  6276 ;; Defined at:
  6277 ;;		line 112 in file "mcc_generated_files/eusart.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  readValue       1    3[COMMON] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      unsigned char 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    2
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_getValidString
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           
  6306                           ;psect for function _EUSART_Read
  6307  05BD                     _EUSART_Read:	
  6308                           
  6309                           ;eusart.c: 114: uint8_t readValue = 0;
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6313  05BD  01F3               	clrf	EUSART_Read@readValue
  6314                           
  6315                           ;eusart.c: 116: LATAbits.LATA2 = 1;
  6316  05BE  0020               	movlb	0	; select bank0
  6317  05BF  1516               	bsf	22,2	;volatile
  6318  05C0                     l1583:	
  6319                           ;eusart.c: 118: {
  6320                           
  6321                           ;eusart.c: 117: while(0 == eusartRxCount)
  6322                           
  6323  05C0  087A               	movf	_eusartRxCount,w	;volatile
  6324  05C1  1903               	btfsc	3,2
  6325  05C2  2DC0               	goto	l1583
  6326                           
  6327                           ;eusart.c: 119: }
  6328                           ;eusart.c: 120: LATAbits.LATA2 = 0;
  6329  05C3  0020               	movlb	0	; select bank0
  6330  05C4  1116               	bcf	22,2	;volatile
  6331                           
  6332                           ;eusart.c: 122: readValue = eusartRxBuffer[eusartRxTail++];
  6333  05C5  0853               	movf	_eusartRxTail,w
  6334  05C6  3E42               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6335  05C7  0086               	movwf	6
  6336  05C8  0187               	clrf	7
  6337  05C9  0801               	movf	1,w
  6338  05CA  00F2               	movwf	??_EUSART_Read
  6339  05CB  0872               	movf	??_EUSART_Read,w
  6340  05CC  00F3               	movwf	EUSART_Read@readValue
  6341  05CD  3001               	movlw	1
  6342  05CE  00F2               	movwf	??_EUSART_Read
  6343  05CF  0872               	movf	??_EUSART_Read,w
  6344  05D0  07D3               	addwf	_eusartRxTail,f
  6345                           
  6346                           ;eusart.c: 123: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6347  05D1  3008               	movlw	8
  6348  05D2  0253               	subwf	_eusartRxTail,w
  6349  05D3  1803               	btfsc	3,0
  6350                           
  6351                           ;eusart.c: 124: {
  6352                           ;eusart.c: 125: eusartRxTail = 0;
  6353  05D4  01D3               	clrf	_eusartRxTail
  6354                           
  6355                           ;eusart.c: 126: }
  6356                           ;eusart.c: 127: PIE3bits.RCIE = 0;
  6357  05D5  002E               	movlb	14	; select bank14
  6358  05D6  1299               	bcf	25,5	;volatile
  6359                           
  6360                           ;eusart.c: 128: eusartRxCount--;
  6361  05D7  3001               	movlw	1
  6362  05D8  02FA               	subwf	_eusartRxCount,f	;volatile
  6363                           
  6364                           ;eusart.c: 129: PIE3bits.RCIE = 1;
  6365  05D9  1699               	bsf	25,5	;volatile
  6366                           
  6367                           ;eusart.c: 131: return readValue;
  6368  05DA  0873               	movf	EUSART_Read@readValue,w
  6369  05DB  0008               	return
  6370  05DC                     __end_of_EUSART_Read:	
  6371                           
  6372                           	psect	text12
  6373  0399                     __ptext12:	
  6374 ;; *************** function _convertCharToInt *****************
  6375 ;; Defined at:
  6376 ;;		line 51 in file "variables.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  buffer          1    wreg     PTR unsigned char 
  6379 ;;		 -> main@add(5), 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  buffer          1    6[BANK0 ] PTR unsigned char 
  6382 ;;		 -> main@add(5), 
  6383 ;;  j               2   11[BANK0 ] int 
  6384 ;;  value           2    9[BANK0 ] int 
  6385 ;;  modifier        2    7[BANK0 ] int 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  2    4[BANK0 ] int 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;Total ram usage:       10 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    3
  6402 ;; This function calls:
  6403 ;;		___awdiv
  6404 ;;		___wmul
  6405 ;; This function is called by:
  6406 ;;		_main
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function _convertCharToInt
  6412  0399                     _convertCharToInt:	
  6413                           
  6414                           ;incstack = 0
  6415                           ; Regs used in _convertCharToInt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6416                           ;convertCharToInt@buffer stored from wreg
  6417  0399  0020               	movlb	0	; select bank0
  6418  039A  00A6               	movwf	convertCharToInt@buffer
  6419                           
  6420                           ;variables.c: 53: int modifier = 10000;
  6421  039B  3010               	movlw	16
  6422  039C  00A7               	movwf	convertCharToInt@modifier
  6423  039D  3027               	movlw	39
  6424  039E  00A8               	movwf	convertCharToInt@modifier+1
  6425                           
  6426                           ;variables.c: 54: int value = 0;
  6427  039F  01A9               	clrf	convertCharToInt@value
  6428  03A0  01AA               	clrf	convertCharToInt@value+1
  6429                           
  6430                           ;variables.c: 55: for(int j = 0; j < 5; j++)
  6431  03A1  01AB               	clrf	convertCharToInt@j
  6432  03A2  01AC               	clrf	convertCharToInt@j+1
  6433  03A3  082C               	movf	convertCharToInt@j+1,w
  6434  03A4  3A80               	xorlw	128
  6435  03A5  00F8               	movwf	??_convertCharToInt
  6436  03A6  3080               	movlw	128
  6437  03A7  0278               	subwf	??_convertCharToInt,w
  6438  03A8  1D03               	skipz
  6439  03A9  2BAC               	goto	u2075
  6440  03AA  3005               	movlw	5
  6441  03AB  022B               	subwf	convertCharToInt@j,w
  6442  03AC                     u2075:	
  6443  03AC  1803               	btfsc	3,0
  6444  03AD  2BE9               	goto	l2235
  6445  03AE                     l2227:	
  6446                           
  6447                           ;variables.c: 56: {
  6448                           ;variables.c: 57: value = value + (buffer[j]-48)*modifier;
  6449  03AE  0020               	movlb	0	; select bank0
  6450  03AF  082B               	movf	convertCharToInt@j,w
  6451  03B0  0726               	addwf	convertCharToInt@buffer,w
  6452  03B1  00F8               	movwf	??_convertCharToInt
  6453  03B2  0878               	movf	??_convertCharToInt,w
  6454  03B3  0086               	movwf	6
  6455  03B4  0187               	clrf	7
  6456  03B5  0801               	movf	1,w
  6457  03B6  3ED0               	addlw	208
  6458  03B7  00F2               	movwf	___wmul@multiplier
  6459  03B8  30FF               	movlw	255
  6460  03B9  1803               	skipnc
  6461  03BA  3000               	movlw	0
  6462  03BB  00F3               	movwf	___wmul@multiplier+1
  6463  03BC  0828               	movf	convertCharToInt@modifier+1,w
  6464  03BD  00F5               	movwf	___wmul@multiplicand+1
  6465  03BE  0827               	movf	convertCharToInt@modifier,w
  6466  03BF  00F4               	movwf	___wmul@multiplicand
  6467  03C0  3186  2615  3183   	fcall	___wmul
  6468  03C3  0020               	movlb	0	; select bank0
  6469  03C4  0829               	movf	convertCharToInt@value,w
  6470  03C5  0772               	addwf	?___wmul,w
  6471  03C6  00A9               	movwf	convertCharToInt@value
  6472  03C7  082A               	movf	convertCharToInt@value+1,w
  6473  03C8  3D73               	addwfc	?___wmul+1,w
  6474  03C9  00AA               	movwf	convertCharToInt@value+1
  6475                           
  6476                           ;variables.c: 58: modifier = modifier/10;
  6477  03CA  300A               	movlw	10
  6478  03CB  00F2               	movwf	___awdiv@divisor
  6479  03CC  3000               	movlw	0
  6480  03CD  00F3               	movwf	___awdiv@divisor+1
  6481  03CE  0828               	movf	convertCharToInt@modifier+1,w
  6482  03CF  00F5               	movwf	___awdiv@dividend+1
  6483  03D0  0827               	movf	convertCharToInt@modifier,w
  6484  03D1  00F4               	movwf	___awdiv@dividend
  6485  03D2  3183  23EF  3183   	fcall	___awdiv
  6486  03D5  0873               	movf	?___awdiv+1,w
  6487  03D6  0020               	movlb	0	; select bank0
  6488  03D7  00A8               	movwf	convertCharToInt@modifier+1
  6489  03D8  0872               	movf	?___awdiv,w
  6490  03D9  00A7               	movwf	convertCharToInt@modifier
  6491  03DA  3001               	movlw	1
  6492  03DB  07AB               	addwf	convertCharToInt@j,f
  6493  03DC  3000               	movlw	0
  6494  03DD  3DAC               	addwfc	convertCharToInt@j+1,f
  6495  03DE  082C               	movf	convertCharToInt@j+1,w
  6496  03DF  3A80               	xorlw	128
  6497  03E0  00F8               	movwf	??_convertCharToInt
  6498  03E1  3080               	movlw	128
  6499  03E2  0278               	subwf	??_convertCharToInt,w
  6500  03E3  1D03               	skipz
  6501  03E4  2BE7               	goto	u2085
  6502  03E5  3005               	movlw	5
  6503  03E6  022B               	subwf	convertCharToInt@j,w
  6504  03E7                     u2085:	
  6505  03E7  1C03               	skipc
  6506  03E8  2BAE               	goto	l2227
  6507  03E9                     l2235:	
  6508                           
  6509                           ;variables.c: 59: }
  6510                           ;variables.c: 60: return value;
  6511  03E9  0020               	movlb	0	; select bank0
  6512  03EA  082A               	movf	convertCharToInt@value+1,w
  6513  03EB  00A5               	movwf	?_convertCharToInt+1
  6514  03EC  0829               	movf	convertCharToInt@value,w
  6515  03ED  00A4               	movwf	?_convertCharToInt
  6516  03EE  0008               	return
  6517  03EF                     __end_of_convertCharToInt:	
  6518                           
  6519                           	psect	text13
  6520  0615                     __ptext13:	
  6521 ;; *************** function ___wmul *****************
  6522 ;; Defined at:
  6523 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  multiplier      2    2[COMMON] unsigned int 
  6526 ;;  multiplicand    2    4[COMMON] unsigned int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  product         2    6[COMMON] unsigned int 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2    2[COMMON] unsigned int 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;Total ram usage:        6 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    2
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_main
  6549 ;;		_convertCharToInt
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           
  6554                           ;psect for function ___wmul
  6555  0615                     ___wmul:	
  6556                           
  6557                           ;incstack = 0
  6558                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6559  0615  01F6               	clrf	___wmul@product
  6560  0616  01F7               	clrf	___wmul@product+1
  6561  0617                     l1643:	
  6562  0617  1C72               	btfss	___wmul@multiplier,0
  6563  0618  2E1D               	goto	l431
  6564  0619  0874               	movf	___wmul@multiplicand,w
  6565  061A  07F6               	addwf	___wmul@product,f
  6566  061B  0875               	movf	___wmul@multiplicand+1,w
  6567  061C  3DF7               	addwfc	___wmul@product+1,f
  6568  061D                     l431:	
  6569  061D  3001               	movlw	1
  6570  061E                     u1045:	
  6571  061E  35F4               	lslf	___wmul@multiplicand,f
  6572  061F  0DF5               	rlf	___wmul@multiplicand+1,f
  6573  0620  0B89               	decfsz	9,f
  6574  0621  2E1E               	goto	u1045
  6575  0622  3001               	movlw	1
  6576  0623                     u1055:	
  6577  0623  36F3               	lsrf	___wmul@multiplier+1,f
  6578  0624  0CF2               	rrf	___wmul@multiplier,f
  6579  0625  0B89               	decfsz	9,f
  6580  0626  2E23               	goto	u1055
  6581  0627  0872               	movf	___wmul@multiplier,w
  6582  0628  0473               	iorwf	___wmul@multiplier+1,w
  6583  0629  1D03               	btfss	3,2
  6584  062A  2E17               	goto	l1643
  6585  062B  0877               	movf	___wmul@product+1,w
  6586  062C  00F3               	movwf	?___wmul+1
  6587  062D  0876               	movf	___wmul@product,w
  6588  062E  00F2               	movwf	?___wmul
  6589  062F  0008               	return
  6590  0630                     __end_of___wmul:	
  6591                           
  6592                           	psect	text14
  6593  03EF                     __ptext14:	
  6594 ;; *************** function ___awdiv *****************
  6595 ;; Defined at:
  6596 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  divisor         2    2[COMMON] int 
  6599 ;;  dividend        2    4[COMMON] int 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  quotient        2    2[BANK0 ] int 
  6602 ;;  sign            1    1[BANK0 ] unsigned char 
  6603 ;;  counter         1    0[BANK0 ] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  2    2[COMMON] int 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;Total ram usage:        9 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    2
  6620 ;; This function calls:
  6621 ;;		Nothing
  6622 ;; This function is called by:
  6623 ;;		_main
  6624 ;;		_convertCharToInt
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function ___awdiv
  6630  03EF                     ___awdiv:	
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6634  03EF  0020               	movlb	0	; select bank0
  6635  03F0  01A1               	clrf	___awdiv@sign
  6636  03F1  1FF3               	btfss	___awdiv@divisor+1,7
  6637  03F2  2BFA               	goto	l2099
  6638  03F3  09F2               	comf	___awdiv@divisor,f
  6639  03F4  09F3               	comf	___awdiv@divisor+1,f
  6640  03F5  0AF2               	incf	___awdiv@divisor,f
  6641  03F6  1903               	skipnz
  6642  03F7  0AF3               	incf	___awdiv@divisor+1,f
  6643  03F8  01A1               	clrf	___awdiv@sign
  6644  03F9  0AA1               	incf	___awdiv@sign,f
  6645  03FA                     l2099:	
  6646  03FA  1FF5               	btfss	___awdiv@dividend+1,7
  6647  03FB  2C05               	goto	l2105
  6648  03FC  09F4               	comf	___awdiv@dividend,f
  6649  03FD  09F5               	comf	___awdiv@dividend+1,f
  6650  03FE  0AF4               	incf	___awdiv@dividend,f
  6651  03FF  1903               	skipnz
  6652  0400  0AF5               	incf	___awdiv@dividend+1,f
  6653  0401  3001               	movlw	1
  6654  0402  00F6               	movwf	??___awdiv
  6655  0403  0876               	movf	??___awdiv,w
  6656  0404  06A1               	xorwf	___awdiv@sign,f
  6657  0405                     l2105:	
  6658  0405  01A2               	clrf	___awdiv@quotient
  6659  0406  01A3               	clrf	___awdiv@quotient+1
  6660  0407  0872               	movf	___awdiv@divisor,w
  6661  0408  0473               	iorwf	___awdiv@divisor+1,w
  6662  0409  1903               	btfsc	3,2
  6663  040A  2C34               	goto	l2127
  6664  040B  01A0               	clrf	___awdiv@counter
  6665  040C  0AA0               	incf	___awdiv@counter,f
  6666  040D                     l2115:	
  6667  040D  1BF3               	btfsc	___awdiv@divisor+1,7
  6668  040E  2C19               	goto	l2117
  6669  040F  3001               	movlw	1
  6670  0410                     u1865:	
  6671  0410  35F2               	lslf	___awdiv@divisor,f
  6672  0411  0DF3               	rlf	___awdiv@divisor+1,f
  6673  0412  0B89               	decfsz	9,f
  6674  0413  2C10               	goto	u1865
  6675  0414  3001               	movlw	1
  6676  0415  00F6               	movwf	??___awdiv
  6677  0416  0876               	movf	??___awdiv,w
  6678  0417  07A0               	addwf	___awdiv@counter,f
  6679  0418  2C0D               	goto	l2115
  6680  0419                     l2117:	
  6681  0419  3001               	movlw	1
  6682  041A                     u1885:	
  6683  041A  35A2               	lslf	___awdiv@quotient,f
  6684  041B  0DA3               	rlf	___awdiv@quotient+1,f
  6685  041C  0B89               	decfsz	9,f
  6686  041D  2C1A               	goto	u1885
  6687  041E  0873               	movf	___awdiv@divisor+1,w
  6688  041F  0275               	subwf	___awdiv@dividend+1,w
  6689  0420  1D03               	skipz
  6690  0421  2C24               	goto	u1895
  6691  0422  0872               	movf	___awdiv@divisor,w
  6692  0423  0274               	subwf	___awdiv@dividend,w
  6693  0424                     u1895:	
  6694  0424  1C03               	skipc
  6695  0425  2C2B               	goto	l2123
  6696  0426  0872               	movf	___awdiv@divisor,w
  6697  0427  02F4               	subwf	___awdiv@dividend,f
  6698  0428  0873               	movf	___awdiv@divisor+1,w
  6699  0429  3BF5               	subwfb	___awdiv@dividend+1,f
  6700  042A  1422               	bsf	___awdiv@quotient,0
  6701  042B                     l2123:	
  6702  042B  3001               	movlw	1
  6703  042C                     u1905:	
  6704  042C  36F3               	lsrf	___awdiv@divisor+1,f
  6705  042D  0CF2               	rrf	___awdiv@divisor,f
  6706  042E  0B89               	decfsz	9,f
  6707  042F  2C2C               	goto	u1905
  6708  0430  3001               	movlw	1
  6709  0431  02A0               	subwf	___awdiv@counter,f
  6710  0432  1D03               	btfss	3,2
  6711  0433  2C19               	goto	l2117
  6712  0434                     l2127:	
  6713  0434  0821               	movf	___awdiv@sign,w
  6714  0435  1903               	btfsc	3,2
  6715  0436  2C3C               	goto	l2131
  6716  0437  09A2               	comf	___awdiv@quotient,f
  6717  0438  09A3               	comf	___awdiv@quotient+1,f
  6718  0439  0AA2               	incf	___awdiv@quotient,f
  6719  043A  1903               	skipnz
  6720  043B  0AA3               	incf	___awdiv@quotient+1,f
  6721  043C                     l2131:	
  6722  043C  0823               	movf	___awdiv@quotient+1,w
  6723  043D  00F3               	movwf	?___awdiv+1
  6724  043E  0822               	movf	___awdiv@quotient,w
  6725  043F  00F2               	movwf	?___awdiv
  6726  0440  0008               	return
  6727  0441                     __end_of___awdiv:	
  6728                           
  6729                           	psect	text15
  6730  0672                     __ptext15:	
  6731 ;; *************** function _SYSTEM_Initialize *****************
  6732 ;; Defined at:
  6733 ;;		line 82 in file "mcc_generated_files/mcc.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, pclath, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    3
  6754 ;; This function calls:
  6755 ;;		_EUSART_Initialize
  6756 ;;		_OSCILLATOR_Initialize
  6757 ;;		_PIN_MANAGER_Initialize
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _SYSTEM_Initialize
  6765  0672                     _SYSTEM_Initialize:	
  6766                           
  6767                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6771  0672  3184  247A  3186   	fcall	_PIN_MANAGER_Initialize
  6772                           
  6773                           ;mcc.c: 86: OSCILLATOR_Initialize();
  6774  0675  3186  267B  3186   	fcall	_OSCILLATOR_Initialize
  6775                           
  6776                           ;mcc.c: 87: EUSART_Initialize();
  6777  0678  3186  2630         	fcall	_EUSART_Initialize
  6778  067A  0008               	return
  6779  067B                     __end_of_SYSTEM_Initialize:	
  6780                           
  6781                           	psect	text16
  6782  047A                     __ptext16:	
  6783 ;; *************** function _PIN_MANAGER_Initialize *****************
  6784 ;; Defined at:
  6785 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;		None
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  state           1    2[COMMON] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;Total ram usage:        1 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    2
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_SYSTEM_Initialize
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           
  6814                           ;psect for function _PIN_MANAGER_Initialize
  6815  047A                     _PIN_MANAGER_Initialize:	
  6816                           
  6817                           ;pin_manager.c: 56: LATA = 0x00;
  6818                           
  6819                           ;incstack = 0
  6820                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  6821  047A  0020               	movlb	0	; select bank0
  6822  047B  0196               	clrf	22	;volatile
  6823                           
  6824                           ;pin_manager.c: 57: LATB = 0x00;
  6825  047C  0197               	clrf	23	;volatile
  6826                           
  6827                           ;pin_manager.c: 58: LATC = 0x00;
  6828  047D  0198               	clrf	24	;volatile
  6829                           
  6830                           ;pin_manager.c: 63: TRISA = 0xFF;
  6831  047E  30FF               	movlw	255
  6832  047F  0091               	movwf	17	;volatile
  6833                           
  6834                           ;pin_manager.c: 64: TRISB = 0xFF;
  6835  0480  30FF               	movlw	255
  6836  0481  0092               	movwf	18	;volatile
  6837                           
  6838                           ;pin_manager.c: 65: TRISC = 0xBF;
  6839  0482  30BF               	movlw	191
  6840  0483  0093               	movwf	19	;volatile
  6841                           
  6842                           ;pin_manager.c: 70: ANSELC = 0xDF;
  6843  0484  30DF               	movlw	223
  6844  0485  003E               	movlb	30	; select bank30
  6845  0486  00CE               	movwf	78	;volatile
  6846                           
  6847                           ;pin_manager.c: 71: ANSELB = 0xFF;
  6848  0487  30FF               	movlw	255
  6849  0488  00C3               	movwf	67	;volatile
  6850                           
  6851                           ;pin_manager.c: 72: ANSELA = 0xFF;
  6852  0489  30FF               	movlw	255
  6853  048A  00B8               	movwf	56	;volatile
  6854                           
  6855                           ;pin_manager.c: 77: WPUE = 0x00;
  6856  048B  01E5               	clrf	101	;volatile
  6857                           
  6858                           ;pin_manager.c: 78: WPUB = 0x00;
  6859  048C  01C4               	clrf	68	;volatile
  6860                           
  6861                           ;pin_manager.c: 79: WPUA = 0x00;
  6862  048D  01B9               	clrf	57	;volatile
  6863                           
  6864                           ;pin_manager.c: 80: WPUC = 0x00;
  6865  048E  01CF               	clrf	79	;volatile
  6866                           
  6867                           ;pin_manager.c: 85: ODCONA = 0x00;
  6868  048F  01BA               	clrf	58	;volatile
  6869                           
  6870                           ;pin_manager.c: 86: ODCONB = 0x00;
  6871  0490  01C5               	clrf	69	;volatile
  6872                           
  6873                           ;pin_manager.c: 87: ODCONC = 0x00;
  6874  0491  01D0               	clrf	80	;volatile
  6875                           
  6876                           ;pin_manager.c: 94: bool state = GIE;
  6877  0492  3000               	movlw	0
  6878  0493  1B8B               	btfsc	11,7	;volatile
  6879  0494  3001               	movlw	1
  6880  0495  00F2               	movwf	PIN_MANAGER_Initialize@state
  6881                           
  6882                           ;pin_manager.c: 95: GIE = 0;
  6883  0496  138B               	bcf	11,7	;volatile
  6884                           
  6885                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  6886  0497  3055               	movlw	85
  6887  0498  003D               	movlb	29	; select bank29
  6888  0499  008F               	movwf	15	;volatile
  6889                           
  6890                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  6891  049A  30AA               	movlw	170
  6892  049B  008F               	movwf	15	;volatile
  6893                           
  6894                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  6895  049C  100F               	bcf	15,0	;volatile
  6896                           
  6897                           ;pin_manager.c: 100: RC6PPS = 0x10;
  6898  049D  3010               	movlw	16
  6899  049E  003E               	movlb	30	; select bank30
  6900  049F  00A6               	movwf	38	;volatile
  6901                           
  6902                           ;pin_manager.c: 101: RXPPSbits.RXPPS = 0x15;
  6903  04A0  003D               	movlb	29	; select bank29
  6904  04A1  084B               	movf	75,w	;volatile
  6905  04A2  39E0               	andlw	-32
  6906  04A3  3815               	iorlw	21
  6907  04A4  00CB               	movwf	75	;volatile
  6908                           
  6909                           ;pin_manager.c: 103: PPSLOCK = 0x55;
  6910  04A5  3055               	movlw	85
  6911  04A6  008F               	movwf	15	;volatile
  6912                           
  6913                           ;pin_manager.c: 104: PPSLOCK = 0xAA;
  6914  04A7  30AA               	movlw	170
  6915  04A8  008F               	movwf	15	;volatile
  6916                           
  6917                           ;pin_manager.c: 105: PPSLOCKbits.PPSLOCKED = 0x01;
  6918  04A9  140F               	bsf	15,0	;volatile
  6919                           
  6920                           ;pin_manager.c: 107: GIE = state;
  6921  04AA  1C72               	btfss	PIN_MANAGER_Initialize@state,0
  6922  04AB  2CAE               	goto	u980
  6923  04AC  178B               	bsf	11,7	;volatile
  6924  04AD  0008               	return
  6925  04AE                     u980:	
  6926  04AE  138B               	bcf	11,7	;volatile
  6927  04AF  0008               	return
  6928  04B0                     __end_of_PIN_MANAGER_Initialize:	
  6929                           
  6930                           	psect	text17
  6931  067B                     __ptext17:	
  6932 ;; *************** function _OSCILLATOR_Initialize *****************
  6933 ;; Defined at:
  6934 ;;		line 90 in file "mcc_generated_files/mcc.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;Total ram usage:        0 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    2
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_SYSTEM_Initialize
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function _OSCILLATOR_Initialize
  6964  067B                     _OSCILLATOR_Initialize:	
  6965                           
  6966                           ;mcc.c: 93: OSCCON1 = 0x10;
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6970  067B  3010               	movlw	16
  6971  067C  0031               	movlb	17	; select bank17
  6972  067D  008D               	movwf	13	;volatile
  6973                           
  6974                           ;mcc.c: 95: OSCCON3 = 0x00;
  6975  067E  018F               	clrf	15	;volatile
  6976                           
  6977                           ;mcc.c: 97: OSCEN = 0x00;
  6978  067F  0191               	clrf	17	;volatile
  6979                           
  6980                           ;mcc.c: 99: OSCFRQ = 0x05;
  6981  0680  3005               	movlw	5
  6982  0681  0093               	movwf	19	;volatile
  6983                           
  6984                           ;mcc.c: 101: OSCTUNE = 0x00;
  6985  0682  0192               	clrf	18	;volatile
  6986  0683  0008               	return
  6987  0684                     __end_of_OSCILLATOR_Initialize:	
  6988                           
  6989                           	psect	text18
  6990  0630                     __ptext18:	
  6991 ;; *************** function _EUSART_Initialize *****************
  6992 ;; Defined at:
  6993 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;Total ram usage:        1 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    2
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_SYSTEM_Initialize
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function _EUSART_Initialize
  7023  0630                     _EUSART_Initialize:	
  7024                           
  7025                           ;eusart.c: 78: PIE3bits.RCIE = 0;
  7026                           
  7027                           ;incstack = 0
  7028                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7029  0630  002E               	movlb	14	; select bank14
  7030  0631  1299               	bcf	25,5	;volatile
  7031                           
  7032                           ;eusart.c: 79: PIE3bits.TXIE = 0;
  7033  0632  1219               	bcf	25,4	;volatile
  7034                           
  7035                           ;eusart.c: 84: BAUD1CON = 0x08;
  7036  0633  3008               	movlw	8
  7037  0634  0022               	movlb	2	; select bank2
  7038  0635  009F               	movwf	31	;volatile
  7039                           
  7040                           ;eusart.c: 87: RC1STA = 0x90;
  7041  0636  3090               	movlw	144
  7042  0637  009D               	movwf	29	;volatile
  7043                           
  7044                           ;eusart.c: 90: TX1STA = 0x24;
  7045  0638  3024               	movlw	36
  7046  0639  009E               	movwf	30	;volatile
  7047                           
  7048                           ;eusart.c: 93: SP1BRGL = 0x40;
  7049  063A  3040               	movlw	64
  7050  063B  009B               	movwf	27	;volatile
  7051                           
  7052                           ;eusart.c: 96: SP1BRGH = 0x03;
  7053  063C  3003               	movlw	3
  7054  063D  009C               	movwf	28	;volatile
  7055                           
  7056                           ;eusart.c: 100: eusartTxHead = 0;
  7057  063E  01FB               	clrf	_eusartTxHead
  7058                           
  7059                           ;eusart.c: 101: eusartTxTail = 0;
  7060  063F  0020               	movlb	0	; select bank0
  7061  0640  01D4               	clrf	_eusartTxTail
  7062                           
  7063                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  7064  0641  3008               	movlw	8
  7065  0642  00F2               	movwf	??_EUSART_Initialize
  7066  0643  0872               	movf	??_EUSART_Initialize,w
  7067  0644  00D6               	movwf	_eusartTxBufferRemaining	;volatile
  7068                           
  7069                           ;eusart.c: 104: eusartRxHead = 0;
  7070  0645  01D2               	clrf	_eusartRxHead
  7071                           
  7072                           ;eusart.c: 105: eusartRxTail = 0;
  7073  0646  01D3               	clrf	_eusartRxTail
  7074                           
  7075                           ;eusart.c: 106: eusartRxCount = 0;
  7076  0647  01FA               	clrf	_eusartRxCount	;volatile
  7077                           
  7078                           ;eusart.c: 109: PIE3bits.RCIE = 1;
  7079  0648  002E               	movlb	14	; select bank14
  7080  0649  1699               	bsf	25,5	;volatile
  7081  064A  0008               	return
  7082  064B                     __end_of_EUSART_Initialize:	
  7083                           
  7084                           	psect	text19
  7085  0697                     __ptext19:	
  7086 ;; *************** function _InitPorts *****************
  7087 ;; Defined at:
  7088 ;;		line 50 in file "main.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		status,2
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        0 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    2
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_main
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _InitPorts
  7118  0697                     _InitPorts:	
  7119                           
  7120                           ;main.c: 53: TRISA = 0b00000000;
  7121                           
  7122                           ;incstack = 0
  7123                           ; Regs used in _InitPorts: [status,2]
  7124  0697  0020               	movlb	0	; select bank0
  7125  0698  0191               	clrf	17	;volatile
  7126                           
  7127                           ;main.c: 55: LATA = 0b00000000;
  7128  0699  0196               	clrf	22	;volatile
  7129                           
  7130                           ;main.c: 58: ANSELA = 0b00000000;;
  7131  069A  003E               	movlb	30	; select bank30
  7132  069B  01B8               	clrf	56	;volatile
  7133  069C  0008               	return
  7134  069D                     __end_of_InitPorts:	
  7135                           
  7136                           	psect	intentry
  7137  0004                     __pintentry:	
  7138 ;; *************** function _INTERRUPT_InterruptManager *****************
  7139 ;; Defined at:
  7140 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;Total ram usage:        1 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    1
  7161 ;; This function calls:
  7162 ;;		_EUSART_Receive_ISR
  7163 ;;		_EUSART_Transmit_ISR
  7164 ;; This function is called by:
  7165 ;;		Interrupt level 1
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169  0004                     _INTERRUPT_InterruptManager:	
  7170                           
  7171                           ;incstack = 0
  7172  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7173                           
  7174                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7175  0005  3180               	pagesel	$
  7176  0006  0020               	movlb	0	; select bank0
  7177  0007  087F               	movf	127,w
  7178  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  7179                           
  7180                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.TXIE == 1 && PIR3bits.TXIF
      +                           == 1)
  7181  0009  1F0B               	btfss	11,6	;volatile
  7182  000A  2813               	goto	i1l35
  7183  000B  002E               	movlb	14	; select bank14
  7184  000C  1A19               	btfsc	25,4	;volatile
  7185  000D  1E0F               	btfss	15,4	;volatile
  7186  000E  2813               	goto	i1l35
  7187                           
  7188                           ;interrupt_manager.c: 55: {
  7189                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  7190  000F  3185  25DC  3180   	fcall	_EUSART_Transmit_ISR
  7191                           
  7192                           ;interrupt_manager.c: 57: }
  7193  0012  281B               	goto	i1l39
  7194  0013                     i1l35:	
  7195                           
  7196                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.RCIE == 1 && PIR3bits
      +                          .RCIF == 1)
  7197  0013  1F0B               	btfss	11,6	;volatile
  7198  0014  281B               	goto	i1l39
  7199  0015  002E               	movlb	14	; select bank14
  7200  0016  1A99               	btfsc	25,5	;volatile
  7201  0017  1E8F               	btfss	15,5	;volatile
  7202  0018  281B               	goto	i1l39
  7203                           
  7204                           ;interrupt_manager.c: 59: {
  7205                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  7206  0019  3186  264B         	fcall	_EUSART_Receive_ISR
  7207  001B                     i1l39:	
  7208                           ;interrupt_manager.c: 62: else
  7209                           ;interrupt_manager.c: 63: {
  7210                           
  7211                           ;interrupt_manager.c: 61: }
  7212                           
  7213  001B  0871               	movf	??_INTERRUPT_InterruptManager,w
  7214  001C  0020               	movlb	0	; select bank0
  7215  001D  00FF               	movwf	127
  7216  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7217  001F  0009               	retfie
  7218  0020                     __end_of_INTERRUPT_InterruptManager:	
  7219                           
  7220                           	psect	text21
  7221  05DC                     __ptext21:	
  7222 ;; *************** function _EUSART_Transmit_ISR *****************
  7223 ;; Defined at:
  7224 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;Total ram usage:        1 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_INTERRUPT_InterruptManager
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           
  7252                           ;psect for function _EUSART_Transmit_ISR
  7253  05DC                     _EUSART_Transmit_ISR:	
  7254                           
  7255                           ;eusart.c: 161: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7259  05DC  3008               	movlw	8
  7260  05DD  0020               	movlb	0	; select bank0
  7261  05DE  0256               	subwf	_eusartTxBufferRemaining,w	;volatile
  7262  05DF  1803               	skipnc
  7263  05E0  2DF6               	goto	i1l97
  7264                           
  7265                           ;eusart.c: 162: {
  7266                           ;eusart.c: 163: TX1REG = eusartTxBuffer[eusartTxTail++];
  7267  05E1  0854               	movf	_eusartTxTail,w
  7268  05E2  3E4A               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7269  05E3  0086               	movwf	6
  7270  05E4  0187               	clrf	7
  7271  05E5  0801               	movf	1,w
  7272  05E6  0022               	movlb	2	; select bank2
  7273  05E7  009A               	movwf	26	;volatile
  7274  05E8  3001               	movlw	1
  7275  05E9  00F0               	movwf	??_EUSART_Transmit_ISR
  7276  05EA  0870               	movf	??_EUSART_Transmit_ISR,w
  7277  05EB  0020               	movlb	0	; select bank0
  7278  05EC  07D4               	addwf	_eusartTxTail,f
  7279                           
  7280                           ;eusart.c: 164: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7281  05ED  3008               	movlw	8
  7282  05EE  0254               	subwf	_eusartTxTail,w
  7283  05EF  1803               	btfsc	3,0
  7284                           
  7285                           ;eusart.c: 165: {
  7286                           ;eusart.c: 166: eusartTxTail = 0;
  7287  05F0  01D4               	clrf	_eusartTxTail
  7288                           
  7289                           ;eusart.c: 167: }
  7290                           ;eusart.c: 168: eusartTxBufferRemaining++;
  7291  05F1  3001               	movlw	1
  7292  05F2  00F0               	movwf	??_EUSART_Transmit_ISR
  7293  05F3  0870               	movf	??_EUSART_Transmit_ISR,w
  7294  05F4  07D6               	addwf	_eusartTxBufferRemaining,f	;volatile
  7295                           
  7296                           ;eusart.c: 169: }
  7297  05F5  0008               	return
  7298  05F6                     i1l97:	
  7299                           
  7300                           ;eusart.c: 170: else
  7301                           ;eusart.c: 171: {
  7302                           ;eusart.c: 172: PIE3bits.TXIE = 0;
  7303  05F6  002E               	movlb	14	; select bank14
  7304  05F7  1219               	bcf	25,4	;volatile
  7305  05F8  0008               	return
  7306  05F9                     __end_of_EUSART_Transmit_ISR:	
  7307                           
  7308                           	psect	text22
  7309  064B                     __ptext22:	
  7310 ;; *************** function _EUSART_Receive_ISR *****************
  7311 ;; Defined at:
  7312 ;;		line 176 in file "mcc_generated_files/eusart.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;Total ram usage:        1 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_INTERRUPT_InterruptManager
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _EUSART_Receive_ISR
  7341  064B                     _EUSART_Receive_ISR:	
  7342                           
  7343                           ;eusart.c: 179: if(1 == RC1STAbits.OERR)
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7347  064B  0022               	movlb	2	; select bank2
  7348  064C  1C9D               	btfss	29,1	;volatile
  7349  064D  2E50               	goto	i1l1765
  7350                           
  7351                           ;eusart.c: 180: {
  7352                           ;eusart.c: 183: RC1STAbits.CREN = 0;
  7353  064E  121D               	bcf	29,4	;volatile
  7354                           
  7355                           ;eusart.c: 184: RC1STAbits.CREN = 1;
  7356  064F  161D               	bsf	29,4	;volatile
  7357  0650                     i1l1765:	
  7358                           
  7359                           ;eusart.c: 185: }
  7360                           ;eusart.c: 188: eusartRxBuffer[eusartRxHead++] = RC1REG;
  7361  0650  0819               	movf	25,w	;volatile
  7362  0651  00F0               	movwf	??_EUSART_Receive_ISR
  7363  0652  0020               	movlb	0	; select bank0
  7364  0653  0852               	movf	_eusartRxHead,w
  7365  0654  3E42               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7366  0655  0086               	movwf	6
  7367  0656  0187               	clrf	7
  7368  0657  0870               	movf	??_EUSART_Receive_ISR,w
  7369  0658  0081               	movwf	1
  7370  0659  3001               	movlw	1
  7371  065A  00F0               	movwf	??_EUSART_Receive_ISR
  7372  065B  0870               	movf	??_EUSART_Receive_ISR,w
  7373  065C  07D2               	addwf	_eusartRxHead,f
  7374                           
  7375                           ;eusart.c: 189: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7376  065D  3008               	movlw	8
  7377  065E  0252               	subwf	_eusartRxHead,w
  7378  065F  1803               	btfsc	3,0
  7379                           
  7380                           ;eusart.c: 190: {
  7381                           ;eusart.c: 191: eusartRxHead = 0;
  7382  0660  01D2               	clrf	_eusartRxHead
  7383                           
  7384                           ;eusart.c: 192: }
  7385                           ;eusart.c: 193: eusartRxCount++;
  7386  0661  3001               	movlw	1
  7387  0662  00F0               	movwf	??_EUSART_Receive_ISR
  7388  0663  0870               	movf	??_EUSART_Receive_ISR,w
  7389  0664  07FA               	addwf	_eusartRxCount,f	;volatile
  7390  0665  0008               	return
  7391  0666                     __end_of_EUSART_Receive_ISR:	
  7392  007E                     btemp	set	126	;btemp
  7393  007E                     int$flags	set	126
  7394  007E                     wtemp	set	126
  7395  007E                     wtemp0	set	126
  7396  0080                     wtemp1	set	128
  7397  0082                     wtemp2	set	130
  7398  0084                     wtemp3	set	132
  7399  0086                     wtemp4	set	134
  7400  0088                     wtemp5	set	136
  7401  007F                     wtemp6	set	127
  7402  007E                     ttemp	set	126
  7403  007E                     ttemp0	set	126
  7404  0081                     ttemp1	set	129
  7405  0084                     ttemp2	set	132
  7406  0087                     ttemp3	set	135
  7407  007F                     ttemp4	set	127
  7408  007E                     ltemp	set	126
  7409  007E                     ltemp0	set	126
  7410  0082                     ltemp1	set	130
  7411  0086                     ltemp2	set	134
  7412  0080                     ltemp3	set	128


Data Sizes:
    Strings     41
    Constant    10
    Data        7
    BSS         22
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     34      55
    BANK1            80     63      70
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[15]), 
		 -> STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[7]), main@check(BANK1[20]), main@err(BANK1[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    convertCharToInt@buffer	PTR unsigned char  size(1) Largest target is 5
		 -> main@add(BANK1[5]), 

    getValidString@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@check(BANK1[20]), 

    getValidString@oldbuffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@check(BANK1[20]), 


Critical Paths under _main in COMMON

    _writeToMemory->_DATAEE_WriteByte
    _readFromMemory->___wmul
    _printf->___lwdiv
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _getValidString->_EUSART_Read
    _convertCharToInt->___wmul
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _convertCharToInt->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0    8229
                                             28 BANK0      6     6      0
                                              0 BANK1     63    63      0
                          _InitPorts
                  _SYSTEM_Initialize
                            ___awdiv
                             ___wmul
                   _convertCharToInt
                     _getValidString
                             _printf
                     _readFromMemory
                      _writeToMemory
 ---------------------------------------------------------------------------------
 (1) _writeToMemory                                        6     1      5     976
                                              6 COMMON     1     1      0
                                              0 BANK0      5     0      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     473
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _readFromMemory                                      11     6      5     803
                                              8 COMMON     1     1      0
                                              0 BANK0     10     5      5
                    _DATAEE_ReadByte
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     236
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    18     10    1798
                                              6 BANK0     22    12     10
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _getValidString                                       5     5      0     191
                                              4 COMMON     5     5      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convertCharToInt                                    10     8      2    1528
                                              8 COMMON     1     1      0
                                              4 BANK0      9     7      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     476
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     753
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPorts
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awdiv
   ___wmul
   _convertCharToInt
     ___awdiv
     ___wmul
   _getValidString
     _EUSART_Read
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write
   _readFromMemory
     _DATAEE_ReadByte
     ___wmul (ARG)
   _writeToMemory
     _DATAEE_WriteByte

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      37       5       68.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3F      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Dec 11 02:29:45 2016

                        __CFG_CP$OFF 0000                                   l91 05A6  
                       ___awdiv@sign 0021                  ___wmul@multiplicand 0074  
                        __CFG_LVP$ON 0000                                  l306 051E  
                                l431 061D                                  l265 0238  
                                l249 0219                                  l194 060C  
                                l267 0258                                  l349 0398  
                                l269 0278                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                                  u980 04AE  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                        main@address 00C0                         ?_EUSART_Read 0070  
                       __CFG_ZCD$OFF 0000                                 l2105 0405  
                               l2131 043C                                 l2123 042B  
                               l2115 040D                                 l2203 0340  
                               l2117 0419                                 l2301 00E8  
                               l2127 0434                                 l2143 054C  
                               l2215 0363                                 l2311 0104  
                               l2145 0558                                 l2153 056D  
                               l2209 035F                                 l2217 02B8  
                               l2235 03E9                                 l2227 03AE  
                               l1523 05BA                                 l2331 0156  
                               l2149 0564                                 l1509 059B  
                               l2181 02FF                                 l2165 02D4  
                               l2333 0158                                 l2325 0144  
                               l2317 0127                                 l1711 04C4  
                               l2167 02D7                                 l2191 0315  
                               l2415 0162                                 l2351 01C2  
                               l1721 04DF                                 l2193 032F  
                               l2185 030A                                 l2329 0154  
                               l2337 015D                                 l2099 03FA  
                               l1643 0617                                 l2187 030F  
                               l2179 02EA                                 l2363 023A  
                               l2347 0171                                 l2339 016D  
                               l2275 027A                                 l1717 04D6  
                               l1709 04B8                                 l2349 01B0  
                               l2357 0209                                 l2293 007D  
                               l1583 05C0                                 l2279 0054  
                               l2369 025A                                 l2299 00DE  
                               l1783 0521                                 l1795 0541  
                               STR_1 0514                                 STR_2 04EE  
                               STR_3 0514                                 STR_4 050D  
                               STR_5 04FD                                 STR_6 0506  
                               u1045 061E                                 u1205 04C5  
                               u1055 0623                                 u1215 04CF  
                               u1225 04D7                                 u2035 0355  
                               u2140 009E                                 u2205 0142  
                               _LATA 0016                                 _LATB 0017  
                               u2135 007B                                 _LATC 0018  
                               u2240 01E8                                 u1185 04BB  
                               u2225 017F                                 u2250 022C  
                               u2090 004F                                 u2075 03AC  
                               u2235 01C0                                 u2155 00DC  
                               u1460 0475                                 u2085 03E7  
                               u2270 024C                                 u2335 029F  
                               u2185 0102                                 u2290 026C  
                               u2195 0125                                 u2367 0281  
                               u1905 042C                                 u1865 0410  
                               u1945 054F                                 u1885 041A  
                               u1965 055E                                 u1895 0424  
                               u1975 0565                                 i1l35 0013  
                               i1l39 001B                                 i1l97 05F6  
                  ?_convertCharToInt 0024                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 003B  
                 ??_convertCharToInt 0078                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000            __size_of_DATAEE_WriteByte 001C  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 0684                                ?_main 0070  
                    __end_of___awdiv 0441                        __CFG_WDTE$OFF 0000  
                    ___awdiv@divisor 0072                      __end_of___lwdiv 04E4  
                    __end_of___lwmod 0572                      ___awdiv@counter 0020  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                       main@modifier 00D6                      _DATAEE_ReadByte 0666  
                    __end_of_dpowers 04EE                                _putch 069D  
                              main@i 00C9                                main@j 00C2  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 0022  
                       __end_of_main 02B3                   getValidString@data 0075  
                 getValidString@wait 0077                       ??_EUSART_Write 0072  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 003C  
                   ___awdiv@dividend 0074                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC1REG 0119  
                             _RC1STA 011D                               _ODCONA 0F3A  
                             _ODCONB 0F45                               _RC6PPS 0F26  
                             _ODCONC 0F50                               i1l1765 0650  
                     __CFG_WDTCCS$SC 0000                               _OSCFRQ 0893  
                             _TX1REG 011A                               _TX1STA 011E  
                 __size_of_InitPorts 0006                       __CFG_PWRTE$OFF 0000  
                             ___wmul 0615                            ??___awdiv 0076  
                     __CFG_STVREN$ON 0000                            ??___lwdiv 0076  
                          ??___lwmod 0024                  _EUSART_Transmit_ISR 05DC  
                   ___awdiv@quotient 0022                               _printf 02B3  
            __end_of_DATAEE_ReadByte 0672                               putch@d 0074  
               ?_EUSART_Transmit_ISR 0070                 __size_of_EUSART_Read 001F  
                  _SYSTEM_Initialize 0672              __end_of__initialization 0037  
                 ?_SYSTEM_Initialize 0070               __size_of_writeToMemory 0028  
                     __pcstackCOMMON 0070                         __pidataBANK1 0684  
                ??_SYSTEM_Initialize 0073                     _DATAEE_WriteByte 05F9  
                      __end_of_putch 06A2                    __end_of_InitPorts 069D  
          __end_of_SYSTEM_Initialize 067B                ??_EUSART_Transmit_ISR 0070  
            __size_of_readFromMemory 0039                              ??_putch 0074  
                         __pbssBANK0 0042                 __end_of_EUSART_Write 05BD  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 003B  
                            ?___wmul 0072                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004            __size_of_convertCharToInt 0056  
                            ?_printf 0026                readFromMemory@address 0020  
                   ?_DATAEE_ReadByte 0072                        _eusartRxCount 007A  
                      _writeToMemory 0572                              _SP1BRGH 011C  
                            _SP1BRGL 011B                              _OSCCON1 088D  
                            _OSCCON3 088F                              _NVMADRH 081B  
                            _NVMADRL 081A                              _NVMDATH 081D  
                            _OSCTUNE 0892                              _NVMDATL 081C  
                            _NVMCON2 081F                              _PPSLOCK 0E8F  
               DATAEE_WriteByte@bAdd 0072                    readFromMemory@tmp 0025  
               __CFG_SCANE$available 0000                              ___awdiv 03EF  
                    __size_of___wmul 001B                              ___lwdiv 04B0  
                            ___lwmod 0545              __size_of_getValidString 002E  
                            __ptext1 0572                              __ptext2 05F9  
                            __ptext3 0441                              __ptext4 0666  
                            __ptext5 02B3                              __ptext6 069D  
                            __ptext7 059A                              __ptext8 0545  
                            __ptext9 04B0                      __size_of_printf 00E6  
                     ?_writeToMemory 0020                              _dpowers 04E4  
              _OSCILLATOR_Initialize 067B             ??_PIN_MANAGER_Initialize 0072  
                            main@add 00A7                              main@led 00D1  
         __size_of_SYSTEM_Initialize 0009                              main@err 00A0  
                            clrloop0 0692                              main@val 00CB  
                            main@tmp 00D8                 end_of_initialization 0037  
                            init_ram 068B                              initloop 068C  
                  _EUSART_Initialize 0630                   ?_EUSART_Initialize 0070  
                            printf@c 003B                              printf@f 0026  
                         main@F13685 00DF                         __pstringtext 04E4  
              __CFG_WDTCPS$WDTCPS_31 0000                           _varcounter 0055  
                ??_EUSART_Initialize 0072                    convertCharToInt@j 002B  
              __size_of_EUSART_Write 0023                       _readFromMemory 0441  
                   __CFG_FEXTOSC$OFF 0000             __end_of_DATAEE_WriteByte 0615  
            getValidString@oldbuffer 0076                            _RXPPSbits 0ECB  
          __end_of_EUSART_Initialize 064B                     _convertCharToInt 0399  
                     __end_of___wmul 0630                      ??_writeToMemory 0076  
                       _EUSART_Write 059A             convertCharToInt@modifier 0027  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 0399  
               getValidString@buffer 0078                  start_initialization 0022  
             __end_of_readFromMemory 047A      __size_of_PIN_MANAGER_Initialize 0036  
                          _InitPorts 0697                        ??_EUSART_Read 0072  
                DATAEE_ReadByte@bAdd 0072                     __CFG_LPBOREN$OFF 0000  
                           ??___wmul 0076                       _getValidString 0517  
                        __pdataBANK1 00DF                             ??_printf 0030  
        __end_of_EUSART_Transmit_ISR 05F9                          __pbssCOMMON 007A  
                          ___latbits 0002                      ?_readFromMemory 0020  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
             convertCharToInt@buffer 0026                           ?_InitPorts 0070  
         __end_of_EUSART_Receive_ISR 0666           __size_of_EUSART_Initialize 001B  
                __end_of_EUSART_Read 05DC                            __pnvBANK0 0056  
                   ___lwdiv@dividend 0074               _PIN_MANAGER_Initialize 047A  
             __end_of_getValidString 0545                 EUSART_Read@readValue 0073  
                           ?___awdiv 0072                             ?___lwdiv 0072  
                           ?___lwmod 0020                         _eusartRxHead 0052  
                       _eusartTxHead 007B                         _eusartRxTail 0053  
                       _eusartTxTail 0054         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 0056                             _BAUD1CON 011F  
                   ___lwdiv@quotient 0077                 __CFG_RSTOSC$HFINTPLL 0000  
           __size_of_DATAEE_ReadByte 000C                       __size_of_putch 0005  
                     _eusartRxBuffer 0042                       _eusartTxBuffer 004A  
                     ___wmul@product 0076                             _LATAbits 0016  
                          clear_ram0 0691                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR3bits 070F  
                    ?_getValidString 0070                            main@i_444 00CD  
                          main@i_445 00DD                            main@i_449 00CF  
                  ___wmul@multiplier 0072                           printf@flag 0034  
                          main@check 00AC                           printf@prec 0037  
              DATAEE_WriteByte@bData 0074                          ??_InitPorts 0072  
                        _EUSART_Read 05BD             __end_of_convertCharToInt 03EF  
                  ?_DATAEE_WriteByte 0072                   ??_DATAEE_WriteByte 0075  
            ??_OSCILLATOR_Initialize 0072                     __size_of___awdiv 0052  
                   __size_of___lwdiv 0034                     __size_of___lwmod 002D  
              convertCharToInt@value 0029                      ___lwdiv@divisor 0072  
                    ___lwdiv@counter 0079                             __ptext10 0517  
                           __ptext11 05BD                             __ptext12 0399  
                           __ptext21 05DC                             __ptext13 0615  
                           __ptext22 064B                             __ptext14 03EF  
                           __ptext15 0672                             __ptext16 047A  
                           __ptext17 067B                             __ptext18 0630  
                           __ptext19 0697          DATAEE_WriteByte@GIEBitValue 0075  
                      __size_of_main 0278                    ??_DATAEE_ReadByte 0074  
               __CFG_WDTCWS$WDTCWS_7 0000                           _RC1STAbits 011D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0020  
         _INTERRUPT_InterruptManager 0004                            printf@val 0035  
                           main@temp 00C4                     ??_readFromMemory 0078  
        PIN_MANAGER_Initialize@state 0072                __end_of_writeToMemory 059A  
                         _INTCONbits 000B                          _NVMCON1bits 081E  
                           intlevel1 0000                     ___lwmod@dividend 0022  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                   writeToMemory@tmp 0020                          _PPSLOCKbits 0E8F  
                           printf@ap 003A                             printf@cp 0038  
                 _EUSART_Receive_ISR 064B                  ?_EUSART_Receive_ISR 0070  
                    ___lwmod@divisor 0020                      ___lwmod@counter 0025  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 04B0                     ??_getValidString 0074  
               ??_EUSART_Receive_ISR 0070  
